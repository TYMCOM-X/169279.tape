
:	DEFINE PU/LU STATE
:	------------------
PL.RST	EQ	0			:DEACTIVE STATE
PL.PAC	EQ	1			:PENDING ACTIVATE STATE
PL.ACT	EQ	2			:ACTIVE STATE
PL.DAC	EQ	3			:PENDING DEACTIVE STATE
PL.PRC	EQ	4			:PENDING SNA RECOVERY STATE
PL.PDN	EQ	5			:PENDING LINK DOWN RECOVERY STATE
PL.PLR	EQ	6			:PENDING LINK RESET STATE

:	EQU FOR IFC<->SNA COMMANDS/RESPONSE
:	-----------------------------------
XDOWN	EQ	XLNKDW			:LINK DOWN
XRESET	EQ	XCKTDW			:CIRCUIT DOWN


:
:	DEFINE SNA->NWKC QUEUE PROCESSING TABLES
:
TABNAM	HC	GOCCRH-PSEG		:0 - ILLEGAL
	HC	GOCFLH-PSEG		:1 - XINIT (ACTIVATE)
	HC	GOCFLH-PSEG		:2 - XCLOSE (DEACTIVATE)
	HC	GOCFLH-PSEG		:3 - XDOWN
	HC	GOCFLH-PSEG		:4 - XRESET

:	TO GENERATE PROCESSING TABLE FOR SNA->NWKC DATA-Q TABLE
TABNAM	HC	GODCRH-PSEG		:0 - ILLEGAL
	HC	GODFLH-PSEG		:1 - SNETEM (END TO END MESSAGE)
	HC	GODFLH-PSEG		:2 - SNINTM (LOCALLY GENERATED MESSAGE)
	HC	GODFLH-PSEG		:3 - FD, SNRQLG(REQUEST TO START LOGON)
	HC	GODFLH-PSEG		:4 - FE, SNERR (ERROR)
	HC	GODFLH-PSEG		:5 - FF, SNPOSR(POS. RSP TO NSSTLG)

:
:	GENERATE 'FLUSH MODE' OUTPUT CMD-Q SCAN PROCESSING TABLE
:
:	TERMINAL -	FLUSH ALL CMD-Q
:
:	HOST     -	FLUSH ALL CMD-Q
:

	GENSNC(FLHOSC)			:FLUSH MODE CMD-Q

:
:	GENERATE 'FLUSH MODE' OUTPUT DATA-Q SCAN PROCESSING TABLE
:
:	TERMINAL -	FLUSH ALL ELEMENT IN DATA-Q
:
:	HOST     -	FLUSH ALL ELEMENT IN DATA-Q

	GENSND(FLHOSD)			:FLUSH MODE DATA-Q

	SUBTTL	(SNA-NOSC) DETACH MODE - OUTPUT SCAN PROCESSING 


:
:	GENERATE 'DETACH MODE' OUTPUT CMD-Q SCAN PROCESSING TABLE
:
:	TERMINAL -	IF RSP(XINIT) & PU, ISSUE RQ(XINIT) TO ALL LUS'
:			IF RSP(XINIT) & LU, ENTER NETWORK SERVICE MODE
:			IF RSP(XCLOSE) & PU, ISSUE RQ(XINIT)
:			IF RSP(XCLOSE) & LU, ISSUE RQ(XINIT)
:			IF RSP(XDOWN) & PU, CHANGE LINE STATE
:			IF RSP(XDOWN) & LU, ISSUE RQ(XINIT)
:			IF RSP(XRESET) & PU, ISSUE RQ(XINIT)
:			IF RSP(XRESET) & LU, ISSUE RQ(XINIT)
:
:	HOST     -	IF RQ(XINIT), UPDATE STATUS
:			IF RQ(XCLOSE), UPDATE STATUS
:			IF RQ(XDOWN), UPDATE STATUS
:			IF RSP(XRESET), UPDATE STATUS
:
	IF	HOSTIF

	GENSNC(DTHOSC)			:DETACH MODE CMD-Q

	CHGSNC(DTHOSC,XINIT,DTOHIN)
	CHGSNC(DTHOSC,XCLOSE,DTOHCL)
	CHGSNC(DTHOSC,XDOWN,DTOHDN)
	CHGSNC(DTHOSC,XRESET,DTOHRS)
	EI	(HOSTIF)

:
:	GENERATE 'DETACH MODE' OUTPUT DATA-Q SCAN PROCESSING TABLE
:
:	TERMINAL -	FLUSH ALL ELEMENT IN DATA-Q, EXCEPT SNRQLG
:
:	HOST     -	NO ACTION
	IF	HOSTIF

	GENSND(DTHOSD)			:DETACH MODE DATA-Q

	CHGSND(DTHOSD,SNETEM,DTONUL)
	CHGSND(DTHOSD,SNINTM,DTONUL)
	CHGSND(DTHOSD,SNRQLG,GOCCRH)
	CHGSND(DTHOSD,SNERR,DTOHER)
	CHGSND(DTHOSD,SNPOSR,DTOHPR)
	EI	(HOSTIF)


	IF	HOSTIF

:	DTOHIN:	RCV'ED ACTPU/ACTLU
:	------
:	PROCESS ACCORDINGLY
DTOHIN
	JAL	R6,GTOCMD		:FETCH CMD
	LB	R7,LUCTAB+LUPSTA,R11,	:GET CURRENT STATE
	LHL	R4,DTOHIP,R7,R7		:GET ACTION ROUTINE
	J	PSEG,R4,		:TO PROCESS

DTOHIP	HC	DHI000-PSEG		:0 - DEACTIVE STATE
	HC	DHI100-PSEG		:1 - PENDING ACTIVATE STATE
	HC	DHI200-PSEG		:2 - ACTIVE STATE
	HC	DHI300-PSEG		:3 - PENDING DEACTIVATE STATE
	HC	DHI400-PSEG		:4 - PENDING SNA RECOVERY STATE
	HC	DHI500-PSEG		:5 - PENDING LINK DOWN RECOVERY STATE
	HC	DHI600-PSEG		:6 - PENDING LINK RESET STATE

:	DHI000:	RCV'ED XINIT AND AT IDLE STATE
:	------
DHI000
	LR	R1,R0			:R1 = SCC CODE
	LHL	R3,DHI0PR,R1,R1		:GET SUB ACTION ROUTINE
	J	PSEG,R3,		:TO PROCESS

DHI0PR	HC	DHI001-PSEG		:0 - POSITIVE RESPONSE
	HC	DHI010-PSEG		:1 - NEGATIVE RESPONE
	HC	DHI020-PSEG		:2 - RESET
	HC	DHI030-PSEG		:3 - STATE ERROR

:	DHI001:	ACTIVE LU/PU WITH POSI AT PENDING ACTIVATE STATE
:	------
:	DHI010: ACTPU/ACTLU WITH NEG STATUS AT PENDING ACTIVE
:	------
:	DHI020/DHI030:	ACTPU/ACTLU WITH RESET/ERROR AT PENDING ACTIVATE STATE
:	-----
DHI020;DHI030
:	DHI200:	RCV'ED XINIT AND AT ACTIVE STATE
:	---------
DHI200
	LR	R1,R0			:R1 = SCC CODE
	LHL	R3,DHI2PR,R1,R1		:GET SUB ACTION ROUTINE
	J	PSEG,R3,		:TO PROCESS

DHI2PR	HC	DHI201-PSEG		:0 - POSITIVE RESPONE
	HC	DHI210-PSEG		:1 - NEGATIVE RESPONSE
	HC	DHI220-PSEG		:2 - RESET
	HC	DHI230-PSEG		:3 - STATE ERROR

:	DHI201/DHI210/DHI230:	ACTPU/ACTLU AT ACTIVE STATE WITH WRONG SCC
:	----------
DHI201;DHI210;DHI230
:	DHI220:	ACTPU/ACTLU AT ACTIVE STATE WITH RESET SCC
:	------
DHI220
:	DTOHCL:	RSP(XCLOSE)
:	------
DTOHCL
	JAL	R6,GTOCMD		:FETCH CMD
	LB	R7,LUCTAB+LUPSTA,R11,	:GET CURRENT STATE
	LHL	R4,DTOHCP,R7,R7		:GET ACTION ROUTINE
	J	PSEG,R4,		:TO PROCESS

DTOHCP	HC	DHC000-PSEG		:0 - DEACTIVE STATE
	HC	DHC100-PSEG		:1 - PENDING ACTIVATE STATE
	HC	DHC200-PSEG		:2 - ACTIVE STATE
	HC	DHC300-PSEG		:3 - PENDING DEACTIVATE STATE
	HC	DHC400-PSEG		:4 - PENDING SNA RECOVERY STATE
	HC	DHC500-PSEG		:5 - PENDING LINK DOWN RECOVERY STATE
	HC	DHC600-PSEG		:6 - PENDING LINK RESET STATE

:	DHC000:	RCV'ED XCLOSE AND AT IDLE STATE
:	------
DHC000
:	DHC100/DHC400/DHC500/DHC600: RCV'ED XCLOSE AT WRONG STATE
:	-----
DHC100;DHC400;DHC500;DHC600
:	DHC200:	CV'ED XCLOSE AND AT ACTIVE STATE
:	------
DHC200
	LR	R1,R0			:R1 = SCC CODE
	LHL	R3,DHC2PR,R1,R1		:GET SB ACTION ROUTINE
	LB	R12,LUCTAB+LUPSTA,R11,	:GET CURRENT STATUS (11/12/84 MIA)
	J	PSEG,R3,		:TO PROCESS

DHC2PR	HC	DHC22X-PSEG		:0 - POSITIVE RESPONSE
	HC	DHC210-PSEG		:1 - NEGATIVE RESPONE
	HC	DHC220-PSEG		:2 - RESET
	HC	DHC230-PSEG		:3 - STATE ERROR

:	DHC210/DHC230:	DEACTPU/DEACTLU AT ACTIVE STATE
:	------
DHC210;DHC230
:	DHC220:	DEACTPU/DEACTLU AT ACTIVE STATE WITH RESET OR NO
:	------
DHC220
:	DHC300:	RCV'ED XCLOSE AND AT PENDING DEACTIVATE STATE
:	------
DHC300
:	DTOHDN:	RSP(DOWN), LINK DOWN RSP FROM SNA
:	------
DTOHDN
	JAL	R6,GTOCMD		:FETCH CMD
	LB	R7,LUCTAB+LUPSTA,R11,	:GET CURRENT STATE
	LHL	R4,DTOHDP,R7,R7		:GET ACTION ROUTINE
	J	PSEG,R4,		:TO PROCESS

DTOHDP	HC	DHD000-PSEG		:0 - DEACTIVE STATE
	HC	DHD100-PSEG		:1 - PENDING ACTIVATE STATE
	HC	DHD200-PSEG		:2 - ACTIVE STATE
	HC	DHD300-PSEG		:3 - PENDING DEACTIVATE STATE
	HC	DHD400-PSEG		:4 - PENDING SNA RECOVERY STATE
	HC	DHD500-PSEG		:5 - PENDING LINK DOWN RECOVERY STATE
	HC	DHD600-PSEG		:6 - PENDING LINK RESET STATE

:	DHD000/DHD100/DHD200/DHD300/DHD400
:	------
DHD000;DHD100;DHD200;DHD300;DHD400
:	DHD500:	RCV'ED XLNKDN AND AT PENDING LINK DOWN STATE
:	------
:	IGNORE SCC
DHD500
:	DHD600:	RCV'ED XLNKDN RSP FROM SNA AND AT PENDING LINK RESET
:	------
:	IGNORE SCC
DHD600
:	DHK400:	RCV'ED CKTDN AND AT PENDING SNA RECOVER STATE
:	------
DHK400

:
:	GENERATE 'SNA/PTHRU MODE' OUTPUT CMD-Q SCAN PROCESSING TABLE
:
:	TERMINAL -	IF RSP(XINIT) & PU, RECOVERY & ENTER DETACH MODE
:			IF RSP(XINIT) & LU, ENTER NETWORK SERVICE MODE
:			IF RSP(XCLOSE) & PU, NWK RECOVERY & ENTER DETACH MODE
:			IF RSP(XCLOSE) & LU, CRT RECOVERY & ISSUE RQ(XINIT)
:			IF RSP(XDOWN), CRASH
:			IF RSP(XRESET), ????
:
:	HOST     -	IF RQ(XINIT), UPDATE STATUS
:			IF RQ(XCLOSE), ENTER DETACH MODE
:			IF RSP(XDOWN), ENTER DETACH MODE
:			IF RSP(XRESET), ENTER DETACH MODE

	IF	HOSTIF

	GENSNC(NPHOSC)			:SNA/PTHRU MODE CMD-Q

	CHGSNC(NPHOSC,XINIT,NPOHIN)
	CHGSNC(NPHOSC,XCLOSE,NPOHCL)
	CHGSNC(NPHOSC,XDOWN,NPOHDN)
	CHGSNC(NPHOSC,XRESET,NPOHRS)
	EI	(HOSTIF)

:
:	GENERATE 'SNA/PTHRU MODE' OUTPUT DATA-Q SCAN PROCESSING TABLE
:
:	TERMINAL -	PASS THRU SNETEM MESSAGE, INTERCEPT SNRQLG
:			CRASH ALL OTHER CASES
:
:	HOST     -	PASS THRU SNETEM MESSAGE
:			CRASH ALL OTHER CASES

	IF	HOSTIF

	GENSND(NPHOSD)			:SNA/PTHRU MODE DATA-Q

	CHGSND(NPHOSD,SNETEM,NPOGPT)
	CHGSND(NPHOSD,SNINTM,NPOGLO)
	CHGSND(NPHOSD,SNRQLG,GOCCRH)
	CHGSND(NPHOSD,SNERR,NPOHER)
	CHGSND(NPHOSD,SNPOSR,GOCCRH)

	EI	(HOSTIF)


:	NPOHIN:	STILL ACTIVE, BUT ZAP CIRCUIT AND ENTER DETACH MODE
:	------
:	NOTE: PUC.LUC ALWAYS AT DETACH MODE
NPOHIN
:	NPOHCL:	ZAP CIRCUIT AND ENTER DETACH MODE, DEACTIVE STATE
:	------
:	NOTE:	PU.LUC ALWAYS AT DETACH MODE
NPOHCL
:	NPOHDN:	PROGRAMMING ERROR
:	-----
NPOHDN
:	NPOHRS:	PROGRAMMING ERROR
:	-----
NPOHRS
	JAL	R10,CRASH,,
	BC	0,0,0,0FF

	EI	(HOSTIF)




:	NPOGPT:	PASS THRU THE DATA TO NETWORK(BOTH TERMIF/HOSTIF)
:	------
NPOGPT
:	NPOGLO:	DISCARD (BOTH TERMIF/HOSTIF)
:	------
NPOGLO
:	NPOTRQ:	PASS THRU MODE, RCV'ED RQ STLG
:	------
NPOTRQ
:	NPOTER:	ZAP CIRCUIT AND DEVICE
:	------
NPOTER
	JAL	R10,CRASH,,
	BC	0,0,0,0FF
:	NPOTPR:	PASS THRU MODE, RCV'ED POS RSP
:	-------
NPOTPR
	JAL	R6,GTODTA
	LR	R7,R0
	LHL	R6,NPOTRP,R7,R7
	J	PSEG,R6,

NPOTRP	HC	NPOTP0-PSEG		:0 - POS TO ST LOGON
	HC	NPOTP1-PSEG		:1 - POS RSP TO FINI LOGON
	HC	NPOTP2-PSEG		:2 - POS ACK TO LOGON SCREEN

NPOTP0
NPOTP1;NPOTP2
	JAL	R10,CRASH,,
	BC	0,0,0,0FF

	EI	(TERMIF)

	IF	HOSTIF

:	NPOHER:	ZAP CIRCUIT AND DEVICE
:	------
NPOHER
	JAL	R10,CRASH,,

	EI	(HOSTIF)

	SUBTTL	(SNA-NOSC) NATIVE SNA NS MODE - OUTPUT SCAN PROCESSING

	IF	TERMIF

:
:	GENERATE 'SNA LOGON MODE' OUTPUT CMD-Q SCAN PROCESSING TABLE
:
:	TERMINAL -	IF RSP(XINIT) & PU, RECOVERY & ENTER DETACH MODE
:			IF RSP(XINIT) & LU, ENTER NETWORK SERVICE MODE
:			IF RSP(XCLOSE) & PU, NWK RECOVERY & ENTER DETACH MODE
:			IF RSP(XCLOSE) & LU, CRT RECOVERY & ISSUE RQ(XINIT)
:			IF RSP(XDOWN), CRASH
:			IF RSP(XRESET), CRASH
:
:	HOST     -	NO LOGON MODE
:

	GENSNC(NLOSCC)			:SNA LOGON MODE CMD-Q

	CHGSNC(NLOSCC,XINIT,NLOTIN)
	CHGSNC(NLOSCC,XCLOSE,NLOTCL)
	CHGSNC(NLOSCC,XDOWN,NLOTDN)
	CHGSNC(NLOSCC,XRESET,NLOTRS)

:
:	GENERATE 'NATIVE SNA LOGON MODE' OUTPUT DATA-Q SCAN PROCESSING TABLE
:
:	TERMINAL -	PASS THRU SNETEM MESSAGE,
:			INTERPRET SNINTM MESSAGE, CRASH ON SNRQLG
:		PROCESS SNERR, AND SNPOSR
:
:	HOST     -	NO LOGON MODE

	GENSND(NLOSCD)			:NATIVE SNA LOGON MODE DATA-Q

	CHGSND(NLOSCD,SNETEM,NLOTPT)
	CHGSND(NLOSCD,SNINTM,NLOTLO)
	CHGSND(NLOSCD,SNRQLG,GOCCRH)
	CHGSND(NLOSCD,SNERR,NLOTER)
	CHGSND(NLOSCD,SNPOSR,NLOTPR)




:	NLOTIN:	PROGRAMMING ERROR
:	------
NLOTIN
:	NLOTCL:	PROGRAMMING ERROR
:	-----
NLOTCL
:	NLOTDN:	PROGRAMMING ERROR
:	------
NLOTDN
:	NLOTRS:	PROGRAMMING ERROR
:	------
NLOTRS
	JAL	R10,CRASH,,
	BC	0,0,0,0FF




:	NLOTPT:	PASS THRU DATA
:	------
NLOTPT
:	NLOTLO:	SCAN DATA
:	------
NLOTLO
:	NLOTLP:	NSM MODE, LOCAL DATA PROC TBALE
:	------
:	INDEXED BY DCBSTA
NLOTLP	HS	0
	HC	NLNS00-PSEG		:00 - IDEL, CRASH
	HC	NLNS10-PSEG		:01 - NS SLECTTION, PROCESS
	HC	NLNS20-PSEG		:02 - LG SLECTTION, PROCESS
	HC	NLNS30-PSEG		:03 - LOGON DATA, REQUEST NEEDLE
	HC	NLNS40-PSEG		:04 - PSUDLE NEEDEL, DELETE
	HC	NLNS50-PSEG		:05 - USER NAME, IF ERC SEND USERNAME
	HC	NLNS60-PSEG		:06 - USER NAME SENT, DELETE
	HC	NLNS70-PSEG		:07 - PSWD, IF ERC SEND PASSWORD
	HC	NLNS80-PSEG		:08 - PSWD SENT, DELETE
	HC	NLNS90-PSEG		:09 - LOGON STRING SENT, DELETE
	HC	NLNSA0-PSEG		:0A - DIALECT, DELETE
	HC	NLNSB0-PSEG		:0B - TIIX, DELETE
	HC	NLNSC0-PSEG		:0C - DSP, PROCESS
	HC	NLNSD0-PSEG		:0D - DSP & ASC, PROCESS
	HC	NLNSE0-PSEG		:0E - TURKEY, DELETE
	HC	NLNSF0-PSEG		:0F - CALL ACCEPT, DELETE
	HC	NLNSG0-PSEG		:10 - CIRCUIT ENABLE, DELETE
	HC	NLNSH0-PSEG		:11 - EROR/ABORT
	HC	NLNSI0-PSEG		:12 - GATEWAY, PROCESS

:	NLNS00:	IDLE STATE
:	------
NLNS00
	JAL	R10,CRASH,,
	BC	0,0,0,0FF

:	NLNS10:	NS SELECTION
:	------
NLNS10
:	NLSN1T:	PROC FOR NS SELECTION
:	------
NLSN1T	HS	0
	HC	NLNS15-PSEG		:0 - ILLEGAL
	HC	NLNS16-PSEG		:1 - CRT MANUAL LOGON
	HC	NLNS17-PSEG		:2 - CRT PRESET LOGON
	HC	NLNS18-PSEG		:3 - PRT MANUAL LOGON
	HC	NLNS19-PSEG		:4 - PRT PRESET LOGON
	HC	NLNS1A-PSEG		:5 - CRT LOGOFF
	HC	NLNS1B-PSEG		:6 - PRT LOGOFF
	HC	NLNS1C-PSEG		:7 - EXIT NSM

NLNS15					:ILLEGAL
:	NLNS20:	LG SELECTION
:	------
NLNS20
:	NLNS40:	PSEUDO NEEDLE, DELETE
:	------
NLNS40
	J	NLNSB0			:TO DELETE LOGON DATA

:	NLNS50:	USER NAME, IF ERC SEND USER NAME
:	------
NLNS50
:	NLNS60:	USERNAME SENT, DELETE
:	------
NLNS60
	J	NLNSB0			:TO DELETE LOGON DATA

:	NLNS70:	PSWD, IF ERC  SEND PASSWORD
:	------
NLNS70
	J	NLNS50			:SAME AS NLNS50

:	NLNS80:	PSWD SENT, DELETE
:	------
NLNS80
:	NLNS90:	LOGON STRING SENT, DELETE
:	------
NLNS90
:	NLNSA0:	DIALECT, DELETE
:	------
NLNSA0
:	NLNSB0:	TIIX, DELETE
:	------
NLNSB0
:	NLNSC0:	DSP
:	------
NLNSC0
:	NLNSD0:	DSP & ASC
:	------
:	NOT IMPLEMENTED, CRASH NOW
NLNSD0
	JAL	R10,CRASH,,
	BC	0,0,0,0FF

:	NLNSE0:	TURKEY LEVEL, DELETE
:	------
NLNSE0
:	NLNSF0:	CALL ACCEPT, DELETE
:	------
NLNSF0
:	NLNSG0:	CIRCUIT ENABLE
:	------
NLNSG0
	J	NLNSB0

:	NLNSH0:	DSP IN ERROR STATE OR ABORT
:	-------
:	ANY KEY ALWAYS CLEAR DSP ERROR STATE, TO NSS
NLNSH0					:R3 = LOCAL INPUT DATA BB
:	NLNSI0:	GATEWAY LOGON
:	------
NLNSI0
	JAL	R10,CRASH,,
	BC	0,0,0,0FF

:	NLOTER:	PROCESSING ERRORS
:	------
NLOTER
	JAL	R6,GTODTA
	LR	R7,R0
	LHL	R6,NLOTRR,R7,R7
	J	PSEG,R6,

NLOTRR	HC	NLOTE1-PSEG		:0 - REDISPLAY THE SCREEN
	HC	NLOTE2-PSEG		:1 - BIND FAILURE (POWER OFF)
	HC	NLOTE3-PSEG		:2 - BIND FAILURE
	HC	NLOTE4-PSEG		:3 - TIME OUT IN LU.SVC
	HC	NLOTE5-PSEG		:4 - UNABLE TO CONTINUE DUE TO LU/PU
	HC	NLOTE6-PSEG		:5 - UNABLE TO CONTINUE DUE TO INF/SNA
	HC	NLOTE7-PSEG		:6 - UNEXECUTABLE FOR LU.SVC

:	NLOTE1:	REDISPLAY THE SCREEN
:	------
NLOTE1
	LHL	R12,LUCTAB+LUCDCB,R11,
	J	NLOTL1			:ABORT (7/9/84/CHS)
	LB	R6,DCBLKS+DCBSTA,R12,
	LHL	R6,RTYTBL,R6,R6		:RE-DISPLAY TABLE
	J	PSEG,R6,		:TO RECOVER

RTYTBL
	HC	NLER00-PSEG		:00 - L.IDLE
	HC	NLER10-PSEG		:01 - L.NSMN
	HC	NLER20-PSEG		:02 - L.MENU
	HC	NLER30-PSEG		:03 - L.LSTR
	HC	NLER40-PSEG		:04 - L.PDNL
	HC	NLER50-PSEG		:05 - L.USER
	HC	NLER60-PSEG		:06 - L.USNT
	HC	NLER70-PSEG		:07 - L.PSWD
	HC	NLER80-PSEG		:08 - L.PSNT
	HC	NLER90-PSEG		:09 - L.LGOK
	HC	NLERA0-PSEG		:0A - L.DIAL
	HC	NLERB0-PSEG		:0B - L.TIIX
	HC	NLERC0-PSEG		:0C - L.LDSP
	HC	NLERD0-PSEG		:0D - L.DASC
	HC	NLERE0-PSEG		:0E - L.TRKL
	HC	NLERF0-PSEG		:0F - L.CACP
	HC	NLERG0-PSEG		:10 - L.CENA
	HC	NLERH0-PSEG		:11 - L.ERCK
	HC	NLERI0-PSEG		:12 - L.GTWY

:	NLER00:	IDLE STATE
:	------
NLER00
	JAL	R10,CRASH,,
	BC	0,0,0,0FF

:	NLER10:	NSM SCREEN SENT
:	-------
NLER10
	JAL	R7,ENTNSM
	JR	R5

:	NLER20:	LOGON SELETION SEND
:	------
NLER20
	JAL	R6,SNDLGS
	JR	R5

:	NLER30:	MANUAL LOGON 
:	-----
NLER30
	J	NLNS16

:	NLER40/NLER50/NLER60/NLER70/NLER80:
:	------
:	PSEUDO NEEDEL WAIT, USER NAME WAIT, USER NAME SENT
:	PSWD WAIT, PSWD SENT
NLER40;NLER50;NLER60;NLER70;NLER80
	JAL	R10,CRASH,,
	BC	0,0,0,0FF

:	NLER90:LOGON O.K.
:	------
NLER90
	J	GOCCRH

:	NLERA0:	DIALECT 
:	------
NLERA0
	J	GOCCRH

:	NLERB0:	TIIX
:	-----
NLERB0
	J	GOCCRH

:	NLERC0:	DSP
:	------
NLERC0
	J	GOCCRH

:	NLERD0:	DSP & ASC
:	------
NLERD0
	J	GOCCRH

:	NLERE0:	TURKEY LEVEL
:	------
NLERE0
	J	GOCCRH

:	NLERF0:	CALL ACCPET
:	------
NLERF0
	J	GOCCRH

:	NLERG0:	CIRCUIT ENABLE
:	------
NLERG0
	J	GOCCRH

:	NLERH0:	DSP ERROR STATE
:	------
NLERH0
	J	GOCCRH

:	NLERI0:	GATEWAY
:	------
NLERI0
	J	GOCCRH

:	NLOTE2:	BIND FAILURE (POWER OFF)
:	------
NLOTE2
:	JAL	R10,CRASH,,		:(7/9/84/CHS)
:	BC	0,0,0,0FF		:(7/9/84/CHS)

:	NLOTE3/NLOTE4/NLOTE5/NLOTE6/NLOTE7:	ERROR
:	----------------------------------
NLOTE3;NLOTE4;NLOTE5;NLOTE6;NLOTE7
:	JAL	R10,CRASH,,		:(7/9/84/CHS)
:	BC	0,0,0,0FF		:(7/9/84/CHS)
	JAL	R6,ZPTCKT
	JAL	R6,ZAPTLU,,
	JR	R5

:	NLOTPR:	PROCESSING POS RSP
:	------
NLOTPR
	JAL	R6,GTODTA
	LHL	R12,LUCTAB+LUCDCB,R11,	:R12 = DCB OFFSET
	LR	R7,R0
	LHL	R6,NLOTRP,R7,R7
	J	PSEG,R6,

NLOTRP	HC	NLOTP0-PSEG		:0 - POS RSP TO ST LOGON
	HC	NLOTP1-PSEG		:1 - POS RSP TO FINI LOGON
	HC	NLOTP2-PSEG		:2 - POS ACK TO LOGON SCREEN

NLOTP0
	JAL	R10,CRASH,,
	BC	0,0,0,0FF

NLOTP1
	LHL	R0,LUCTAB+LUCT.N,R11,
	RBT	R0,FNLGFL,,
	JNFS	NLOTPX
:	JAL	R10,CRASH,,		:(03/01/85 MIA)
:	BC	0,0,0,0FF
	JR	R5			:IGNORE (03/01/85 MIA)
NLOTPX					:IF D.ACTV IN DCB MODE, ENTER PASS THRU
					:ELSE, ENTER DETACH MODE
	LIS	R0,D.ACTV
	TBT	R0,DCBLKS+DCBMOD,RDCB,
	JN	NLOTPY			:CIRCUIT THERE, ENTER PASS THRU MODE
	LHI	R0,DTTOSD-PSEG		:ELSE, ENTER DETACH MODE
	STH	R0,LUCTAB+LUODPR,R11,
	LHI	R0,DTTOSC-PSEG
	STH	R0,LUCTAB+LUOCPR,R11,
	LHI	R0,L.IDLE
	STB	R0,DCBLKS+DCBSTA,RDCB,
	JR	R5
NLOTPY					:ENTER PASS THRU MODE
	LHI	R0,NPTOSD-PSEG
	STH	R0,LUCTAB+LUODPR,R11,
	LHI	R0,NPTOSC-PSEG
	STH	R0,LUCTAB+LUOCPR,R11,
	LHI	R0,DEVEND		:SEND DEVEND TO HOST IF
	STB	R0,STSSB1,,		:(TO BE COMPATIBLE WITH BSC/DSP)
	EXBR	R0,R0
	STB	R0,STSSB0,,
	LA	R9,M.STAT-1,,
	JAL	R6,SNDIIX
	LHI	R0,L.NATV		:ENTER NATIVE MODE
	STB	R0,DCBLKS+DCBSTA,RDCB,
	JR	R5

NLOTP2
	LHL	R0,LUCTAB+LUCT.N,R11,
	RBT	R0,SNDFLG,,
	JER	R5			:NO, ACTION NOW
	LHI	R2,NSFNLG^8		:INFORM SNA.LU.SVC
	LIS	R3,0
	LIS	R8,0
	JAL	R6,QDIFSN
	LHL	R0,LUCTAB+LUCT.N,R11,
	SBT	R0,FNLGFL,,		:SET FLAG
	JR	R5


	EI	(TERMIF)

	EM
