


     WRITTEN BY: JAMES WANG (HQTECH)
     VERSION   : X.25/X.75, VER 2.02
     DATE      : MAY 01,1985
     UPDATE    : AFTER 3.1.4., WRITTEN ON OCT 17, 1986 ON VERSION 3.01.
                 3.3 IS ADDED ON MAR 04, 1987.


     CONTENT


     1. XCOM ERROR CODE AND PROBE LOG MESSAGE

     2. ERROR CELLS AND ERROR CODES

     3. IMPLEMENTATION OF THE ERROR TABLE

        3.1 ERROR CODE 83, 88

            3.1.1 FGEXEC LOOP

            3.1.2 T1S500 ROUTINE

            3.1.3 CHKSIO

            3.1.4 TNMLOG

            3.1.5 PATCH -- WRITTEN BY HQTECH FOR VERSION 3.01

        3.2 ERROR CODE 1B,1C

            3.2.1. RTD140

            3.2.2. RMK080

            3.2.3. TNMLOG

            3.2.4. PATCH FOR ERROR LOG MESSAGE 1B AND 1C
        3.3 ERROR CODE 14

            3.3.1. CLEARP

            3.3.2. ZPSCLR/ZPWCAL

            3.3.3. TCLR80

            3.3.4. SNDCLR/SNDCL0

            3.3.5. TNMLOG

















     1. XCOM ERROR CODE AND PROBE LOG MESSAGE

        PROBE MESSAGE:
        
          NODE REPORT node# FROM SLOT ss XCOM TYPE aa bbcccc

          WHERE:  aa    : XCOM ERROR CODE
                  bb    : LINE OR LINK #
                  cccc  : NUMBER OF TIMES OCCURRED

        XCOM ISIS MESSAGE (ORING):

        (1). BUFFER ZAP SUP REPORT

             rport/03/dd/nnnn/00/mm/kkxx

        (2). INTERFACE SUP REPORT WITH aa >= $010

             rport/03/dd/cccc/aa/bb/kkxx

        WHERE:  rport   = 0000
                dd      = key (can be 00)
                nnnn    = buffer number zapped
                mm      = total number of 1k characters deleted
                kk      = PID, 33 or 3 is designated for xcom





      2. ERROR CELLS AND ERROR CODES

     THERE ARE TWO TABLES. THE ERROR CODE IS CALCULATED BY ADDING
$010 OR $080 TO THE INDEX OF THE CELL. SEE THE INSTRUCTION ON 
EACH TABLE.

*****************************************************************************
TABLE 1.

FOR THE FOLLOWING ERROR CELLS, THE XCOM ERROR CODE IC CALAULATED BY:

      ERROR CODE aa = $010 + $A??     WHERE ?? IS THE INDEX OF THE CELL

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

   CELL   INDEX   RMARKS
   ------ ------  --------------------------------------------------------
:**	FRAME LEVEL ERROR CELLS. (NLINKS TYPE)

   SM.A1   $A00    :INCOMING CALL REQUEST TIMER EXPIRED
   SM.A2   $A01    :NO CLEAR CONFIRMATION
   SM.A3   $A02    :NO RESTART CONFIRMATION
   SM.A4   $A03    :NO RESET CONFIRMATION
   SM.101   $A04    :CALL ABNORMALLY CLEARED AT PACKET LEVEL
   SM.102   $A05    :CALL RESET AT PACKET LEVEL ERROR
   SM.103   $A06    :INCOMING CALL REJECTED FOR SOME REASON.
   SM.104   $A07    :CALL RESET BECAUSE PAD PARAMETER (PMP)
 		    :BLOCK UNAVAILABILITY
::	PACKET LEVEL ERROR CELLS. (NLINKS TYPE)
   NBUFZP   $A08    :NO. OF OCCURANCES OF BUFFER ZAPS
   BADGFI   $A09    :IGNORED A PACKET BECAUSE OF BAD GFI
   SHTPKT   $A10    :IGNORED A PACKET BECAUSE IT WAS SHORT
   PCKER2   $A11    :SENT A CLEAR REQUEST ON AN OUT OF RANGE CHANNEL
::	RTD ERROR CELLS (NLINKS TYPE 
   RTDER3   $A12    :RECV A PACKET, NOT A CLEAR CONF., ON OUT OF RANGE CHANNEL
   RTDERA   $A13    :RECV. A CLEAR INDICATION ON A CHANNEL IN DCE WAITING STATE
   RTDERB   $A14    :RECV. A CLEAR INDICATION ON A CHANNEL IN DCE CLEAR REQ. STATE
   RTDERC   $A15    :RECV. A CLEAR INDICATION ON A CHANNEL IN FLOW CONTROL READY

   RTDDSC   $A16    :RECV. A PACKET THAT WAS NOT ACCEPTABLE AND IGNORRED IT.
   LERR1   $A17    :RECV. AN INCORRECT LEVEL ONE DATA PACKET
   LERR3   $A18    :REFERENCE OR VALUE IN LEVEL ONE PACKET IN ERROR
   LERR4   $A19    :RECEIVED A LEVEL ON PAD PARAMETER ERROR MSG
 		    :NOT LOOKED AT IN THIS DESIGN
  THE FOLLOWING 22 ERROR CELLS (20-40) ARE FOR FRENCH MULTI-LINE.
   TFGS01   $A20    :# TIMES ALL LINES DETECTED DOWN (DUE TO NO
 		    :CLOCKS OR MARKING STATE).
   TFGS02   $A21    :# OF FRAMES RECEIVED WITH TOO SMALL OF
 		    :A FRAME BYTE COUNT (<3)
   TFGS03   $A22    :# OF FRAMES RECEIVED WITH TOO MUCH DATA (>MAXFRM).
   TFGS04   $A23    :MOD 128 - # OF RESET FRAMES RECEIVED WHOSE FIRST
 		    :OCTET CONTAINED A NON-ZERO M(R) FIELD.
   TFGS05   $A24    :MOD 64 - # OF RESET FRAMES RECEIVED WHOSE
 		    :FIRST OCTET CONTAINED A NON-ZERO M(R) FIELD
 		    :OR AN INVALID B ADDRESS FIELD.
   TFGS06   $A25    :# OF RESET REQUESTS / CONFIRMATINS RCEIVED.
   TFGS07   $A26    :# OF FRAMES RECEIVED WHOSE CORRESPONDING SECTOR
 		    :IS ALREADY IN USE.
   TFGS09   $A27    :# OF EMPTY FRAMES RECEIVED WITH N(S) OUTSIDE
 		    :WINDOW.
   TFGS10   $A28    :# OF FRAMES RECEIVED WITH N(S) OUTSIDE WINDOW.
   TFGS11   $A29)   :# OF FRAMES RECEIVED WITH BAD M(R), CAUSING
 		    :A RESET FRAME TO BE QUEUED UP.
   TFGS20   $A30    :RESET REQUEST RECEIVED AND LINK DOWN.
   TFGS21   $A31    :RESET REQUEST RECEIVED AND LINK IN RESET STATE.
   TFGS22   $A32    :RESET REQUEST RECEIVED AND LINK IN MUST SEND 
 		    :RESET CONFIRMATION STATE.
   TFGS23   $A33    :RESET REQUEST RECEIVED AND LINK ASLEEP FOR FMLTD.
   TFGS24   $A34    :RESET REQUEST RECEIVED AND LINK ASLEEP ON XMIT BUT
 		    :CAN RECEIVE FRAMES.
   TFGS25   $A35    :RESET REQUEST RECEIVED AND LINK IN INFO XFER
 		    :OR RETRANSMIT STATE.
   TFGS30   $A36    :RESET CONFIRMATION RECEIVED AND LINK DOWN.
   TFGS31   $A37    :RESET CONFIRMATION RECEIVED AND LINK IN RESET STATE.
   TFGS32   $A38    :RESET CONFIRMATION RECEIVED AND LINK IN MUST SEND
 		    :RESET CONFIRMATION.
   TFGS33   $A39    :RESET CONFIRMATION RECEIVED AND LINK ASLEEP
 		    :FOR TIME FMLTD.
   TFGS34   $A40    :RESET CONFIRMATION RECEIVED AND LINK IN INFO
 		    :XFER OR RETRANSMIT.

   CLRLNG   $A41    :IGNORED A CLEAR REQUEST PACKET, TOO LONG



*********************************************************************************
TABLE 2.

FOR THE FOLLOWING ERROR CELLS, THE XCOM ERROR CODE IS CALAULATED BY:

      ERROR CODE aa = $080 + $A??       WHERE ?? IS THE INDEX OF THE CELL

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

   CELL   INDEX   REMARKS
   ------ ------  ------------------------------------------------------

:**	FRAME LEVEL ERROR CELLS (NLINE TYPE)at present, NLINE=NLINES!!
   SM.C   $A00    :RETRANSMISSIONS SENT (I-FRAME P=1))
   SM.D   $A01    :RECEIVED RETRANSMISSIONS
   SM.F   $A02    :LINK LEVEL LOOP BACK COUNTS
   SM.11   $A03    :IDLE LINE COUNTS.

   SM.E1   $A04    :RECEIVE INPUT SECTOR OVERRUN ERRORS
   SM.E2   $A05    :RESET SENT
   SM.E3   $A06    :INVALID N(S) OR N(R) - RESET SENT
   SM.E4   $A07    : RECV. A DISCONNECT FRAME ERROR.


   SIOER1   $A08    :SIO MISSING CLOCK(S), LINK RE-INITIALIZED
   SIOER2   $A09    :SIO OVER-RUN INTERRUPT COOURED

   RERR0   $A10    :BISYNC= DLE/EOT ABORT SEQUENCE RECV.
 		    :HDLC= INPUT FRAME GREATER THAN MAX FRAME SIZE
   RERR1   $A11    :BISYNC= DLE CHAR NOT FOLLOWING INITIAL SYNC CHARS
 		    :HDLC= INPUT FRAME TOO SHORT
   RERR2   $A12    :STX MISSING AFTER INITIAL DLE CHAR
   RERR3   $A13    :NOT PROPER CHAR AFTER A DLE.
   RERR4   $A14    :FRAME HAS AN INCORRECT ADDRESS BYTE
   RERR5   $A15    :FRAME MISSING AN END FLAG
   RERR6   $A16    :FRAME HAD BAD CHECKSUM
   RERR7   $A17    :FRMR/CMDR RECVD. WITH WRONG BYTE COUNT
 		    :BSC: I-FRAME RECEIVED WITH WRONG ADDRESS
   RERR8   $A18    :LAP OR LAPB: RESPONSE OTHER THAN CMDR/FRMR
 		    :RECVD. WITH WRONG BYTE COUNT
 		    :FML: SECONDARY RECV. I-FRAME WHEN NOT ARMED
   MAXERR   $A19    :MAXIMUM FRAME BYTE COUNT EXCEEDED
   CMDSNT   $A20    :FRMR/CMDR SENT
   REJSEQ   $A21    :REJ FRAME SENT BECAUSE OF SEQUENCE ERROR
   REJDSC   $A22    :REJ FRAME SENT BECAUSE OF FRAMES DISCARDED
   REJRCV   $A23    :REJ FRAME RECEIVED IN INFO XFER STATE
   NTRECV   $A24    :NO. TIMES IN TIMER RECOVERY STATE
   RSTERR   $A25    :NO. OF TIMES ENTERED RESET STATE
   ILERR1   $A26    :RECEV. ON SECONDARY AN ILLEGAL CONTOL FIELD
 		    :OR RESPONSE WHILE NOT ARMED.
   ILERR2   $A27    :SECONDARY RECV. A SARM WHILE IN DISC STATE
   ILERR4   $A28    :SECONDARY RECV. AN I-FRAME WHILE IN DISC STATE
   ILERR6   $A29    :PRIM. RECV. ILLEGAL CONTROL FIELD IN INFO XFER
   ILERR8   $A30    :PRIM. RECV AN I FRAME ERROR
   ILERRA   $A31    :RECV RR IN TIMER RECOVERY THAT ACKED ALL
 		    : OUTSTANDING FRAMES BUT F BIT NOT SET
   ILERRB   $A32    :RECV REJ IN TIMER RECOVERY THAT DID NOT
 		    :ACK ALL FRAMES AND F BIT WAS NOT SET.
   ILERRC   $A33    :RECV. REJ IN TIMER RECOVERY THAT ACKED ALL
 		    : FRAMES OUT BUT DID NOT HAVE F BIT SET.
   ILERRD   $A34    :RECV REJ IN TIMER RECOVERY THAT DID NOT ACK
 		    :ANY OUTSTANDING FRAMES.
   ILERRE   $A35    :PRIMARY SENT A SARM FOR LINK SET UP AND
 		    :RECV A UA BUT NEVER GOT A SARM IN RETURN
 		    :HAVE SENT A DISC.
   ILERRF   $A36    :A DISC WAS SENT MAX TIMES AND NO UA RECV
   ILERRG   $A37    :PRIMARY WAS WAITING FOR SECOND. TO DISCONNECT
 		    :BUT NEVER RECV. A DISC ON SECOND. AFTER
 		    :SENDING DISC MAX TIMES
   ILERRI   $A38    :SENT A RESET (SARM) MAX TIMES WITHOUT RECV AN
 		    :UA AND SECONDARY STILL ARMED. DISC IS NOW SENT
   CMDRCV   $A39    :PRIMARY RECV A CMDR WHILE IN INFO XSFER
   SRSTER   $A40    :SECONDARY RECEIVED A SARM IN INFO XSFER
 		    :OR WHILE IN CMDR CONDITION.
   EMPTYI   $A41    :RECV. AN EMPTY I FRAME
   ERFRMR   $A42    :SEC. SENT FRMR/CMDRS





     3. IMPLEMENTATION OF THE ERROR TABLE

        3.1 ERROR CODE 83, 88

     ON TABLE 2, CELL "SIOER1" HAS INDEX "$A08". THE CORRESPONDING ERROR
CODE WILL BE $088. THE ERROR CODE FOR SM.11 IS $083.

        3.1.1 FGEXEC LOOP

     ON EACH LOOP, THE HDLC IDLE LINE BIT IN THE SIO STATUS REGISTER WILL BE
CHECKED. IF THE BIT IS SET, THE COUNTER 'ABTCNT' IS INCREMENTED BY 1.

        3.1.2 T1S500 ROUTINE

     IDLELINE(sec,thresh) IS DEFINED IN TYMFILE. WHEN T1S500 IS EXECUTED, 
"ABTCNT" WILL BE CHECKED. IF THIS COUNTER HAS BEEN INCREMENTED MORE THAN
"thresh" SINCE LAST TIME IT WAS CHECKED, THE BIT TABLE "ABTTIM" WILL BE SET.
(I.E., THE LINE IS CONSIDERED TO BE IDLE FOR THIS SECOND.) IF THE LINE 
HAS BEEN IDLE FOR "sec" CONTINUOUS SECONDS, THE LINK RESET PROCEDURE IS 
ACTIVATED AND ERROR CELL 'SM.11' IS INCREMENTED BY 1. ALSO, THE BIT TABLE
"ABTTIM" IS RESET. IF THE LINE HASN'T BEEN IDLE FOR "sec" CONTINUOUS
SECONDS, THE BIT TABLE "ABTTIM" WILL BE RESET.



        3.1.3 CHKSIO

     IF THE FOLLOWING 4 ITEMS ARE SATISFIED, THE ERROR CELL SIOER1 WILL BE
INCREMENTED BY 1. ALSO, THE LINK IS RESET.
           1. HDWOPT(-NOCLK) IS DEFINED. DEFAULT IS MINUS.
           2. BIT TABLE "ABTTIM" IS RESET.
           3. IN INFO STATE.
           4. NOT BOTH TRANSMIT AND RECEIVE CLOCK IN THE SIO STATUS REGISTER
              ARE PRESENT.

(NOTE: NO ACTION IS FORCED FOR THE 1st TIME THESE 4 ITEMS ARE SATISFIED. IF
THESE 4 ITEMS ARE SATISFIED AGAIN, THEN ERROR CELLS IS INCREMENTED.)

        3.1.4 TNMLOG

     LOGINTERVAL(....) AND LOGREPORTS(...) ARE DEFINED IN TYMFILE.
CHECK THE VALUES DEFINED BY THESE TWO STATEMENTS. IF THE  VALUE OF
inteval DEFINED BY LOGINTERVAL(...) IS NOT ZERO AND LOG REPORT ENABLED, THEN
IT WILL GO TO CHECK THE ERROR CELLS. IF THE CONTENT IS NOT ZERO,
THEN IT REPORTS SUPERVISOR LOG ERROR MESSAGE (ISIS MESSAGE 03) AND RESET
ERROR CELL COUNTER TO ZERO.


     LOGINTERVAL(interval)----- DEFAULT VALUE IS 8 MINUTES. 
     LOGREPORTS(ON/OFF, r0,......,r14)-------DEFAULT IS ON, LOG REPORTS
                                10-17 AND 80-87.


        3.2 ERROR CODE 1B, 1C

     ON TABLE 1, CELL "PCKER2" HAS INDEX "$A11". THE CORRESPONDING ERROR
CODE WILL BE $01B. $01B= $010 + $A11. SAME COMPUTATION, RTDER3 IS $01C.

        3.2.1. RTD140

     WHEN CLEAR REQUEST RECEIVED FROM THE LINK, RTD140 WILL CHECK THE 
CHANNEL STATUS. EITHER CHANNEL IS OUT OF RANGE OR WITHIN RANGE BUT INACTIVE,
A CLEAR CONFIRMATION WILL BE QUEUED AND ERROR CELL RTDER3 WILL BE
INCREMENTED BY 1.
RTD --> RTD140 -->(RTD460 --> RTD480 -->RTD495)
                  OR
                  (RTD180 --> RTD400 -->RTD480 -->RTD495).

     AT THE ROUTINE RTD480, "ZILLCN" WILL BE WRITTEN INTO BUFFER TO
MARK THIS IS AN ILLEGAL CHANNEL.

        3.2.2. RMK080

     RMK MODULE SEES THIS ILLEGAL CHANNEL MARK "ZILLCN", IT JUMPS TO
PSUBD. PSUBD BUILD A CLEAR CONFIRMATION AND INCREMENT PCKER2 BY 1.

        3.2.3. TNMLOG
     THIS ROUTINE REPORT ERROR LOG. SEE 3.1.4.

        3.2.4. PATCH

    PATCH (JWANG:70)LOG1B.301 CAN BE USED TO SKIP REPORTING ERROR LOG
FOR THOSE CLEAR REQUEST WITH THE CHANNEL INSIDE THE RANGE BUT INACTIVE.
WITH THE PATCH, WE ONLY REPORT THOSE HAS THE CHANNEL OUT OF RANGE TO
BRING THE USER'S ATTENTION THAT THE CHANNEL RANGE ON BOTH SIDES OF THE
LINK MAY NOT BE MATCHED. THIS PATCH DEFINES A COUNTER INACNT TO RECORD
HOW MANY TIMES WE RECEIVE CLEAR REQUEST WITH THE CHANNEL INSIDE THE RANGE
BUT INACTIVE. NOTE THAT CCITT SAYS THE BEHAVIOR ON 3.2.1. IS NOT A
VIOLATION.


        3.3 ERROR CODE 14

     ERROR CELL SM.101 IS INDEXED BY $A04. THE ERROR CODE IS $010+$A04=$014.
THIS WILL GENERATE PROBE MESSAGE XCOM TYPE 14.

        3.3.1. CLEARP --- DO CLEAR PROCESSING.
  
     THIS ROUTINE WILL QUEUE UP THE CLEAR REQUEST AND INCREASE THE ERROR CELL
SM.101 BY 1. THIS ROUTINE IS CALLED FROM 3 PLACES. THEY ARE ZPSCLR,TCLR80,
SNDCLR/SNDCL0.

        3.3.2 ZPSCLR

     WHEN SOME CIRCUIT RUNS INTO A CONDITION THAT IT NEEDS FREE BUFFER
BUT FREE BUFFER IS EMPTY AT THIS MOMENT, THIS CIRCUIT WILL STEAL BUFFERLETS
FROM OTHER CIRCUIT WHICH OCCUPYS BIGGEST BUFFER AND CLEAR THIS VICTIM
CIRCUIT IF THIS VICTIM IS IN SEND-CALL-ACCEPT STATE OR SEND-CLEAR STATE.
IN THIS CASE, THE ROUTINE ZPSCLR/ZPWCAL IS EXCUTED AND ERROR CELL SM.101
IS IMCREMENTED BY ONE.

        3.3.3 TCLR80

     XCOM RECEIVES A CLEAR REQUEST PACKET AND FINDS THERE IS AN ERROR
INSIDE THIS PACKET. THE ROUTINE TCLR80 WILL THEN BE EXCUTED TO INCREMENT
SM.101 BY ONE.

        3.3.4 SNDCLR/SNDCL0

     WHEN XCOM RECEIVES A PACKET ON A LOGICAL CHANNEL THAT IS UNACCEPTABLE
IN THE CHANNEL PRESENT STATE, THIS ROUTINE WILL THEN BE EXCUTED.

        3.3.5. TNMLOG

     SEE 3.1.4.
 