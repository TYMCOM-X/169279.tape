:INTERNATIONAL PATCH 004  CREATED BY J/MCKIERNAN AT 30 AUG 83
:IF THE ASYNC INTERFACE SENT OUT A B1 17 00(STP) WHICH WOULD BE
:CONVERTED TO A SET 07:02(RESET ON BRAK), IT CAUSED THE CALL RESET
: TO TAKE PLACE ON RECEIPT OF A BREAK. THIS PATCH USES 07:01(INTERRUPT
: ON BREAK) FOR B1 17 00. IT CAUSES OUTPUT TO BE DISCARDED, WHICH IS
:CLOSER TO WHAT THE USERS WERE EXPECTING.
:THIS PATCH SHOULD BE INCORPORATED INTO ALL FUTURE RELEASES.
  
PATCH(830830,1500,JPM,STP3HA+10,,4)
	LHI	R0,01
ENDPATCH( Use X.3 parameter 7 value of 01 for ISIS STP 17 00 )

:INTERNATIONAL PATCH 008  CREATED BY C/STUTZMAN AT 11 APR 84
:THE DOCUMENTATION OF THIS PATCH GIVEN BY THE AUTHOR IS DETAILED 
:AS BELOW:
:THIS PATCH SHOULD BE INCORPORATED INTO ALL FUTURE RELEASES.
  
PATCH(840411,1212,STUTZMAN,TIDTCL+0A,,0E)
:		Tymnet NID (TID) to CCITT throughput class table
:	This table is updated to include new Tymnet NIDs 18-23 (decimal)
:	and to adjust the entries for NIDs decimal 10-12 and 15-17.
:
:	The logic is also modified to use the gouging level only when the
:	table entry is zero.  This will allow the correct throughput class
:	indication to be sent to the other side when the NID accurately
:	reflects the speed of the terminal.  Prior to this patch, the
:	throughput class was determined solely by the TYMNET-II gouging
:	level.  Only for Tymnet-I was the correct throughput class sent.
:
	BC	$0 33		:NID 10 = 75 bps (for 110).  TPUT class 3
				:is used for 110 baud to allow identification
				:to other TYMNET technology networks and to
				:distinguish it from 150 baud.
	BC	0		:NID 11 = Use gouging level (2780).
	BC	0		:NID 12 = Use gouging level (1200,2400,4800).
	BC	$0 77		:NID 13 = 1200 bps (No Change).
	BC	$0 99		:NID 14 = 4800 bps (No Change).
	BC	$0 33		:NID 15 = 75 bps (Baudot).
	BC	$0 88		:NID 16 = 2400 bps.
	BC	0		:NID 17 = Use gouging level (3270 CRT).
	BC	0		:NID 18 = Use gouging level (3270 printer).
	BC	$0 99		:NID 19 = 4800 bps.
	BC	$0 0AA		:NID 20 = 9600 bps.
	BC	0		:NID 21 = Use gouging level (MPVC).
	BC	0		:NID 22 = Use gouging level (audio response).
	BC	$0 73		:NID 23 = 1200/75 bps (video-tex).
CONPATCH(TCLTID+3,,2)
:		CCITT Throughput Class to Tymnet NID (TID) table
:	This table is being modified to change the entries for throughput
:	classes 3 and 4 in order to allow close approximation to the proper
:	Tymnet NID.  NID '$0 0CA' (TID "D" for 110 baud) is used for through-
:	put class 3 to distinguish it from 150 baud which has its own NID.
	BC	$0 0CA		:Throughput class 3 (75 bps) = 110 baud NID.
	BC	$0 0C5		:Throughput class 4 (150 bps) = 150 baud NID.
CONPATCH(NST220-24,,22)
:	Changes in the dispatcher logic to select a throughput class value
:	in the call request packet that is sent out on the link when we have
:	received an ISIS needle.  The changes are two-fold:  1) Always use
:	the NID/TID to select the appropriate throughput class regardless of
:	whether TYMNET-I/TYMNET-II bit is set, and  2) Use the gouging level
:	to determine the CCITT throughput class only when the entries in the
:	TIDTCL table are zero.  Zero entries in the TIDTCL table should only
:	be present for NID/TIDs which determine the TYPE of terminal device
:	originating the call and not the SPEED of the devce.
	JN	NST220		:Jump if we got a good tput class for this NID
	LHI	R2,77		:Here if zero entry in TIDTCL.  Load 1200 baud
				:t.class for these special TYMNET-I NID types.
	LB	R3,LO6,,	:Get the TYMNET gouging level of this call.
	CLHI	R3,80		:Test the TYMNET-II bit.
	JLFS	NST220		:Treat TYMNET-I special NIDs as 1200 baud.
	NHI	R3,7F		:Mask off the TYMNET-II bit.
	CLHI	R3,MAXCS	:Check if .GT. highest known gouging level.
	J	PA1PTR,,	:Continue patch in the patch area.
CONPATCH(PA1PTR,,1C)
	JGFS	NST230		:Jump if got a new gouging level.
	LR	R4,RL		:Get the line number
	SLLS	R4,CST.SC	:Compute the line offset into the CST.LT table.
	LB	R2,CST.LT,R3,R4 :Get the tput class from the gouging level.
	J	NST220,,	:Return to the old logic.
:	Here if we got a new TYMNET gouging level.  Although this is a less
:	efficient way of programming this situation, this case shouldn't ever
:	happen.  Thus, this is more efficient for handling the normal case
:	where we have a known gouging level.
NST230	LHI	R2,MAXTC	:Use max CCITT tput class for new gouging level
	J	NST220,,	:Return to the old logic.
ENDPATCH(Update TID to/from Throughput Class mapping tables and logic.)

:INTERNATIONAL PATCH 010 CREATED BY S/CHOU  AT 09 MAR 84
:WHEN USER LOGS IN THE XOM OF X I/F,SOME INPUT LENGTHS
:OF LOGIN STRINGS IN "MODIFY GATEWAY" COMMAND WILL
:CRASH THE WHOLE SLOT.(E.G.NUMBERS BETWEEN 40 AND 79,
:8000 OR MORE.
:THIS PATCH SETS THE MAXIMUN LENGTH OF LOGIN STRING TO 36.
:IT ALSO CHANGES LH AND AH TO LHL AND A TO PREVENT THE SIDE
:EFFECT OF LH AND AH(PROPAGATING MSB THROUGH HIGH ORDER
:BYTE-BITS 0:15).
:THIS PATCH SHOULD BE INCORPORATED INTO ALL FUTURE RELEASE.

     IF   XOM
PATCH(840309,1025,SCHOU,XMCGA6+12,,06)
        J       PA1PTR,,
CONPATCH(PA1PTR,,16)
        LHL     R1,XOMPAR+6,R9,         :LOAD LENGTH OF STRING TO REG.1
        CLHI    R1,20                   :TEST IF OVER THE MAXIMUM LENGTH
        JG      TOEXOM,,                :TABLE OVERFLOW ERROR
        J       XMCGA6+18,,
CONPATCH(XMCGA6+1A,,6)
        A       R1,GAFREE,,             :ADD LENGTH OF STRING TO FREE POINTER
CONPATCH(XMCG15,,06)
        J       PA1PTR,,
CONPATCH(PA1PTR,,22)
        LHL     R0,XOMPAR+6,R9,         :LOAD LENGTH OF STRING TO R0
        CLHI    R0,20                   :TEST IF OVER THE MAXIMUM LENGTH
        JG      TOEXOM,,                :TABLE OVERFLOW ERROR
        LHL     R0,XOMPAR+6,R9,         :LOAD LENGTH OF STRING TO R0
        A       R0,GAFREE,,             :ADD LENGTH OF STRING TO FREE POINTER
        J       XMCG15+0C               
ENDPATCH(Change LH to LHL  and set maximum length of string to 36)
   EI   XOM

:INTERNATIONAL PATCH 014   CREATED BY J/WANG AT 31 JULY 84
:IF THE X INTERFACE SEND DIALECT RESPONSE TO ACCEPT ASCI, IT WILL DISCARD
:THE INFORMATIONS EXCEPT TRANSIT NET ID LIST LEFT IN FACILITY BUFFER.
:THIS TID AREA IN FAC BUFFER SHOULD BE KEPT FOR LATER USE. IF IT EMPTIES ALL
:FAC BUFFER, IT WILL CAUSE GCI CRASH.
:THIS PATCH SHOULD BE INCORPORATED INTO ALL FUTURE RELEASE.
:
:RESET EXTWDR BIT TO FIX ONE OF THE 06 CRASH
:

   IF   X.75
PATCH(840731,1529,JWANG,GME040,,6)
        J       PA1PTR,,
CONPATCH(PA1PTR,,58)
        LI      R12,808100
        JAL     R9,SNDDR,,
        LHL     R1,DPORT,,              :GET DPORT#
        RBT     R1,EXTWDR,,             :NO NEED TO WAIT FOR DIALECT RESPONSE
                                        :ALSO, FIX ONE OF THE 06 CRASH.
        LHL     R1,FACBUF,,
        CBCT(R9)
CNT     LR      R9,R9
        JE      CONUP,,
        LHL     R1,IPORT,,
        LB      R0,TNICNT,R1,
        SR      R9,R0
       JLE      CONUP,,
        LHL     R1,FACBUF,,
DISCD   JAL     R4,GCI,,
        SIS     R9,1
        JG      DISCD                   :DISCARD FACBUF ,BUT KEEP TNID LIST
        J       CONUP,,
ENDPATCH(IF ASCII, DISCARD FACILITY BUFFER, BUT KEEP TRANSIT NET ID)
   EI   X.75

:INTERNATIONAL PATCH 016  CREATED BY J/OLIVETO AT 28 AUG 84
: IF X.75 CODE IS IN THE SLOT, THE WAY TO HANDLE BLACK BALL 
:IS TO INITIATE RESET AND SEND BACK A GREAY BALL.
:THIS PATCH SEND RESET CAUSE 07(NETWORK CONGESTION) INSTEAD
:OF 05(LOCAL PROCEDURE ERROR).
:THIS PATCH SHOULD BE INCORPORATED INTO ALL FUTURE RELEASES.
  
	IF X.75
PATCH(840828,1600,JOLIVETO,ICBLK+0E,,4)
        LHI     R13,RSECAU^8!DIA152
CONPATCH(ICGRY+6,,4)
	LHI	R13,RSECAU^8!DIA152
ENDPATCH(Send RESET cause of 07 instead of 05 if X.75)
	EI

:INTERNATIONAL PATCH 019   CREATED BY J/WANG AT 5 SEP. 84
:AFTER RECEIVED A CALL REQUESTED PACKET FROM THE X LINK, THE CHKADR ROUTINE
:SHOULD NOT ZERO OUT ANYTHING PAST DNIC IN DTESAX IN THE CASE THAT PACKET
:OPTION NONTN SET TO BE ON. WITHOUT THIS PATCH, THE X INTERFACE WILL SEND
:BACK CALL CONNECTED PACKET WITH ONLY 4 DIGITS OF CALLED ADDRESS. THE
:OTHER SIDE I/F WILL CLEAR THE CALL IF LENGTH OF CALLED ADDRRESS IN CALL
:REQUEST IS GREATER THAN 4.
:THIS PATCH ALSO FORCES X INTERFACE NOT TO CLEAR THE CALL ON UNKNOWN DNIC IF
:PACKET OPTION NONTN IN ON.
:THIS PATCH SHOULD BE INCORPORATED INTO ALL FUTURE RELEASE.

PATCH(840905,1430,JWANG,CKAD22-1C,,4)
        J       CKAD25          :DON'T TOUCH DTESAX
CONPATCH(PCR460+26,,1e)
        TBT     RL,NNTN.F,,     :TEST NNTN.F FIRST
        JN      PCR500
        LB      R0,DTESAX+1,R7, :GET 1ST BUTY OF DNIC
        NHI     R0,0F0
        JE      PCR466
        SIS     R8,4
        JLE     PCR500          :# OF CLD < 5 , GO TO SEARCH CUD
CONPATCH(PCR430,,6)
        J       PA1PTR,,
CONPATCH(PA1PTR,,36)
        LHL     R3,,R4,
        JN      PCR430+0A,,     :IF UNKNOWN DNIC, SEARCH CUD OR ASK"PLEASE
                                : LOGIN". NEVER CLEAR THE CALL
        TBT     RL,NNTN.F,,
        JE      RTECAL,,
        LHL     R3,IPORT,,
        RBT     R3,GATWAY,,     :RESET GATWAY FLAG
        ST      R5,TEMP,,
        ST      R6,TEMP1,,
        J       PCR500,,
ENDPATCH(NOT CLEAR THE CALL IF UNKNOWN DNIC. NOT TOUCH DTESAX IF NNTN.F=1)

:INTERNATIONAL PATCH 020   CREATED BY J/WANG AT 5 SEP.84
:IF THE PACKET OPTION IS ON, X INTERFACE WILL IGNORE THE NTN CALLED ADDRESS.
:WE SUGGEST THAT X INTERFACE WILL NOT CLEAR THE CALL IF # OF THIS NTN < 4.
:THIS PATCH IS SUGGESTED TO BE INCORPORATED INTO ALL FUTURE RELEASE WITH PATCH
:019.

      IF X.75
PATCH(840905,1430,JWANG,CKAD20,,6)
        J       PA1PTR,,
CONPATCH(PA1PTR,,1A)
        TBT     RL,NNTN.F,,
        JN      CKAD20+8,,      :IF NNTN.F=1, ACCEPT #CLD < 4
        CLI     R2,4
        JLR     R14
        J       CKAD20+8,,
ENDPATCH(IF NNTN.F=1, NOT CLEAR THE CALL, SEARCH FOR MORE LOGON INFO)
      EI  X.75

:INTERNATIONAL PATCH 030 CREATED BY S/WONG AT 10 DEC 84
:  This patch is created for MayneNet of Australia
: but is applicable to all X.25/X.75 offerings if the interface
: is liable to receive calls from 2780/3270 type devices.
: The X interface may receive X.29 messages from the link when
: a 2780 device logs on under virtual mode environment. Under
: certain circumstances, the X interface may go into local echo
: mode and turn around characters being sent by the 2780 device.
: This is generally not acceptable to the 2780 device and adverse
: result may occur.
: This patch is designed to examine the stored TID from needle
: and make an assumption that TID greater than CC must be 2780 like
: devices ! No echo control will be send to the origination circuit
: and the X interface will reset the local echo bit if the test
: is true upon receiving an X.29 message from the link.
: A modified version of this patch should be implemented in the
: further Source Code if the full mechanism on handshaking between
: the 2780 (virtual) to XCOM is known. At this time, this patch
: has been tested with no obserable side effects.

PATCH(841211,1210,SWONG,L1P2F,,6)
        J       PA1PTR,,
CONPATCH(PA1PTR,,34)
        LB      R1,ORGTID,R8,
	CLHI	R1,0D2
	JE	L1P2I5
	CLHI	R1,0D1
	JE	L1P2I5
        LIS     R1,X3ECHO
        TBT     R1,X3FLGS,R2,
        JN      L1P2I,,
        J       L1P2F+0C,,
L1P2I5	RBT	R8,PAR0,
	J	4,R9
ENDPATCH(Do not send echo control to 2780 like devices and disable local echo)

:  PATCH 31  CREATED BY JWANG AT 10-JAN-85
:  THIS PATCH IS USE FOR VERSION 2.01 AND VERSION 2.02
:
:  PROBLEM: WHEN PDP BUILD AN AUX CIRCUIT TO AUSTPAC VIA RCA/WUI,IT IS ALWAYS
:           CLEARED BY AUSTPAC. THE REASON IS THE TC VALUE IS NOT ACCEPTED
:           BY AUSTPAC.
:           THIS WILL CAUSE THE LOADII FAILED TO DO GATEWAY LOADING/DUMP
:           TO MayNet VIA RCA/WUI AND AUSTPAC.
:  TASK   : ALWAYS USE THE MAX TC VALUE DEFINED ON SYSGEN TIME TO BUILD
:           CALL REQUEST PACKET WHEN NEEDLE SHOWS TID IS C0.

PATCH(850110,1250,jwang,NST220-2A,,6)
        J       PA1PTR,,
CONPATCH(PA1PTR,,1A)
        JNFS    .+0E            :IF TID IS NOT C0,GO GET VALUE FROM TIDTCL
        LHL     R2,TTR.LT,RL,   :GET THE MAX TC DEFINED BY TCLASS
        J       NST220,,
        LB      R2,TIDTCL,R2,   :GET VALUE FROM TIDTCL TABLE
        J       NST220-24,,     :GO CHECKING THE VALUE IN TIDTCL TABLE
ENDPATCH(USE MAX TC FOR CALL REQUEST WHEN NEEDLE SHOWS TID IS C0)

:   INTERNATIONAL PATCH 034 CREATED BY JWANG AT JULY-24-84
:   THIS PATCH CAN BE USED FOR VERSION 2.01, 2.02, 3.00
:   PROBLEM: FACILITY BUFFER ZAP. CRASH CODE D8.
:            IF LOTS OF DATAS COMING INTO IRING, XCOM MOVES DATAS FROM RING
:            TO DIBUFER, AND THEN IEDBUFER. WHEN THERE IS NO FREE BUFER, IT
:            TRY TO FIND A BIGGEST BUFERS NOT BEEN USED BY THIS CIRCUIT.
:            THE BIGGEST IS IN FACBUF, AND SO IT CRASHED.
:   TASK:    THE COUNTER/FLAG IS 4 BYTES. SO , EACH TIME ENTER THE LOOP
:            TO COMPARE THE BUFERS COUNTER, IT SHOULD SUBSTRACT 4 BYTES. 
:            OTHERWISE THE FLAG WILL BE USED AS COUNTER. 

PATCH(840724,1735,JWANG,FNDZ30,,2)
        SIS     R1,4
ENDPATCH(FIX ONE OF THE D8 CRASH)

:   INTERNATIONAL PATCH 035  CREATED BY JWANG AT JULY-23-84
:   SKIP FINDING THE BIGGEST BUFFER IN FAC/IEC BUFFER AREA.

PATCH(840723,1340,JWANG,FNDZ20,,6)
        J       PA1PTR,,
CONPATCH(PA1PTR,,24)
        CLHI    R1,FACBIA               :IN FAC AREA?
        JGE     FNDZ30,,                :SKIP IT
        CLHI    R1,IEDBIA               :IN IED AREA?
        JGE     FNDZ20+0C,,             :IF YES, CONTINUE TO COMPARE
        CLHI    R1,IECBIA               :IN IEC AREA?
        JGE     FNDZ30,,                :IF YES, SKIP IT
        J       FNDZ20+12,,
ENDPATCH(AVOID FACBUF/IECBUF ZAP WHEN FREE BUFER POOL IS EMPTY)

:   INTERNATIONAL PATCH 037   CREATED BY JWANG  AT 04-FEB-85
:   special patch for C&W -------- gateway call with dnic greater than 7fff.
:   THIS PATCH CAN BE USED FOR VER 2.01 & VER 2.02
:   PROBLEM: THE GATEWAYSTATEMENT WITH DNIC GREATER THAN 7FFF DOESN'T
:            WORK. WHEN IT RECEIVES A CALL REQUEST WITH DNIC GREATER
:            THAN 7FFF(GATEWAY CALL), IT WILL CLEAR THIS CALL WITH
:            THE REASON "UNKNOWN DNIC" EVEN WE HAVE GATEWAYSTATEMENT
:            FOR THIS DNIC.
:   TASK:    IN PCR430+10,
:            "CLH R0,2,R4" CAUSES THIS PROBLEM----- THE SIGN BIT WILL BE
:            APPENDED TO THE LEFTMOST 16 BITS AND THEN COMPARED WITH R0
:            IF THE LEFT MOST BIT IS 1 OF THE HALFWORD STARTING AT (R4)+2.
:            THIS PATCH IS TO AVOID USING CLH & CH.
:

PATCH(850204,1030,JWANG,PCR430+10,,6)
        J       PA1PTR,,
CONPATCH(PA1PTR,,14)
        LHL     R1,2,R4,
        CR      R0,R1                   :DNIC MATCH?
        JE      PCR440,,                :IF MATCH,JUMP
        J       PCR435,,                :DIDN'T MATCH,GO BACK TO LOOP
ENDPATCH(IF DNIC GREATER THAN 7FFF,WE CAN'T USE CLH/CH TO COMPARE DNIC)
  