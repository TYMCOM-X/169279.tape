C
C************************
C
C       CDM-GNORM
C
C************************
C
C
C       THIS PROGRAM IS THE SOLE PROPERTY AND CONFIDENTIAL MATERIAL
C       OF MCI.
C       DO NOT DISCLOSE TO OR USE BY THIRD PARTY.
C
C***********************************************************************
C
C       CHANGE HISTORY
C
C       11-MAR-94       CREATED STRIPPED DOWN VERSION FOR CDM-GNORM
C                       INTERFACE (DJM)
C
C************************************************************************
        INTEGER IM,J,NLINE,ILIN,MYREG,N,NUMCG
        INTEGER SC(3),SP(3),PT(3),PD(4),TODAY
        INTEGER DT,TI,NDUP,NTUP,INFO(64),K,NUMBER,I,COC(2),NNET(2),CCC
        INTEGER TNUM,TIM1,TOT,SPEN,MONIT
        INTEGER DISC(169),TOGO,SRT,TYPE,X,SYS,DECIS
        INTEGER HOST,SITP(4),NUMTYPE,FLAG,UNAM(3)
        INTEGER SY,EM,ED,D,NT,L,M,P,NUMNET,NUMATTN,DDAT,NUD,NUMPROB
        INTEGER NET(2),FF,TTIM,H2,H1,NO,SL,HO,ATTN,SDAT,EH,EM
        INTEGER ST(3),NUM1,HIATTN,SITC(4),NOD1,HST1,CIRCKT(4),TROUB1(4)
        INTEGER REPN(4),REPF(4),BAS1(3),BAS2(3),BAS4(3),CG
        INTEGER BAS5(3),BAS6(3),BAS7(3),BAS8(3),BAS9(3),HH,LOWATTN
        INTEGER VERS,COL,COR,TDAT,ORDER
        INTEGER NEWVAL(4),M1,M2,M3,M4,M5,IERT,IERC,YY,AS
        INTEGER TOT1,NTIM,TUS,IVER,SVER,RS,RECORD,ME,ATIM
        INTEGER STAT,Y,B,C,TOT2,LIC,XX,F2,JJ1,CSC,LO,HO1,F1
        INTEGER CUST,ANS,NDAT,SEE,WELL,Z,V1,V2,V3,V4,V5,V6
        INTEGER CKT(4),TRB(4),DUP,DF,REV,TUP,MAINT,CBY,DSP,REGEN,REG
        INTEGER DRP,JM,JD,JY,TT,H3,H4,H5,Q,HN,BILL,ESC,INT,COMMNT(4)
        INTEGER PRO,TECH(3),COV,CNAM(3),KHST,OKH,STH,EHR,PORT
        INTEGER TYP,CDAT,LOC(4),VER,T40,HRGN,SRGN,ONUM(2),HQCC,CCOD
        INTEGER WHO,BAS10(3),STYP,ALREADY,TIM2,WK
        DATA VERS/' 6.61'/
        DATA REV/'  0  '/
 
        DIMENSION STATUS(9)
        DATA (STATUS(L),L=1,9)/'OPEN ','MONIT','CLSD ','TRACK',
     1  '   ','   ','   ','   ','TRACK'/
        DOUBLE PRECISION VNET(60)
        DATA (VNET(K),K=1,60)/'TYMNET','DECNET','MCIRNET','NINNET',
     1  'IPLCNET','ITSNET ','BOFANET','ALASCOM','DUNET  ','FIRNNET',
     2  'HKBGNET','      ','TRWNET','       ','DIALNET','SWBNET',
     3  'WESTNET','AUTONET','MNSQANET','EXXNET','MGTBNET','UCCPAC',
     4  'DATAPAK','         ','XEROX ','SLIGOS','NISNET','UKNET ',
     5  'PHILIPS','ANZPAC','ITALNET','CWNET ','ITANET','TELERANET',
     6  'SCANDUTCH','NTSNET','BABYLONNET','       ','LENET ',
     7  'PAYMENT','FORDNET','MTSSNET','XADANET ','EUSKONET',
     8  'HELLERNET','PRIMEX  ','ANYLABNET','THNET  ','ARMYCORP',
     9  'EDINET','DIALCOM','KTNET ','AFNET ','VIDEONET','SFBNET',
     A  'CEINET','C&WBERMUDA','NETBILLING','PNBNET','CPRMNET'/
        DOUBLE PRECISION CODE(120)
        DATA (CODE(K),K=1,66)/'NONE     ','          ','          ',
     1  '          ','          ','          ','          ',
     2  '          ','         ','PWR SUPPLY','BOARD ','CABLE ',
     3  'PERIPHERAL','BPLN/CHASS','SETUP PROB','REPL/ENGN ',
     4  '          ','          ','          ','CONFIG CHG',
     5  'VRSN UPGRD','VRSN DNGRD','KNWN PTCH','NEW PTCH','UNSPPRTD',
     6  'PIR REQRD','NSR SBMTTD','MO.INF.REQ','VENDOR    ',
     7  'ASYC MODEM','SYNC MODEM','DGTL MODEM','BT PAD    ',
     8  'BRDG/RTR','SWARE CNFG','         ','         ','          ',
     9  '          ','OP/PCDR ER','SWARE/VNDR','HWARE/VNDR',
     A  'CHANGE','DOWNTIME','          ','          ','          ',
     B  '          ','          ','DIAL-UP','ANALOG','DIGITAL',
     C  'SS 800/950','T-1       ','          ','          ',
     D  '          ','          ','          ','CFG GL EXC',
     E  'DEADENDED','VALIDATION','IRC/PTT','          ',
     F  '          ','          '/
        DATA (CODE(K),K=67,120)/'        ','        ','        ',
     G  'SCHD OUT','UNSCHD OUT','CUST. SITE',
     H  '          ','          ','          ','          ',
     I  '          ','          ','          ','PROJECT   ',
     J  '          ','          ','          ','          ',
     K  '          ','          ','          ','          ',
     L  '          ','SLT RLOD','SDUMP&RLOD','NODE RLOD','NDUMP&RLOD',
     M  'DOCUMENTN ','NTF       ','SLOT H&E  ','REF-OTH-TK',
     N  'CWT       ','TRACKING  ','P/L RESET ','          ',
     O  '          ','          ','          ','          ',
     P  '          ','          ','          ','          ',
     Q  '          ','          ','          ','          ',
     R  '          ','          ','          ','          ',
     S  '          ','          ','          '/
        DIMENSION NETOP(26)
        DATA (NETOP(I),I=1,26)/'NSSC','NETCN','ONTYM','CS800','BTDUB',
     1  'NTENG','BTAUS','DBTAR','ORDPR','NISOP','BTUK','BTHK','NTS  ',
     2  'EDICN','BTALS','PORTS','GCSCL','MSGCN','     ','BTSNG',
     3  'ECSC ','ENMC ','LNKOP','UK800','TSIS','BTCAN'/
        DIMENSION BLK(1)
        DATA BLK/'   '/
        DIMENSION AM(12)
        DATA (AM(IM),IM=1,12)/'JAN','FEB','MAR','APR','MAY','JUN','JUL',
     1  'AUG','SEP','OCT','NOV','DEC'/
        DIMENSION ATTN(151)
        DATA (ATTN(I),I=1,149)/'NFTEL','NFONE','NFOCN','NFONY','LNKOP',
     1  'UKOM ','BTDUB','NFOKP','NFOMX','SCRTY','NFOVA','TPPGL',
     2  'TSIS ','HKHW ','NFOCH','NFOPL','FMTOP','NFOSL','FIRST',
     3  'NFODA','FRSPT','NFOHO','NFOAT','NFOTA','INFRA','TSOPS','NFTEC',
     4  'NFODE','ONT11','ONT12','NFOEB','NFOSB','NFOLA','DESS ',
     5  'CRSUP','NTS','NSSC','ONTYM','NETCO','CS800','STS  ','CUSTM',
     6  'WTSSF','NMSUK','WTSIR','CTSCH','WTSDA','CTSDE','CTSSL','ETSNY',
     7  'ETSNJ','ETSBO','NSSCP','FTMSG','PORTS','MCI','DBVAL','ROTRY',
     8  'MDUK','BTGER','PI','BTWCA','CHAD','    ','BTSWE','ATCOM',
     9  'CLOSE','TELCO','ETSG ','ORDIN','MFG','NTD','SCA  ',
     A  'VIDSP','BTBNL','HTSUK','BTFR','ECSG ','STSUK','DOC','NCCTS',
     B  'ORDCU','CWSRV','ELNUS','NIS','SIRTI','TRT','CAT  ','DLCOP',
     C  'SUNCA','GDC','HKSW ','PRMGR','EMSG','DBTAR','AFPUB','AFPRI',
     D  'ETSAT','BTKOR','CSGER','BTAP','BTUK','FSNL ','FSBEL','BTSZ',
     E  'UKCS ','BTITA','BTSP','TELEN','TSBNL','MSGTS','SNGTL','BTAUS',
     F  'NBILL','BTHK','FSFR','UK800','BTEVL','EDICN','MSGCN',
     G  'TIS  ','FEDPI','UKTSG','NTENG','TPVIE','NOVPS','FRCS ','CUSAF',
     F  'FLMTC','IPLC ','ECSC ','ENMC ','FSGER','FSITA','FSSZ ',
     I  'FSSPA','FSSWE','BTSNG','ITSNY','GCSCL','FLMCU','EDITS',
     J  'EDIDV','EDIOP','SDSKO','PHCOM','PADSP','SDSMA','MAYTL'/
        DATA (ATTN(I),I=150,151)/'BTALS','OTHER'/
        DIMENSION TYPE(97)
        DATA (TYPE(P),P=1,97)/'DIALU','ATC','BPS','PAP','MCP','BDLC',
     1  'MSVO','CONST','SUN','SWTCH','XCOM','ISIS','PBH',
     2  'PBT','SNA','BBXS','X.75','X.PC','ACOM','4.8','9.6','14.4',
     3  '19.2','56KB','T1','HWOCL','SDB','XDIAL','OUTD','VALID',
 
     4  'PROJ','TLNET','PERIF','OEM','SUP','ONTY','PRB','UN2',
     5  'TII','EDI ','EMSGA','CMTI','UTS','TMCS','NEM','RAM','NVAL',
     6  '    ','    ','NALRT','PICO','CMS','ALC','    ','FRE',
     7  'CMH','    ','ELF','HSA','VIDEO','MUX','NTCN','     ','TDI',
     8  'TIIG','DIALC','    ','     ','UTIL','SDLC','INTLS','TURBO',
     9  'PTI','PHR','CDM','CMF','CPC','CPPP','NADA','CPAS','BITS',
     A  '     ','     ','    ','PADS ','PAPER','     ','FRAD','OTHER',
     B  'CRDU','ITS','MFX','EZTYM','    ','PXL  ','NODE ','CMTU '/
        DOUBLE PRECISION REPRB(35)
        DATA (REPRB(I),I=1,35)/'OPR INTCPT','RNA       ','BUSY      ',
     1  'GARBAGE   ','NO CARRIER','TONE, NR  ','NR TO TID ',
     2  'SLOW RESP.','USER DRPD.','OUTDIAL   ','MODEM     ',
     3  'INTL. ACC.','PAP PROB. ','NODE DOWN ','NODE RSTRT',
     4  'HOST DOWN ','HOST MSSNG','SLOT RSTRT','UTIL CODE ',
     5  'LEASE LINE','HW/MS LINK','DBU FAILED','PERIPHERAL',
     6  'CHRONIC   ','HOST SHUT ','NONE      ','OTHER     ',
     7  'DIALCOM   ','NETBILLING','EDIBILLING','ETSBILLING',
     8  'DCOMBILLNG','ONTBILLING','          ','          '/
 
20      CONTINUE
        NUMNET=60
        NUMATTN=151
        NUMTYPE=97
        NUMCG=26
        NUMPROB=35
        FLAG=0
        I=0
10      CALL USERNA(UNAM)
        TYPE 55,VERS,REV
55      FORMAT(1X'MCI',1H','S NETWORK OPERATIONS PROBLEM TRACKING ',
     1  'PROGRAM VERSION',A5,A5,/,/)
        CALL DBSTRT(-1,1,-4,0,1,0,5,0,-1,0,-4,1,1,1,5,1)
        CALL DBERR($4930,IERT,IERC,0)
        CALL DBOPEN('(NSSC)NPAP')
31      CALL DBFIND(1,1,UNAM)
        CALL DBNREC(NUMBER)
        IF (NUMBER.GT.0) GOTO 40
30      TYPE 33
33      FORMAT(/1X,'ACCESS TO PROGRAM DENIED')
        CALL DBEND
        CALL BYE
40      CALL DBGREC($30,1)
        CALL ONINT($4930)
        CALL DBVAL(2,FLAG,3,SRT,4,SYS,5,CG,6,DRP,7,XX,8,LOWATTN,
     1  9,HIATTN,10,LO,11,HO1,12,MYREG,13,ALREADY,14,CSC)
41      IF (FLAG.GT.0) DECODE(10,631,VNET(FLAG))NNET
        IF (FLAG.LT.1) ENCODE(10,43,NNET)
631     FORMAT(2A5)
43      FORMAT('  ALL  ')
        IF (XX.LT.0) LIC=1
        ENCODE(15,3200,BAS1)
        ENCODE(15,3201,BAS2)
        ENCODE(15,3202,BAS4)
        ENCODE(15,3203,BAS5)
        ENCODE(15,3204,BAS6)
        ENCODE(15,3205,BAS7)
        ENCODE(15,3206,BAS8)
        ENCODE(15,3207,BAS9)
        ENCODE(15,3229,BAS10)
        ENCODE(841,207,DISC)
3200    FORMAT('(TNT)BASE1  ')
3201    FORMAT('(TNT)BASE2  ')
3202    FORMAT('(TNT)BASE4  ')
3203    FORMAT('(TNT)BASE5  ')
3204    FORMAT('(TNT)BASE6  ')
3205    FORMAT('(TNT)BASE7  ')
3206    FORMAT('(TNT)CALBAK ')
3207    FORMAT('(TNT)OCALBK ')
3229    FORMAT('(TNT)PROFIL ')
46      I=0
        IF (SRT.LT.1) GOTO 59
47      TYPE 175
C
C       PROMPT FOR THREE INITIALS, INPUT THE THREE, BREAK THEM APART AND
C       BE SURE THAT THE FIRST TWO CHRACTERS ARE LETTERS.  FROCE ALL
C       THREE TO UPPER CASE
C
        ACCEPT 176,ME
176     FORMAT(A3)
        CALL HISET(ME)
        DECODE(3,30176,ME)M1,M2,M3
30176   FORMAT(A1,A1,A1)
        IF ((M1.EQ.' ').OR.(M2.EQ.' ')) GOTO 47
C
C       IF THEY ARE VALID JUMP AHEAD
C
        IF ((M1.GE.'A').AND.(M1.LE.'Z')) GOTO 56
        GOTO 47
56      CALL DBERR($4930,IERT,IERC,0)
C
C*************************************************************************
C
C       THIS IS WHERE WE START AND RETURN FOR COMMANDS
C
C*************************************************************************
C
59      TYPE 60
60      FORMAT(/1X,'ENTER COMMAND: ',$)
        ACCEPT 65,ANS
C
C       FORCE INPUT TO UPPER CASE FOR FORTRAN
C
        CALL HISET(ANS)
65      FORMAT(A5)
        IF ((SRT.GE.1).AND.(ANS.EQ.'S2')) GOTO 215
        IF ((XX.LT.0).AND.(ANS.EQ.'A3')) GOTO 4035
        IF ((XX.LT.0).AND.(ANS.EQ.'C2')) GOTO 3765
        IF ((LOWATTN.GT.0).AND.(ANS.EQ.'TU')) GOTO 4345
        IF (ANS.EQ.'Q') GOTO 99999
        TYPE 58,ANS
58      FORMAT(1X,'INVALID COMMAND: ',A5)
        GOTO 59
C
C       A FEW FORMAT STATEMEMTS
C
120     FORMAT(I6)
175     FORMAT(/1X,'ENTER "YOUR" INITIALS PLEASE : ',$)
C
C
C       ADD STATUS FOR A TICKET
C
215     TYPE 3766
        CALL DBOPEN(BAS1)
216     ACCEPT 120,TNUM
        IF (TNUM.EQ.0) GOTO 4950
218     CALL DBFIND(1,1,TNUM)
        CALL DBNREC(NUMBER)
        IF (NUMBER.GT.0) GOTO 217
        TYPE 202,TNUM
202     FORMAT(1X,'INVALID TICKET NUMBER: ',I6)
        GOTO 4950
C
C       ENTER HERE IF THE TICKET TO BE STATUSED DOES EXIST
C
217     CALL DBGREC($4840,1)
        CALL DBVAL(15,STAT,5,SDAT,6,TIM1)
        CALL DBERR($4930,IERT,IERC,0)
219     TYPE 220
220     FORMAT(1X,'TICKET STATUS:',/,$)
        DO 230 ILIN=1,4
        N=(ILIN*16)-15
        ACCEPT 225,(INFO(J),J=N,N+15)
225     FORMAT(16A5)
        NLINE=ILIN
        IF (INFO(N).NE.'.    ') GOTO 230
        ILIN=4
230     CONTINUE
232     CALL GTIM(TIM1,SDAT,LIC)
        IF ((INFO(1).EQ.'.    ').OR.(INFO(1).EQ.'     ')) GOTO 265
        CALL DBERR($261,IERT,IERC,0)
        GOTO 263
261     IF (IERT.NE.7) GOTO 4955
        TYPE 1379
        CALL WAIT(4.0)
263     CALL DBOPEN(BAS2)
        CALL DBUPD(-1)
        CALL DBFIND(1,1,TNUM)
        CALL DBNREC(ORDER)
        ORDER=ORDER+1
264     CALL DBADD(1,TNUM,2,SDAT,3,TIM1,4,ME,'STAT',STATUS(L),
     2  7,INFO,8,UNAM,9,ORDER,5,RS,10,STYP)
        CALL DBCLOSE
265     CALL DBERR($4930,IERT,IERC,0)
233     FORMAT(320(1H ))
        TYPE 234
234     FORMAT(1X,'TICKET STATUS COMPLETED.')
        ENCODE(320,233,INFO)
        GOTO 59
C
C       THIS WILL CREATE A TICKET NUMBER TO START THE DATA BASE WITH
C       OR TO RESTORE IT WHEN ONE IS GONE.
C
1400    CALL DBOPEN(BAS1,BAS4)
1420    CALL DBSET(2)
        CALL DBSYSV(1,0,SDAT)
        CALL DBFIND('ALL')
        CALL DBNREC(RECORD)
        CALL DBSET(1)
        CALL DBFIND('ALL')
        CALL DBNREC(NUMBER)
        TNUM=NUMBER+RECORD
1421    CALL DBFIND(1,'GT',TNUM)
        CALL DBNREC(RECORD)
        IF (RECORD.EQ.0) GOTO 1422
        CALL DBGREC($1400,RECORD)
        CALL DBVAL(1,TNUM)
        GOTO 1421
1422    TNUM=TNUM+1
        CALL DBERR($1410,IERT,IERC,0)
        GOTO 1412
1410    IF (IERT.NE.7) GOTO 4955
        CALL WAIT(3.0)
1412    CALL DBOPEN('(TNT)TNUM')
        CALL DBUPD(-1)
        CALL DBFIND('ALL')
        CALL DBNREC(NUMBER)
        IF (NUMBER.EQ.1) GOTO 1426
        CALL DBDEL
        CALL DBADD(1,TNUM,2,9)
        GOTO 1411
1426    TNUM=TNUM+1
        CALL DBCHNG(1,TNUM)
1411    CONTINUE
1427    CALL DBERR($4930,IERT,IERC,0)
        IF (N.EQ.5) GOTO 138
        GOTO 4950
C
C       ENTER HERE TO CLOSE TICKET
C
3765    TYPE 3766
3766    FORMAT(1X,'TICKET #: ',$)
        CALL DBOPEN(BAS1)
        ACCEPT 120,TNUM
        CALL RTIM(NTIM,NDAT)
        CALL DBSET(1)
        CALL DBFIND(1,1,TNUM)
        CALL DBNREC(NUMBER)
        IF (NUMBER.GT.0) GOTO 3774
        TYPE 904,TNUM
904     FORMAT(1X,'INVALID TICKET: ',I6)
        GOTO 4950
3774    CALL DBGREC($903,NUMBER)
        CALL DBVAL(15,STAT,14,PROD,51,MAINT,52,SVER,49,DUP,
     1  50,TUP,54,ELM,5,SDAT,6,TIM1,35,V6,36,V1,37,V2,38,V3,39,V4,
     2  55,COC,46,ESC,9,NET,31,CNAM,40,NODE,53,HH)
903     CALL DBOPEN(BAS8)
        CALL DBFIND(1,1,TNUM,1,6,1,0)
        CALL DBSRCH(11,1,'   ')
        CALL DBNREC(DECIS)
        IF (DECIS.EQ.0) GOTO 918
C
C
C       IF WE ARE HERE THEN CALL BACKS EXIST, WE NEED TO CHANGE THE
C       REFER THEN GO TO THE COMMAND PROMPT
C
C
914     TYPE 919
919     FORMAT(1X,'CALL BACKS EXIST, PROVIDE REFER GROUP: ',$)
        ACCEPT 120,L
C
C       IF REFER GROUP IS 0 HEAD BACK TO COMMAND PROMPT
C
        IF (L.EQ.0) GOTO 59
        CALL DBERR($9921,IERT,IERC,0)
        GOTO 9920
9921    IF (IERT.NE.7) GOTO 4955
        TYPE 1379
        CALL WAIT(3.0)
9920    CALL DBOPEN(BAS1)
        CALL DBUPD(-1)
        CALL DBFIND(1,1,TNUM)
        CALL DBCHNG(51,ATTN(L))
        CALL DBCLOSE
        TYPE 9922
9922    FORMAT(1X,'REFER COMPLETED.')
        GOTO 59
C
C       WE ARE HERE, AFTER FINDING THAT NO
C       CALL BACKS EXIST SO WE ENTER A STATUS FOR THE CLOSING OF
C       THE TICKET
C
918     TYPE 920
920     FORMAT(/'+WHY IS THIS TICKET BEING CLOSED ?',/)
        DO 930 ILIN=1,4
        N=(ILIN*16)-15
        ACCEPT 225,(INFO(J),J=N,N+15)
        NLINE=ILIN
        IF (INFO(N).NE.'.    ') GOTO 930
        NLINE=ILIN-1
        GOTO 935
930     CONTINUE
935     RS=4
        IF (ELM.GT.0) GOTO 939
        IF (DUP.EQ.0) CALL GETIM(TUP,DUP)
        CALL MTTR(SDAT,DUP,TIM1,TUP,ELM,HOUR)
        CALL VDIS(V4,V6,ELM)
939     TYPE 738
738     FORMAT(1X,'RESOLUTION CODE: ',$)
        ACCEPT 937,CHO,CCC
937     FORMAT(I2,I3)
932     CALL DBERR($931,IERT,IERC,0)
        GOTO 934
931     IF (IERT.NE.7) GOTO 4955
        TYPE 1379
        CALL WAIT(4.0)
934     CALL DBOPEN(BAS1)
        CALL DBUPD(-1)
        CALL DBFIND(1,1,TNUM)
C
C       FORCE ELM NEGATIVE FOR TRACK ONLY TICKETS - PREVENT FROM
C       APPEARING IN THE MTTR REPORTS
C
        IF (STAT.NE.'TRACK') GOTO 938
        TET=ELM*2
        ELM=ELM-TET
938     CALL DBCHNG(11,4,'STAT','CLSD',54,ELM,56,ME,
     1  34,V5,35,V6,36,V1,37,V2,38,V3,39,V4,26,NDAT,27,NTIM)
        IF (STAT.EQ.'OPEN') CALL DBCHNG(49,DUP,50,TUP)
        IF (COC(1).EQ.'.....') CALL DBCHNG(55,CODE(CCC),17,CCC)
        CALL DBCLOSE
        CALL DBERR($10935,IERT,IERC,0)
        GOTO 936
10935   IF (IERT.NE.7) GOTO 4955
        TYPE 1379
        CALL WAIT(4.0)
936     CALL DBOPEN(BAS2)
        CALL DBUPD(-1)
        CALL DBFIND(1,1,TNUM)
        CALL DBNREC(ORDER)
        ORDER=ORDER+1
        CALL DBADD(1,TNUM,2,NDAT,3,NTIM,4,ME,5,RS,6,'CLSD',7,INFO,8,
     1  UNAM,9,ORDER)
942     ENCODE(320,233,INFO)
        CALL DBFIND(1,1,TNUM)
        CALL DBCHNG(5,8)
        CALL DBCLOSE
        CALL DBERR($943,IERT,IERC,0)
        GOTO 945
943     IF (IERT.NE.7) GOTO 4955
        TYPE 1379
        CALL WAIT(4.0)
945     CALL DBOPEN(BAS6)
        CALL DBUPD(-1)
        CALL DBFIND(1,1,TNUM)
        CALL DBNREC(NUMBER)
        IF (NUMBER.EQ.0) GOTO 944
        CALL DBCHNG(6,8)
        CALL DBGREC($944,NUMBER)
        CALL DBCHNG(4,DUP,5,TUP,7,'CLSD',13,CCC)
944     CALL DBCLOSE
        CALL DBERR($4930,IERT,IERC,0)
        TYPE 946
946     FORMAT(1X,'TICKET CLOSE COMPLETED.')
        GOTO 59
 
C
C************************************
C
C       ROUTINE TO FIND OPEN TICKETS IN BASE1
C
C************************************
C
4035    TYPE 3975
3975    FORMAT(/1X,'TICKET TYPE: ',$)
        JJ1=0
        CALL DBOPEN(BAS1)
        ACCEPT 65,WELL
        CALL HISET(WELL)
C
C       FORCE THE INPUT TO UPPER CASE
C
        IF (WELL.EQ.'N') GOTO 4040
        IF (WELL.EQ.'H') GOTO 4045
        IF (WELL.EQ.'C') GOTO 4050
        TYPE 3976,WELL
3976    FORMAT(1X,'INVALID TYPE: ',A5)
        CALL DBCLOSE
        GOTO 59
C
C       IF TYPE IS NODE START HERE
C
4040    TYPE 188
188     FORMAT(1X,'NODE: ',$)
        ACCEPT 120,NOD1
4041    TYPE 110
110     FORMAT(1X,'NETWORK NUMBER: ',$)
        ACCEPT 120,K
        IF ((K.GE.1).AND.(K.LE.NUMNET)) GOTO 4044
        TYPE 111,K
111     FORMAT(1X,'INVALID NETWORK: ',I2)
        CALL DBCLOSE
        GOTO 59
C
C       IF TYPE IS A HOST ENTER HERE TO GET INFO FROM USER
C
4045    TYPE 190
190     FORMAT(1X,'HOST: ',$)
        ACCEPT 194,HST1
194     FORMAT(I049    TYPE 188
        ACCEPT 120,NOD1
4046    TYPE 110
        ACCEPT 120,K
        IF ((K.GE.1).AND.(K.LE.NUMNET)) GOTO 4044
C
C       IF K IS NOT IN THE NETWORK RANGE, TELL THE USER AND BAIL
C
        TYPE 111,K
        CALL DBCLOSE
        GOTO 59
C
C       WE ARE HERE TO START A TICKET FOR A CIRCUIT
C
4050    TYPE 1203
1203    FORMAT(1X,'CIRCUIT: ',$)
        ACCEPT 100,CIRCKT
C
C       FORCE CIRCUIT FIELD TO UPPER CASE TO INSURE SIMERTRY
C
        CALL UPCASE(CIRCKT)
        TYPE 110
        ACCEPT 120,K
        IF ((K.GE.1).AND.(K.LE.NUMNET)) GOTO 4044
        TYPE 111,K
        GOTO 59
 
C
C       ENTER HERE WHEN WE KNOW WHAT COMPONENT WE ARE LOOKING FOR.
C       WE NOW LOOK TO SEE IF A SEVERITY ONE TICKET EXISTS
C
4044    IF(WELL.EQ.'N')CALL DBFIND(9,1,VNET(K),1,40,1,NOD1,1,
     1  52,1,1,1,15,1,'OPEN')
        IF(WELL.EQ.'H')CALL DBFIND(9,1,VNET(K),1,42,1,HST1,1,
     1  40,1,NOD1,1,52,1,1,1,15,1,'OPEN')
        IF (WELL.EQ.'C') CALL DBFIND(43,1,CIRCKT,1,15,1,'OPEN',1,
     1  52,1,1)
        CALL DBSRCH(49,1,0)
        CALL DBNREC(DECIS)
        IF (DECIS.EQ.0) GOTO 140
        CALL DBERR($59,IERT,IERC,0)
        CALL DBGREC($59,DECIS)
4055    CALL DBVAL(1,TNUM)
C
C       WE HAVE A TICKET ALREADY, SO WE WILL GET A STATUS AND PLACE
C       A NOTE THAT CDM DETECTED ANOTHER OUTAGE
C
        CALL RTIM(TIM1,SDAT)
        TYPE 177
        DO 160 ILIN=1,4
        N=(ILIN*16)-15
        ACCEPT 225,(INFO(J),J=N,N+15)
        NLINE=ILIN
        IF (INFO(N).NE.'.    ') GOTO 160
        GOTO 161
160     CONTINUE
C
C       LET'S OPEN BASE TWO TO PUT THE STATUS IN BASE2
C
161     IF ((INFO(1).EQ.'.  ').OR.(INFO(1).EQ.'   ')) GOTO 59
        CALL DBERR($163,IERT,IERC,0)
        GOTO 162
163     IF (IERT.NE.7) GOTO 4955
        TYPE 1379
        CALL WAIT(4.0)
162     CALL DBOPEN(BAS2)
        CALL DBUPD(-1)
        CALL DBFIND(1,1,TNUM)
        CALL DBNREC(ORDER)
        ORDER=ORDER+1
        CALL DBADD(1,TNUM,2,SDAT,3,TIM1,4,ME,'STAT','OPEN',7,INFO,
     1  8,UNAM,9,ORDER,5,1,10,1)
        CALL DBCLOSE
        CALL DBERR($4930,IERT,IERC,0)
C        
C       NOW WE WILL TELL GNORM TO USE THE EXISTING TICKET
C
        TYPE 4056,TNUM
4056    FORMAT(1X,'USE TICKET: ',I6)
        ENCODE(320,233,INFO)
        GOTO 59
C
C       ENTER HERE TO GET TICKET NUMBER FOR NEW TICKET AFTER CHECKING
C       THAT A SEVERITY ONE TICKET FOR THE COMPONENT DOES NOT EXIST
C
140     CALL DBERR($150,IERT,IERC,0)
        GOTO 152
150     IF (IERT.NE.7) GOTO 4955
        CALL WAIT(2.0)
152     CALL DBOPEN('(TNT)TNUM')
        CALL DBUPD(-1)
        CALL DBFIND(2,1,9)
        CALL DBNREC(NUMBER)
        IF (NUMBER.EQ.1) GOTO 153
        N=5
        GOTO 1400
153     CALL DBGREC($138,1)
        CALL DBVAL(1,TNUM)
        TNUM=TNUM+1
        TOT=TNUM
        CALL DBCHNG(1,TNUM)
138     CALL DBCLOSE
        TYPE 171,TNUM
171     FORMAT(1X,'TICKET NUMBER: ',I6)
C
C       NOW THAT WE HAVE A TICKET NUMBER LET'S GET THE HEADER INFO
C
4054    CALL DBOPEN(BAS10)
        IF (WELL.EQ.'N') CALL DBFIND(17,1,WELL,1,4,1,NOD1,1,3,1,VNET(K))
        IF (WELL.EQ.'H')CALL DBFIND(17,1,WELL,1,6,1,HST1,1,3,1,VNET(K),
     1  1,4,1,NOD1)
        IF (WELL.EQ.'C') CALL DBFIND(17,1,WELL,1,7,1,CIRCKT)
        CALL DBNREC(RECORD)
        IF (RECORD.GT.0) GOTO 3986
C
C       IF WE DO NOT HAVE A RECORD FOR THE HEADER, OH WELL LETS MOVE ON
C
        CALL DBFIND(17,1,'Z')
        CALL DBGREC($4020,1)
        CALL DBVAL(1,SITC,2,SITP,5,SLOT,8,TROUB1,9,TECH,10,CNAM,11,
     1  KHST,12,COV,13,PRO,14,STH,15,EHR,16,PORT,18,PROD,21,LOC,22,
     2  VER,23,T40,25,SRGN,26,HRGN,29,SDAT,30,INT,31,F1)
        IF (WELL.EQ.'C') NOD1=0
        GOTO 4020
C
C       ENTER HERE WHEN RECORD HEADER FOUND
C
3986    CALL DBGREC($4020,1)
4009    CALL DBVAL(1,SITC,2,SITP,3,NET,4,NOD1,5,SLOT,6,HST1,7,CIRCKT,
     1  8,TROUB1,9,TECH,10,CNAM,11,KHST,12,COV,13,PRO,14,STH,15,EHR,16,
     2  PORT,18,PROD,21,LOC,22,VER,23,T40,25,SRGN,26,HRGN,
     3  29,SDAT,30,INT,31,F1)
C
C       ENTER HERE FROM A2 OR A3 COMMAND
C
4020    TYPE 170
170     FORMAT(1X'REPORTED BY: ',$)
        ACCEPT 100,REPN
100     FORMAT(4A5)
        CALL DBERR($4930,IERT,IERC,0)
        IF (REPN(1).NE.'     ') GOTO 180
4022    CALL NPHONE(REPN,REPF,UNAM,JJ1)
C
C       RETURN HERE AFTER ENETERING THE REPORTED BY DATA
C       NEED TO PROMPT FOR "TIME: "
C
180     CALL GTIM(TIM1,SDAT,LIC)
        TYPE 177
177     FORMAT(1X,'PROBLEM DESCRIPTION:',/,$)
        DO 179 ILIN=1,10
        N=(ILIN*16)-15
        ACCEPT 178,(DISC(J),J=N,N+15)
178     FORMAT(16A5)
        NLINE=ILIN
        IF (DISC(N).NE.'.    ') GOTO 179
        NLINE=NLINE-1
        ILIN=10
179     CONTINUE
        I=1
204     TYPE 2531
2531    FORMAT(1X'REFER GROUP: ',$)
        ACCEPT 120,M
        IF((M.GE.LOWATTN).AND.(M.LE.HIATTN)) GOTO 201
        TYPE 2532,M
2532    FORMAT(1X,'INVALID GROUP: ',I3)
        GOTO 59
201     I=1
208     TYPE 203
203     FORMAT(1X,'SEVERITY: ',$)
        ACCEPT 120,SVER
        IF ((SVER.GE.1).OR.(SVER.LE.4)) GOTO 210
        TYPE 1204,SVER
1204    FORMAT(1X,'INVALID SEVERITY: ',I1)
        GOTO 59
210     TYPE 209
209     FORMAT(1X,'COMMENT: ',$)
        ACCEPT 100,COMMNT
        I=1
8112    TYPE 8111
8111    FORMAT(/1X,'"REPORTED" PROBLEM: ',$)
        ACCEPT 120,L
        IF ((L.GE.1).AND.(L.LE.NUMPROB)) GOTO 8113
        TYPE 18112,L
18112   FORMAT(1X,'INVALID PROBLEM: ',I2)
        GOTO 59
8113    IF (WELL.EQ.'N') NT=1
        IF (WELL.EQ.'H') NT=2
        IF (WELL.EQ.'C') NT=3
        ESC=1
        IF ((M.EQ.41).OR.(M.EQ.36).OR.(M.EQ.21).OR.(M.EQ.25)
     1  .OR.(M.EQ.29).OR.(M.EQ.30).OR.(M.EQ.72).OR.(M.EQ.81)) ESC=2
        ENCODE(5,8114,DISC(165))SVER,CG
8114    FORMAT(I1,I2,'  ')
1376    CALL DBERR($1377,IERT,IERC,0)
        GOTO 1378
1377    IF (IERT.NE.7) GOTO 4955
        TYPE 1379
1379    FORMAT(1X,'DATA BASE BUSY...')
        CALL WAIT(3.5)
1378    CALL DBOPEN(BAS1)
        CALL DBUPD(-1)
        CALL DBADD(1,TNUM,2,PRO,3,T40,5,SDAT,6,TIM1,7,REPN,8,REPF,
     1  9,VNET(K),10,ME,11,0,12,SITC,13,SITP,14,PROD,15,'OPEN',16,
     2  DISC,22,LOC,23,KHST,24,COV,25,COMMNT,28,STH,29,EHR,30,PORT,
     3  31,CNAM,32,TECH,33,VER,36,1,37,1,38,1,40,NOD1,41,SLOT,42,HST1,
     4  43,CIRCKT,44,TROUB1,45,1,46,ESC,48,NT,51,ATTN(M),52,SVER,53,CG,
     5  20,SRGN,21,HRGN,50,'.....',27,'.....',55,'NONE      ',47,F1,
     6  19,ONUM,57,REPRB(L),17,1,4,F2)
        ENCODE(841,207,DISC)
207     FORMAT(841(1H ))
        CALL DBCLOSE
        CALL DBERR($211,IERT,IERC,0)
        GOTO 213
211     IF (IERT.NE.7) GOTO 4955
        TYPE 1379
        CALL WAIT (3.5)
213     CALL DBOPEN(BAS6)
        CALL DBUPD(-1)
        CALL DBADD(1,TNUM,2,SDAT,3,TIM1,7,'OPEN',8,ATTN(M),10,VNET(K),
     1  11,SVER,12,PROD,14,ME,17,F1)
        CALL DBCLOSE
        CALL DBERR($4930,IERT,IERC,0)
        IF (NOD1.GT.0) GOTO 3360
        TYPE 214
214     FORMAT(1X,'TICKET ADD COMPLETED.')
        GOTO 59
C*************************************************************
C
C
C       ROUTINE TO FIND OUT WHAT HAS HAPPENED IN THE LAST 30
C       DAYS. IF THERE HAS BEEN ANY TICKETS OPENED - THEN A STATUS
C       WILL BE ADDED THAT THIS NODE HAS BEEN INVOLVED WITH OTHER
C       PROBLEMS.
C
3360    TOT=TNUM
        L=1
        Z=1
        M=1
        CALL DBOPEN(BAS1,BAS4)
        CALL DBSET(1)
        NDAT=SDAT-30
3368    IF ((CIRCKT(1).EQ.'     ').OR.(CIRCKT(1).EQ.'.    ')) GOTO 3370
        IF (Z.EQ.2) GOTO 3369
        CALL DBFIND(40,1,NOD1,1,9,1,VNET(K),'OR',9,1,VNET(K),
     1  1,43,1,CIRCKT)
        GOTO 3375
3369    CALL DBFIND(40,1,NOD1,1,9,1,VNET(K),1,49,'GE',
     1  NDAT,'OR',9,1,VNET(K),1,49,'GE',NDAT,1,43,1,CIRCKT)
        GOTO 3375
3370    IF (Z.EQ.2) GOTO 3371
        CALL DBFIND(40,1,NOD1,1,9,1,VNET(K))
        GOTO 3375
3371    CALL DBFIND(40,1,NOD1,1,9,1,VNET(K),1,49,'GE',NDAT)
3375    CALL DBNREC(NUMBER)
        IF ((NUMBER.GT.1).AND.(Z.EQ.1)) GOTO 3380
        IF ((NUMBER.GT.0).AND.(Z.EQ.2)) GOTO 3380
        IF (Z.EQ.2) GOTO 3390
        Z=2
        CALL DBSET(2)
        GOTO 3368
3380    IF (L.EQ.2) GOTO 3381
        L=2
3381    IF ((Z.EQ.1).AND.(J.EQ.NUMBER-1)) GOTO 3382
        IF ((Z.EQ.2).AND.(J.EQ.NUMBER).AND.(M.NE.2)) GOTO 3384
        GOTO 3389
3382    CALL DBSET(2)
        IF ((CIRCKT(1).EQ.'     ').OR.(CIRCKT(1).EQ.'.    ')) GOTO 3387
        CALL DBFIND(40,1,NOD1,1,9,1,VNET(K),1,49,'GE',NDAT,'OR',
     1  9,1,VNET(K),1,49,'GE',NDAT,1,43,1,CIRCKT)
        GOTO 3386
3387    CALL DBFIND(40,1,NOD1,1,9,1,VNET(K),1,49,'GE',NDAT)
3386    CALL DBNREC(RECORD)
        TOGO=NUMBER+RECORD
        CALL DBSET(1)
        GOTO 3383
3384    TOGO=NUMBER+1
3383    ENCODE(320,3391,INFO)NOD1,CIRCKT,TOGO,TNUM,IM,ID,PROD,NUD,
     1  CKT,SVER,HOST,STAT
3391    FORMAT('NODE # ',I5,' OR CIRCUIT # ',4A5,'HAS BEEN INVOLVED ',
     1  'IN ',I2,' TICKETS  ',' OVER THE LAST 30 DAYS. THE MOST REC',
     2  'ENT TICKET IS #',I6,' OPENED ON 'I2,1H/,I2,' FOR',4X,'PROD',
     3  'UCT ',1H",A5,1H",' ON NODE ',I5,' WITH CIRCUIT  ',4A5,
     4  '. THE SEVERITY  WAS A ',I1,' EFFECTING HOST #',I6,'. THE ',
     5  'CURRENT STATUS IS ',A5,1H.)
        M=2
        CALL DBERR($3392,IERT,IERC,0)
        GOTO 3393
3392    IF (IERT.NE.7) GOTO 4931
        TYPE 1379
        CALL WAIT(5.0)
3393    CALL DBOPEN(BAS2)
        CALL DBUPD(-1)
        CALL DBFIND(1,1,TOT)
        CALL DBNREC(RECORD)
        ORDER=RECORD+1
        CALL DBADD(1,TOT,2,SDAT,3,TIM1,4,'SYS',5,0,6,'OPEN',7,INFO,8,
     1  'PAPER',9,ORDER,10,0)
        ENCODE(320,3373,INFO)TOGO,NOD1,CIRCKT
3373    FORMAT('USE THE ',4H"N" ,'COMMAND TO LEARN ALL OF THE ',I2,
     1  ' TICKET NUMBERS.'22X,' NODE ',I5,' OR CIRCUIT ',4A5,' MAYBE ',
     2  'A CHRONIC PROBLEM.'12X,1H.,90X)
        ORDER=ORDER+1
        CALL DBADD(1,TOT,2,SDAT,3,TIM1,4,'SYS',5,0,6,'OPEN',7,INFO,8,
     1  'PAPER',9,ORDER,10,0)
        CALL DBCLOSE
        CALL DBERR($4931,IERT,IERC,0)
        IF (Z.EQ.2) GOTO 3390
        CALL DBOPEN(BAS1,BAS4)
        CALL DBSET(1)
3389    CONTINUE
        IF (Z.EQ.2) GOTO 3390
        Z=2
        CALL DBSET(2)
        GOTO 3368
3390    TYPE 2370
2370    FORMAT(1X,'TICKET ADD COMPLETED.')
        GOTO 59
 
C
C
C
C       ROUTINE TO ADD A RECORD THAT THE TICKET WAS TRANSFERED
C
4345    TYPE 3766
        CALL DBOPEN(BAS1)
        ACCEPT 120,TNUM
        IF (TNUM.EQ.0) GOTO 59
        CALL RTIM(TIM1,SDAT)
        N=1
        TYPE 4346
4346    FORMAT(1X,'CONTROL GROUP: ',$)
        ACCEPT 4347,M
4347    FORMAT(I2)
        TYPE 4348
4348    FORMAT(1X,'REFER GROUP: ',$)
        ACCEPT 4349,L
4349    FORMAT(I3)
        IF ((L.EQ.0).AND.(M.EQ.0)) GOTO 4364
C
C       CHECK THE GET TIME ROUTINE TO INSURE THE CORRECT ORDER
C       OF THE ATTRIBUTES
C
        CALL DBERR($14350,IERT,IERC,0)
        GOTO 14353
14350   IF (IERT.NE.7) GOTO 4955
        TYPE 1379
        CALL WAIT(4.0)
14353   CALL DBOPEN(BAS1)
        CALL DBUPD(-1)
        CALL DBFIND(1,1,TNUM)
        CALL DBGREC($14350,1)
        CALL DBVAL(46,ESC,51,MAINT)
        IF ((L.EQ.41).OR.(L.EQ.36).OR.(L.EQ.21).OR.(L.EQ.25)
     1  .OR.(L.EQ.29).OR.(L.EQ.30).OR.(L.EQ.72).OR.(L.EQ.81))ESC=2
        IF (L.GT.0) CALL DBCHNG(51,ATTN(L),46,ESC)
        IF (M.GT.0) CALL DBCHNG(53,M)
        CALL DBCLOSE
        IF (L.EQ.0) GOTO 4364
C
C       CHANGE BASE 6 TO REFLECT THE TICKET TRANSFER
C
2389    CALL DBERR($2404,IERT,IERC,0)
        GOTO 2405
2404    IF (IERT.NE.7) GOTO 4955
        TYPE 1379
        CALL WAIT(6.0)
2405    CALL DBOPEN(BAS6)
        CALL DBUPD(-1)
        CALL DBFIND(1,1,TNUM)
        CALL DBNREC(RECORD)
        IF (RECORD.GT.0) GOTO 2392
        CALL DBADD(1,TNUM,2,SDAT,3,TIM1,7,STAT,8,MAINT,10,NET,
     1  11,SVER,12,PROD,17,F1,14,ME)
        CALL DBFIND(1,1,TNUM)
        RECORD=1
2392    CALL DBGREC($2400,RECORD)
        CALL DBVAL(2,TDAT,3,TTIM)
        IF ((TDAT.EQ.0).OR.(TTIM.EQ.0)) CALL DBCHNG(2,SDAT,3,TIM1)
        CALL DBCHNG(4,SDAT,5,TIM1)
        IF (STAT.EQ.'CLSD') GOTO 2400
        CALL DBADD (1,TNUM,2,SDAT,3,TIM1,
     1  7,STAT,8,ATTN(L),10,NET,11,SVER,12,PROD,17,F1,14,ME,13,CCC)
2400    CALL DBCLOSE
C
C       IF WE JUST TRANSFERRED THE TICKET BACK TO SOMEONE, LEAVE IT
C       ALONE
C
        IF (MAINT.EQ.ATTN(L)) GOTO 4364
4350    CALL GETC(6,UNAM,PCE)
        IF (PCE.EQ."040) GOTO 4351
        CALL GETC(11,UNAM,PCE)
        IF (PCE.EQ."040) GOTO 4354
        ENCODE(170,4355,INFO)UNAM,ME,MAINT,ATTN(M),CCC,CODE(CCC)
4355    FORMAT(3A5,1H(,A3,1H),' TRANSFERRED THIS TICKET FROM ',A5,
     1  ' TO ',A5,1H.,15X,'RESOLUTION CODE IS CURRENTLY SET TO ',
     2  I3,2X,A10,29X,'.',5X)
        GOTO 4358
4351    ENCODE(170,4353,INFO)UNAM(1),ME,MAINT,ATTN(M),CCC,CODE(CCC)
4353    FORMAT(A5,1H(,A3,1H),' TRANSFERRED THIS TICKET FROM ',A5,
     1  ' TO ',A5,1H.,25X,'RESOLUTION CODE IS CURRENTLY SET TO ',
     2  I3,2X,A10,29X,'.',5X)
        GOTO 4358
4354    ENCODE(170,4360,INFO)UNAM(1),UNAM(2),ME,MAINT,ATTN(M),
     1  CCC,CODE(CCC)
4360    FORMAT(A5,A5,1H(,A3,1H),' TRANSFERRED THIS TICKET FROM ',A5,
     1  ' TO ',A5,1H.,20X,'RESOLUTION CODE IS CURRENTLY SET TO ',
     2  I3,2X,A10,29X,'.',5X)
4358    CALL DBERR($4356,IERT,IERC,0)
        GOTO 4357
4356    IF (IERT.NE.7) GOTO 4930
        TYPE 1379
        CALL WAIT(4.0)
4357    CALL DBOPEN(BAS2)
        CALL DBUPD(-1)
        CALL DBFIND(1,1,TNUM)
        CALL DBNREC(NUMBER)
        ORDER=NUMBER+1
        CALL DBADD(1,TNUM,2,SDAT,3,TIM1,4,ME,5,5,6,STAT,7,INFO,8,UNAM,
     1  9,ORDER,10,0)
        CALL DBCLOSE
        ENCODE(95,933,INFO)
933     FORMAT(95(1H ))
4364    TYPE 4359
4359    FORMAT(1X,'TICKET TURNOVER COMPLETED.')
        GOTO 59
C
C
C
CCCCC
4800    TYPE 4805
4805    FORMAT(/10X,' ERROR IN DO LOOP ##1010 REPORT IT !!!',/)
4840    TYPE 4845
4845    FORMAT(/1X,' WE WENT FOR A VALUE THAT WAS NOT THERE CHECK ',
     1  'STATEMENT 2080 ')
        GOTO 59
4930    CALL DBERR($4932,IERT,IERC,0)
        CALL DBNSET(NUMBER)
        IF (ME.EQ.0) GOTO 99999
        IF (NUMBER.EQ.0) GOTO 4931
        DO 4931 I=1,NUMBER
        CALL DBCLOSE
4931    CONTINUE
        IF (IERT.GT.0) TYPE 4957,IERT,IERC
4957    FORMAT(/3X,'ERROR TYPE = ',I3,4X,'ERROR CODE = ',I3,/)
C       TEMP COMMAND NEXT LINE
        CALL DBEND
        CALL DBSTRT(-1,1,-4,0,1,0,5,0,-1,0,-4,1,1,1,5,1)
        CALL RELEAS(1)
        CALL RELEAS(2)
        CALL RELEAS(3)
        CALL RELEAS(4)
        CALL RELEAS(-1)
        CALL RELEAS(5)
        CALL RELEAS(6)
        CALL RELEAS(7)
        CALL RELEAS(-4)
        CALL RELEAS(8)
        GOTO 59
4932    IF ((IERT.NE.14).AND.(IERC.NE.11)) GOTO 4955
        GOTO 59
4855    FORMAT(/1X,'ERROR IN DO LOOP FINDING VALUE OF ESCALATIONS',/)
4940    CALL DBCLOSE
4945    CALL DBCLOSE
4950    CALL DBCLOSE
        GOTO 59
4955    TYPE 4956,IERT,IERC
4956    FORMAT(/3X,'ERROR TYPE = ',I5,4X,'ERROR CODE = ',I5,
     1  /,/2X,'PLEASE REPORT THIS TO NETCON')
99999   CALL DBEND
        IF ((DRP.GT.0).OR.(ME.EQ.0)) CALL BYE
        STOP
        END
 t%lMp