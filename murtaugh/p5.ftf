C
C***************************
C
C       PAP1.FTF
C
C***************************
C
C
C       SUBROUTINE FOR THE PURPOSE OF WRITING THE PROBLEM
C       DISCRIPTION WITHOUT THE PERIOD OR FOLLOWING LINES
C
        SUBROUTINE WDISC(DISC)
C
        INTEGER DISC(169),ILIN,N,J
C
        WRITE(8,50)
50      FORMAT(' PROBLEM DESCRIPTION : ')
        DO 100 ILIN=1,10
        N=(ILIN*16)-15
        IF (DISC(N).EQ.'.    ') GOTO 90
        WRITE(8,60)(DISC(J),J=N,N+15)
60      FORMAT(16A5)
        GOTO 100
90      ILIN=12
100     CONTINUE
        RETURN
        END
C
C
C               SUBROUTINE FOR WRITING THE INFO TO DISK
C
        SUBROUTINE WINFO(INFO)
C
        INTEGER INFO(64),ILIN,N,J
C
        DO 50 ILIN=1,4
        N=(ILIN*16)-15
        IF (INFO(N).EQ.'.    ') GOTO 40
        WRITE(8,30)(INFO(J),J=N,N+15)
30      FORMAT(16A5)
        GOTO 50
40      ILIN=4
50      CONTINUE
        RETURN
        END
C
C
C
C       SUBROUTINE TO CALCULATE ELAPSED TIME OF A TICKET
C
        SUBROUTINE MTTR(SDAT,DUP,TIM1,TUP,ELM,HOUR)
C
        INTEGER SDAT,TIM1,TUP,DUP,EH,EM,SH,SM
        INTEGER NDUP,NTUP
        REAL HOUR,ELM
C
        IF (ELM.GT.0) GOTO 105
        IF (DUP.GT.0) GOTO 50
        CALL RTIM(NTUP,NDUP)
        DECODE(5,100,NTUP)EH,EM
        GOTO 75
50      NDUP=DUP
        DECODE(5,100,TUP)EH,EM
100     FORMAT(I2,1X,I2)
75      DECODE(5,100,TIM1)SH,SM
        IF (NDUP.GT.SDAT) GOTO 120
        IF (EH.GT.SH) ELM=(60-SM)+EM+((EH-SH)*60)-60
        IF (EH.EQ.SH) ELM=EM-SM
        IF ((EH.EQ.SH).AND.(EM.EQ.SM)) ELM=1
        IF (ELM.LT.6) ELM=6
105     HOUR=ELM/60
        RETURN
120     ELM=(((NDUP-SDAT)-1)*1440)+(EH*60)+EM+((23-SH)*60)+(60-SM)
        IF (ELM.LT.0) ELM=0
125     HOUR=ELM/60
        RETURN
        END
C
C
C
C       ROUTINE TO INPUT THE TIME IN XX:YY FORMAT AND THEN SEE
C       IF THE INPUT IS EMPTY. IF IT IS EMPTY THEN CALL THE TIME
C       FROM 1022 AND USE THAT AS THE OFFICAL TIME. THE TIME WILL
C       BE CALLED FROM 1022 ANYWAY TO CHECK IF THE TIME YOU ENTER
C       IS AHEAD OF THE CURRENT TIME. IF IT IS THEN YOU WILL HAVE 
C       THE CHANCE TO RECORRECT OR HAVE THE PROGRAM ASSUME THAT
C       YOU HAVE CHANGED DAYS (PASSED THE 24:00 MARK).
C
        SUBROUTINE GTIM(TIM1,SDAT,LIC)
C
        INTEGER TIM1,TTIM,XX,YY,X1,Y1,H1,H2,M1,M2,BTIM,SDAT
        INTEGER C1,C2,C3,C4,C5,LIC,IA1,IA2,IA3,IA4,IA5,IA6
        INTEGER NDAT
C
10      CALL RTIM(TIM1,SDAT)
        IF (LIC.EQ.0) GOTO 30
12      TYPE 15,TIM1
15      FORMAT(1X,'ENTER TIME OR C.R. FOR ',A5,' GMT : ',$)
        ACCEPT 20,TTIM
20      FORMAT(A5)
        IF (TTIM.NE.'     ') GOTO 50
25      FORMAT(A1,A1,A1,A1,A1)
30      CONTINUE
        RETURN
50      DECODE(5,25,TTIM)C1,C2,C3,C4,C5
        IF (C3.NE.':') GOTO 12
        IF ((C1.LT.'0').OR.(C1.GT.'2')) GOTO 12
        IF ((C2.LT.'0').OR.(C2.GT.'9')) GOTO 12
        IF ((C4.LT.'0').OR.(C4.GT.'5')) GOTO 12
        IF ((C5.LT.'0').OR.(C5.GT.'9')) GOTO 12
        DECODE(5,55,TIM1)H1,M1
55      FORMAT(I2,1X,I2)
        DECODE(5,55,TTIM)H2,M2
        IF (H2.GT.H1) SDAT=SDAT-1
        TIM1=TTIM
        RETURN
        END
C
C
C       ROUTINE TO PULL UP THE DATE REGARDLESS OF TIME ZONE
C
        SUBROUTINE RTIM(TIM1,SDAT)
C
        INTEGER IA1,IA2,IA3,IA4,IA5,IA6,TIM1,SDAT,NDAT
C
        CALL FGMT(IA1,IA2,IA3,IA4,IA5,IA6)
        IF (IA5.GT.9) ENCODE(5,50,TIM1)IA4,IA5
        IF (IA5.LT.10)ENCODE(5,52,TIM1)IA4,IA5
52      FORMAT(I2,2H:0,I1)
50      FORMAT(I2,1H:,I2)
        IA3=IA3+1900
        CALL DBDATN(SDAT,IA1,IA2,IA3)
        RETURN
        END
C
C
C       ROUTINE TO CHECK ELM MINUS V6 ... UNLESS V6*60 IS MORE THAN
C       ELM. WE ALSO CLEAR OUT V4 WILL WE ARE AT IT.
C
        SUBROUTINE VDIS(V4,V6,ELM)
C
        INTEGER V4,V6
        REAL ELM
C
100     IF (ELM.GT.V6*60) GOTO 938
        IF (V6*60-ELM.LT.60) V6=V6-1
        IF (V6*60-ELM.GE.60) V6=V6-(((V6*60-ELM)/60)+1)
938     V4=0
        ELM=ELM-V6*60
        RETURN
        END
C
C
C***********************
C
C       ROUTINE TO GET INFO FOR PROFILE
C
C***********************
        SUBROUTINE GTHRE(OUT,IN,Z)
C
        INTEGER OUT(3),IN(4),Z,INOLD(4)
C
        IF(Z.NE.7) GOTO 100
        INOLD(1)=IN(1)
        INOLD(2)=IN(2)
        INOLD(3)=IN(3)
        INOLD(4)=IN(4)
        TYPE 10,OUT,IN
10      FORMAT(/1X,'THE CURRENT VALUE FOR ',3A5,' IS ',4A5,/1X,
     1  'TYPE THE NEW VALUE OR C.R. FOR NO CHANGE',/1X)
100     TYPE 105,OUT
105     FORMAT(1H+,3A5,2H :,T20,$)
        ACCEPT 110,IN
110     FORMAT(4A5)
        IF((Z.EQ.7).AND.(IN(1).EQ.'     ')) IN(4)=INOLD(4)
        IF((Z.EQ.7).AND.(IN(1).EQ.'     ')) IN(2)=INOLD(2)
        IF((Z.EQ.7).AND.(IN(1).EQ.'     ')) IN(3)=INOLD(3)
        IF((Z.EQ.7).AND.(IN(1).EQ.'     ')) IN(1)=INOLD(1)
        IF (Z.EQ.7) RETURN
        IF (IN(1).NE.'     ') Z=2
        RETURN
        END
C************************
C
C       GET INPUT FROM 2A5 OUTPUT
C
C************************
C
        SUBROUTINE GTWO(OUT,IN,Z,I)
C
        INTEGER OUT(2),IN(4),Z,I,INOLD(4)
C
        IF(Z.NE.7) GOTO 100
        INOLD(1)=IN(1)
        INOLD(2)=IN(2)
        INOLD(3)=IN(3)
        INOLD(4)=IN(4)
        TYPE 10,OUT,IN
10      FORMAT(/1X,'THE CURRENT VALUE FOR ',2A5,' IS ',4A5,/1X,
     1  'TYPE THE NEW VALUE OR C.R. FOR NO CHANGE',/1X)
100     TYPE 105,OUT
105     FORMAT(1H+,2A5,2H :,T20,$)
        ACCEPT 110,IN
110     FORMAT(4A5)
        IF((Z.EQ.7).AND.(IN(1).EQ.'     ')) IN(4)=INOLD(4)
        IF((Z.EQ.7).AND.(IN(1).EQ.'     ')) IN(2)=INOLD(2)
        IF((Z.EQ.7).AND.(IN(1).EQ.'     ')) IN(3)=INOLD(3)
        IF((Z.EQ.7).AND.(IN(1).EQ.'     ')) IN(1)=INOLD(1)
        IF (Z.EQ.7) GOTO 115
        IF (IN(1).NE.'     ') Z=2
        IF ((IN(1).NE.'     ').AND.(I.EQ.2))CALL UPCASE(IN)
115     RETURN
        END
C
C****************
C
C       ROUTINE TO GET ONE ITEM
C
C****************
        SUBROUTINE GONE(OUT,IN,Z)
C
        INTEGER OUT,IN,Z,INOLD
C 
        IF(Z.NE.7) GOTO 100
        INOLD=IN
        TYPE 10,OUT,IN
10      FORMAT(/1X,'THE CURRENT VALUE FOR ',A5,' IS ',I8,/1X,
     1  'TYPE THE NEW VALUE OR C.R. FOR NO CHANGE',/1X)
100     TYPE 105,OUT
105     FORMAT(1H+,A5,2H :,T20,$)
        ACCEPT 110,IN
110     FORMAT(I8)
        IF((Z.EQ.7).AND.(IN.EQ.0)) IN=INOLD
        IF (Z.EQ.7) RETURN
        IF (IN.GT.0) Z=2
        RETURN
        END
C
C**************************
C
C       GET PRODUCT NUMBER
C
C**************************
C
        SUBROUTINE GPROD(NUMTYPE,P,Z)
C
        INTEGER NUMTYPE,P,Z,I
C
100     I=1
105     TYPE 2533
2533    FORMAT(1H+,'ENTER THE PRODUCT CODE  OR A C.R. FOR ',
     1  'HELP : ',$)
        ACCEPT 120,P
120     FORMAT(I2)
        IF ((P.GE.1).AND.(P.LE.NUMTYPE)) GOTO 125
        IF ((P.EQ.0).OR.(I.EQ.3)) CALL HPROD
        IF (I.EQ.4) TYPE 115
115     FORMAT(' YOU MUST ENTER A NUMBER GREATER THAN ZERO ')
        I=I+1
        GOTO 105
125     IF (Z.EQ.7) RETURN
        Z=2
        RETURN
C
        END
C
        SUBROUTINE MPGPRO(NUMTYPE,P,Z,PROD)
C
        INTEGER NUMTYPE,P,Z,I,PROD
C
100     TYPE 101,PROD
101     FORMAT(/1X,'PRODUCT CODE = ',A5)
105     TYPE 2533
2533    FORMAT(/1X,'ENTER THE PRODUCT CODE  OR A  -1  FOR ',
     1  'HELP OR C.R. FOR NO CHANGE : ',$)
        ACCEPT 120,P
120     FORMAT(I2)
        IF ((P.GE.1).AND.(P.LE.NUMTYPE)) RETURN
        IF (P.EQ.0) RETURN
        IF (P.EQ.-1) CALL HPROD
        GOTO 100
C
        END
C
C
C
C*******************************
C
C       ROUTINE TO GET REGIONS FOR RELATIONAL DATA BASE
C
C*******************************
C
        SUBROUTINE GRGN(I,P,Z,NUMATTN)
C
        INTEGER P,I,MAINT,Z,NUMATTN
C
100     IF (I.EQ.1)TYPE 105
        IF (I.EQ.2)TYPE 110
        ACCEPT 115,P
105     FORMAT(1X,'ENTER THE SOFTWARE DISTRICT NUMBER OR C.R. FOR ',
     1  'HELP : ',$)
110     FORMAT(1X,'ENTER THE HARDWARE DISTRICT SERVING THIS INTERFACE ',
     1  'OR C.R. FOR HELP : ',$)
115     FORMAT(I8)
        IF ((P.GE.1).AND.(P.LE.NUMATTN)) GOTO 150
        IF (P.EQ.0) CALL HREFR
        GOTO 100
150     Z=2
        RETURN
        END

        SUBROUTINE MPGRGN(I,P,Z,NUMATTN,RGN)
C
        INTEGER P,I,MAINT,Z,NUMATTN,RGN
C
100     IF (I.EQ.1)TYPE 101,RGN
        IF (I.EQ.2)TYPE 102,RGN
101     FORMAT(/1X,'SOFTWARE DISTRICT = ',A5)
102     FORMAT(/1X,'HARDWARE DISTRICT = ',A5)
        IF (I.EQ.1)TYPE 105
        IF (I.EQ.2)TYPE 110
        ACCEPT 115,P
105     FORMAT(1X,'ENTER THE SOFTWARE DISTRICT NUMBER OR  -1  FOR ',
     1  'HELP OR C.R. FOR NO CHANGE : ',$)
110     FORMAT(1X,'ENTER THE HARDWARE DISTRICT SERVING THIS INTERFACE ',
     1  'OR  -1  FOR HELP OR C.R. FOR NO CHANGE : ',$)
115     FORMAT(I8)
        IF ((P.GE.1).AND.(P.LE.NUMATTN)) RETURN
        IF (P.EQ.-1) CALL HREFR
        IF (P.EQ.0) RETURN
        GOTO 100
        END
        SUBROUTINE GTHR3(OUT,IN,Z,I)
C
        INTEGER OUT(3),IN(3),Z,I,INOLD(3)
C
        IF(Z.NE.7) GOTO 100
        INOLD(1)=IN(1)
        INOLD(2)=IN(2)
        INOLD(3)=IN(3)
        TYPE 10,OUT,IN
10      FORMAT(/1X,'THE CURRENT VALUE FOR ',3A5,' IS ',3A5,/1X,
     1  'TYPE THE NEW VALUE OR C.R. FOR NO CHANGE',/1X)
100     TYPE 105,OUT
105     FORMAT(1H+,3A5,2H :,T20,$)
        ACCEPT 110,IN
110     FORMAT(3A5)
        IF((Z.EQ.7).AND.(IN(1).EQ.'     ')) IN(3)=INOLD(3)
        IF((Z.EQ.7).AND.(IN(1).EQ.'     ')) IN(2)=INOLD(2)
        IF((Z.EQ.7).AND.(IN(1).EQ.'     ')) IN(1)=INOLD(1)
        IF (Z.EQ.7) GOTO 114
        IF (IN(1).NE.'     ') Z=2
114     IF((IN(1).NE.'     ').AND.(I.EQ.2))CALL UPCAS3(IN)
        IF((I.EQ.1).OR.((I.EQ.2).AND.(IN(1).NE.'     '))) GOTO 120
        TYPE 115
115     FORMAT(/1X,'THE CUSTOMER NAME MAY NOT BE LEFT BLANK!',/1X,
     1  'YOU MUST ENTER SOMETHING',/)
        GOTO 100
120     RETURN
        END
C
C
        SUBROUTINE GTW1(OUT,IN,Z)
C
        INTEGER OUT(2),IN,Z,INOLD
C
        IF(Z.NE.7) GOTO 100
        INOLD=IN
        TYPE 10,OUT,IN
10      FORMAT(/1X,'THE CURRENT VALUE FOR ',2A5,' IS ',A5,/1X,
     1  'TYPE THE NEW VALUE OR C.R. FOR NO CHANGE',/1X)
100     TYPE 105,OUT
105     FORMAT(1H+,2A5,2H :,T20,$)
        ACCEPT 110,IN
110     FORMAT(A5)
        IF((Z.EQ.7).AND.(IN.EQ.'     ')) IN=INOLD
        IF (Z.EQ.7) RETURN
        IF (IN.NE.'     ') Z=2
        RETURN
        END
C
        SUBROUTINE G1NE(OUT,IN,Z)
C
        INTEGER OUT,IN,Z,INOLD
C 
        IF(Z.NE.7) GOTO 100
        INOLD=IN
        TYPE 10,OUT,IN
10      FORMAT(/1X,'THE CURRENT VALUE FOR ',A5,' IS ',A5,/1X,
     1  'TYPE THE NEW VALUE OR C.R. FOR NO CHANGE',/1X)
100     TYPE 105,OUT
105     FORMAT(1H+,A5,2H :,T20,$)
        ACCEPT 115,IN
115     FORMAT(A5)
        IF((Z.EQ.7).AND.(IN.EQ.'     ')) IN=INOLD
        IF (Z.EQ.7) RETURN
        IF (IN.NE.'  ') Z=2
        RETURN
        END
        SUBROUTINE GTW2(OUT,IN,Z)
C
        INTEGER OUT(2),IN,Z
C
100     TYPE 105
105     FORMAT('+PRIMARY ...1=NO, 2=YES : ',$)
        ACCEPT 110,IN
110     FORMAT(I8)
        IF (IN.GT.0) Z=2
        RETURN
        END
        SUBROUTINE GTW3(OUT,IN,Z)
C
        INTEGER OUT(2),IN,Z,INOLD
C
        IF(Z.NE.7) GOTO 100
        INOLD=IN
        TYPE 10,OUT,IN
10      FORMAT(/1X,'THE CURRENT VALUE FOR ',2A5,' IS ',I8,/1X,
     1  'TYPE THE NEW VALUE OR C.R. FOR NO CHANGE',/1X)
100     TYPE 105,OUT
105     FORMAT(1H+,2A5,2H :,T20,$)
        ACCEPT 110,IN
110     FORMAT(I8)
        IF((Z.EQ.7).AND.(IN.EQ.0)) IN=INOLD
        IF (Z.EQ.7) RETURN
        IF (IN.GT.0) Z=2
        RETURN
        END
C
C
C
C       ROUTINE TO GET NUMBER
C
        SUBROUTINE GPNUM(IN,OUT)
C
        INTEGER IN,OUT
100     TYPE 105,IN
105     FORMAT(1H+,A5,T20,2H: ,$)
        ACCEPT 110,OUT
110     FORMAT(I6)
        RETURN
        END
C
C
C
C       SUBROUTINE TO GET ZONE FOR HARDWARE
C
        SUBROUTINE GZONE(IN,Z)
C
        INTEGER Z,IN
C
90      TYPE 100
100     FORMAT(1X,'ENTER HARDWARE ZONE (DISTANCE TO THE NEAREST F.E.',
     1  /1X,'OFFICE',/2X,'ZONE 1  = ONSITE',/7X,'2  = 0 - 50 MILES',/7X,
     2  '3  = 51 - 150 MILES',/7X,'4  = GREATER THAN 150 MILES',/2X,
     3  'ENTER NUMBER : ',$)
        ACCEPT 105,IN
105     FORMAT(I1)
        IF ((IN.LT.0).OR.(IN.GT.4)) GOTO 90
        IF (Z.EQ.7) RETURN
        IF (IN.GT.0) Z=2
        RETURN
        END
C
C*****************************
C
C       PAP2.FTF
C
C****************************
C
C
C       SUBROUTINE TO CHECK IF STATUS IS TYPED CORRECTLY
C
        SUBROUTINE CSTAT(INFO,GARBAGE,Z,TNUM)
C
        INTEGER INFO(64),K,J,GARBAGE,Z
C
        DO 50 ILIN=1,4
        N=(ILIN*16)-15
        IF (INFO(N).EQ.'.    ') GOTO 40
        TYPE 30,(INFO(J),J=N,N+15)
30      FORMAT(1X,16A5)
        GOTO 50
40      ILIN=4
50      CONTINUE
        TYPE 100,TNUM
100     FORMAT(/1X'IS THE STATUS CORRECT ? FOR TICKET #',I8,/,
     1  'A C.R. WILL WRITE IT TO THE DATA BASE, ANYTHING ELSE,',/
     2  2X,'WILL CAUSE YOU TO START OVER AGAIN : ',$)
        ACCEPT 110,GARBAGE
110     FORMAT(A1)
        RETURN
        END
C
C       SUB-ROUTINE TO DETERMINE ALL ELM'S
C
        SUBROUTINE TOTELM(DOIT,ELM,HOUR,D)
C
        INTEGER I,L,A,DOIT
        REAL STDV,MEDM,E,D,C,B,ELM
C       ENCODE(5,10,L)DOIT
10      FORMAT(I5)
        HOUR=0
        ELM=0
        DO 200 A=1,DOIT
        CALL DBGREC($200,A)
        CALL DBVAL('ELM',B)
        ELM=ELM+B
200     CONTINUE
        ELM=ELM/DOIT
c       STDV=SQRT((E-C*C/DOIT)/(DOIT-1))
c       TYPE 205,STDV
205     FORMAT(/1X,'STANDARD DEV.   ',F40.20,/)
        HOUR=ELM/60
        RETURN
        END
C
C       SUBROUTINE TO DETERMINE SPLIT OF MTTR
C
        SUBROUTINE MTRAVE(D,ELD,ELH,RLM)
C
        INTEGER D,ELD,ELH,RLM
C
        IF (D.GT.1439) GOTO 100
        ELD=0
        ELH=D/60
        RLM=D-(ELH*60)
        RETURN
100     ELD=D/1440
        ELH=(D-(ELD*1440))/60
        RLM=D-((ELD*1440)+(ELH*60))
        RETURN
        END
C
C       SUBROUTINE TO TAKE NORMAL DATE AND CHANGE TO 1022
C
        SUBROUTINE CDDWN
C
        INTEGER DAT,SM,SD,SY
C
        TYPE 100
100     FORMAT(1X,'ENTER DATE MM/DD/YY : ',$)
        ACCEPT 105,SM,SD,SY
105     FORMAT(I2,1X,I2,1X,I4)
        CALL CDAT(SY)
        CALL DBDATN(DAT,SM,SD,SY)
        TYPE 110,DAT
110     FORMAT(1X,'THE 1022 FORMAT IS  ',I9)
        RETURN
        END
C
C       ROUTINE TO CHECK YEAR AND MAKE YEAR 4 PLACES.
C       IF IS 4 THEN MAKE TWO IF IS 2 THEN MAKE 4
C
        SUBROUTINE CDAT(SY)
C
        INTEGER SY
C
        IF (SY.GT.1800) SY=SY-1900
        IF (SY.LT.100) SY=SY+1900
        RETURN
        END
C
C       SUBROUTINE TO FIND BEGINNING PERIOD AND END PERIOD
C
        SUBROUTINE PERIOD(NDAT,NDUP,SM,SD,SY,EM,ED,EY)
C
        INTEGER NDAT,NDUP,SY,SM,SD,EY,EM,ED
C
        TYPE 100
100     FORMAT(1X,'ENTER START DATE : MM/DD/YYYY ? = ',$)
        ACCEPT 110,SM,SD,SY
110     FORMAT(I2,1X,I2,1X,I4)
        TYPE 120
120     FORMAT('+ENTER END DATE   : MM/DD/YYYY ? = ',$)
        ACCEPT 110,EM,ED,EY
        IF (EM.EQ.0) EY=2010
        CALL DBDATN(NDAT,SM,SD,SY)
        CALL DBDATN(NDUP,EM,ED,EY)
        SY=SY-1900
        EY=EY-1900
        RETURN
        END
C
C
C       ROUTINE TO INPUT THE TIM1 IN XX:YY FORMAT AND THEN SEE
C       IF THE INPUT IS EMPTY. IF IT IS EMPTY THEN CALL THE TIME
C       FROM 1022 AND USE THAT AS THE OFFICAL TIME. THE TIME WILL
C       BE CALLED FROM 1022 ANYWAY TO CHECK IF THE TIME YOU ENTER
C       IS AHEAD OF THE CURRENT TIME. IF IT IS THEN YOU WILL HAVE 
C       THE CHANCE TO RECORRECT OR HAVE THE PROGRAM ASSUME THAT
C       YOU HAVE CHANGED DAYS (PASSED THE 24:00 MARK).
C
        SUBROUTINE GETIM(TUP,DUP)
C
        INTEGER TIM1,TTIM,XX,YY,X1,Y1,H1,H2,M1,M2,BTIM,SDAT
        INTEGER C1,C2,C3,C4,C5,TUP,DUP
C
10      CALL RTIM(TUP,DUP)
        TYPE 15,TUP
15      FORMAT(1X,'ENTER TIME UP  OR A C.R. FOR ',A5,' GMT: ',$)
        ACCEPT 20,TTIM
20      FORMAT(A5)
        IF (TTIM.NE.'     ') GOTO 50
25      FORMAT(A1,A1,A1,A1,A1)
        RETURN
50      DECODE(5,25,TTIM)C1,C2,C3,C4,C5
        IF (C3.NE.':') GOTO 10
        IF ((C1.LT.'0').OR.(C1.GT.'2')) GOTO 10
        IF ((C2.LT.'0').OR.(C2.GT.'9')) GOTO 10
        IF ((C4.LT.'0').OR.(C4.GT.'5')) GOTO 10
        IF ((C5.LT.'0').OR.(C5.GT.'9')) GOTO 10
        DECODE(5,55,TUP)H1,M1
55      FORMAT(I2,1X,I2)
        DECODE(5,55,TTIM)H2,M2
        IF (H2.GT.H1) DUP=DUP-1
        TUP=TTIM
        RETURN
        END
C
C       SUBROUTINE TO INPUT THE CLOSE OUT CODE FOR HQTECH
C
        SUBROUTINE GETDES(HQCC,ONUM)
C
        INTEGER HQCC,ONUM(2)
C
100     TYPE 105
105     FORMAT(2X,'ENTER THE DE-ESCALATION CODE FOR THIS TROUBLE ',
     1  'TICKET',//5X,'1 = ECO/FCO/EAR/NSR/SOURCE CHANGE',/5X,
     2  '2 = TRAP OR DIAGNOSTIC PATCH PROVIDED',/5X,
     3  '3 = DUMP OR TRACE REQUESTED',/5X,
     4  '4 = MORE INFORMATION REQUESTED',/5X,
     5  '5 = TEST OR DIAGNOSTIC REQUESTED',/5X,
     6  '6 = TEST EQUIPMENT REQUESTED',/5X,
     7  '7 = WAITING FOR HARDWARE',/5X,
     8  '8 = RESOLVED (BE SURE TO ENTER A RESOLUTION CODE)',//2X,
     9  'ENTER THE NUMBER : ',$)
        ACCEPT 110,HQCC
110     FORMAT(I2)
        IF (HQCC.EQ.2) GOTO 115
        IF (HQCC.EQ.1) RETURN
        IF ((HQCC.GE.3).AND.(HQCC.LE.8)) RETURN
        GOTO 100
115     TYPE 116
116     FORMAT('+ENTER THE PATCH FILE NAME : ',$)
        ACCEPT 118,ONUM
118     FORMAT(2A5)
        IF (ONUM(1).EQ.'     ') GOTO 115
        RETURN
        END
C
C
C*************************************{***********
C
C       ROUTINE TO LIST THE REFERED HELP LIST
C
C*************************************************
C
        SUBROUTINE HREFR
C
        INTEGER X,Y,Z
C
100     TYPE 2532
2532    FORMAT(3X,'THE REFERRED GROUPS ARE...',/2X'1= NFTEL',T14,
     1  '11= NFOVA',T26,'21= FRSPT',T38,'31= NFOEB',T50,
     2  '41= STS  ',T62,'51= ETSNJ',/2X,'2= NFONE',T14,'12= TPPGL',
     3  T26,'22= NFOHO',T38,'32= NFOSB',T50,'42= CUSTM',T62,'52= ',
     4  'ETSBO',/2X,'3= NFOCN',T14,'13= TSIS ',T26,'23= NFOAT',T38,
     5  '33= NFOLA',T50,'43= WTSSF',T62,'53= NSSCP',/2X,'4= NFONY',T14,
6  '14= HKHW ',T26,'24= NFOTA',T38,'34= DESS ',T50,'44= NMSUK',T62,
     7  '54= FTMSG',/2X,'5= LNKOP',T14,'15= NFOCH',T26,'25= INFRA',T38,
     8  '35= CRSUP',T50,'45= WTSIR',T62,'55= PORTS',/2X,'6= UKOM ',T14,
     9  '16= NFOPL',T26,'26= TSOPS',T38,'36= NTS',T50,
     A  '46= CTSCH',T62,'56= MCI ',/2X'7= BTDUB',T14,'17= FMTOP',
     B  T26,'27= NFTEC',T38,'37= NSSC',T50,'47= WTSDA',T62,'57= DBVAL',
     C  /2X'8= NFOKP',T14,'18= NFOSL',T26,'28= NFODE',T38,'38= ONTYM',
     D  T50,'48= CTSDE',T62,'58= ROTARY')
        TYPE 2533
2533    FORMAT(2X,'9= NFOMX',T14,'19= FIRST',T26,'29= ONT11',T38,
     1  '39= NETCON',T50,'49= CTSSL',T62,'59= UKMSG',/1X'10= SCRTY',T14,
     2  '20= NFODA',T26,'30=      ',T38,'40= CS800',T50,'50= ETSNY',
     3  T62,'60= BTGER'//1X'61= PI',T14,'71= DSOS',T26,'81= NCCTS',
     4  T37,'91= BTJPN',T49,'101= BTAP',T61,'111= MSGTS',/1X,'62= BTWCA',
     5  T14,'72= NTD',T26,'82= ORDCU',T37,'92= HKSW ',T49,'102= BTUK',
     6  T61,'112= SNGTL',/1X,'63= CHAD',T14,'73= SCA  ',T26,
     7  '83= CWSRV',T37,'93= PRMGR',T49,'103= FSNL ',T61,'113= BTAUS',
     8  /1X,'64= CONFR',T14,'74= VIDSP',T26,'84= ELNUS',T37,'94= EMSG',
     9  T49,'104= FSBEL',T61,'114= NBILL',/1X,'65= BTSWE',T14,
     A  '75= BTNL ',T26,'85= NIS',T37,'95= BTBEL',T49,'105= BTSZ',T61,
     B  '115= BTHK',/1X,'66= ATCOM',T14,'76= HTSUK',T26,'86= SIRTI',T37,
     C  '96= AFPUB ',T49,'106= UKCS',T61,'116= FSFR',/1X,'67= CLOSE',
     D  T14,'77= BTFR',T26,'87= TRT',T37,'97= AFPRI',T49,'107= BTITA',
     E  T61,'117= UK800',/1X,'68= TELCO',T14,'78= CPSS ',T26,
     F  '88= CAT  ',T37,'98= ETSAT',T49,'108= BTSP',T61,'118= BTEVL')
        TYPE 2534
2534    FORMAT(1X,'69= ETSG ',T14,'79= STSUK',T26,'89= DLCOP',T37,
     1  '99= BTKOR',T49,'109= TSBEL',T61,'119= EDICN',/1X,'70= ORDIN',
     2  T14,'80= CS8CU',T26,'90= SUNCA',T36,'100= CSGER',T49,'110= TSNL',
     3  T61,'120= MSGCN',//1X,'121= TIS   ',T14,'122=      ',T25,
     4  '123= UKTSG',T36,'124= NTENG',T49,'125= TPVIE',T61,
     5  '126= NOVPS ',/1X,'127= FRCS ',T14,'128= CUSAF',T25,
     6  '129= FLMTC',T36,'130= IPLC ',T49,'131= ECSC ',T61,
     7  '132= ENMC ',/1X,'133= FSGER',T14,'134= FSITA',T25,
     8  '135= FSSZ ',T36,'136= FSSPA',T49,'137= FSSWE',T61,
     9  '138= BTSNG',/1X,'139= ITSNY',T14,'140= GCSCL',
     A  T25,'141= FLMCU',T36,'142= EDITS',T49,'143=      ',T61,
     B  '144=      ',/1X,'145= SDSKO',T14,'146= PHCOM',T25,
     C  '147= PADSP',T36,'148= SDSMA',T49,'149= MAYTL',T61,
     D  '150= BTALS',/1X,'151= OTHER',/1X)


        RETURN
        END
C
C
C*****************************************
C
C       PRINTS HELP LIST
C
C*****************************************
C
        SUBROUTINE HLP1(NNET,FLAG,SRT)
C
        INTEGER NNET(2),FLAG,SRT
C
75      CONTINUE
        TYPE 79,NNET
79      FORMAT(25X,2A5,' NETWORK TICKETS',/25X,'-------------------',
     1  '-------')
        IF ((FLAG.EQ.1).OR.(FLAG.EQ.-1)) TYPE 80
        IF ((FLAG.EQ.0).OR.(FLAG.GT.1)) TYPE 81
80      FORMAT(/5X,'CREATE',T30,'UPDATE',T55,'REPORTS',/5X,'------',
     1  T30,'------',T55,'-------',/5X,'A = ADD TICKET',T30,
     2  'S = UPDATE/CHANGE STATUS',T55,'F = CREATE A DISK FILE',/5X,
     3  'T = TRACK A TICKET',T30,'G = MODIFY ATTRIBUTES',T55,'K = ',
     4  'KNOW WHAT IS YOURS',/5X,'V = ADD QA MARKS',T30,'D = DEFER TIC',
     5  'KET',T55,'E = ESCALATE',/5X,'A1 = ADD CALL BACK',T30,'C = ',
     6  'CLOSE TICKET',T55,'6 = ESCALATION MATRIX'/5X,' TICKET',T30,
     7  'SW = START WORK'/5X,'-----------',T30,'EW = END WORK',/5X,
     8  'L = LOOK AT A TICKET',/5X,
     9  'O = LIST OPEN TICKETS',/5X,'N = HISTORICAL TICKETS',T55,
     A  'MISCELLANEOUS',/5X,'W = WHATS NEW FOR TODAY',T55,'-------',
     B  '------',/5X,'I = LIST CHART OF NETS',T55,'Q = QUIT PROGRAM',
     C  /5X,'7 = LIST UN-UPDATED TICKETS',T55,'5 = ALL OPEN TICKETS',
     D  /5X,'X = EXAMINE A TICKET',T55,'2 = LIST ESCALATED TICKETS',
     E  /5X,'1 = TICKETS BY PRODUCT',T55,'3 = REPORT ESCAL. TIC.',
     F  /5X'4 = TIC BY F.E. REGION',T55,'8 = HISTORICAL ESCAL. TIC.')
81      FORMAT(/5X,'CREATE',T30,'UPDATE',T55,'REPORTS',/5X,'------',
     1  T30,'------',T55,'-------',
     2  /5X,'L = LOOK AT A TICKET',T30,
     3  'N = HISTORICAL DATA',T55,'O = LIST OPEN TICKETS',/5X,
     4  T30,'K = KNOW WHAT IS YOURS',T55,
     5  'Q = QUIT PROGRAM',/,T30,'G = CHANGE HEADER INFO',
     6  T55,'F = CREATE A FILE',/,
     7  T54,'AR = POST',
     8  ' ARRIVAL ON SITE',/,T54,'DP = DISPLAY PROFILE')
        TYPE 82
82      FORMAT(5X,'? = EXTENDED HELP LIST',T55,'9 = LIST LAST ',
     1  'STATUS TIME')
        IF (SRT.GE.1) TYPE 62
62      FORMAT(5X,'S = ADD STATUS TO TICKET',/)
        RETURN
        END
C
C***********************************************
C
C       EXTENDED HELP LIST
C
C***********************************************
C
        SUBROUTINE HLP2(NNET,FLAG,SRT,XX)
C
        INTEGER NNET(2),FLAG,SRT,XX
C
100     TYPE 105,NNET
105     FORMAT(25X,2A5,' NETWORK TICKETS',/25X,'-------------------',
     1  '-------',/)
        TYPE 110
110     FORMAT(/5X'THE FOLLOWING UPPER CASE COMMANDS ARE ALSO ',
     1  'AVAILABLE...',/,/5X'TIME = PRINTS LOCAL AND GMT',T50,
     2  'VER   = PRINTS VERSION OF PAPER',/5X,'( )   = PRINTS ',
     3  'PRIMARY HELP LIST',T50,'MSG   = PROGRAM CHANGES')
        IF (XX.LT.0) TYPE 115
115     FORMAT(5X,'INT   = REENTER INITIALS',T50,'REOPE = REOPENS A ',
     1  'TICKET',/5X,'DELET = DELETES ANY TICKET #',T50,
     2  'COM  = TRANSFER TO "COM"',/5X'B     = ',
     3  'LISTS UNUPDATED TICKETS',T50,'Z     = RESETS TICKET #',
     4  /5X,'U     = MOVES TICKET TO CURRENT',T50,
     5  'V     = ENTER Q.A. POINTS',/5X,'REP   = ',
     6  'TRANSFER TO REPORT PROGRAM')
        RETURN
        END
C
C********************************************
C
C       PRINTS PROGRAM UPDATES
C
C*******************************************
C
        SUBROUTINE HLP3(FLAG,SRT,XX)
C
        INTEGER A,B,C,D
100     TYPE 105
105     FORMAT(/,/,/2X'JULY 19,1987    THE FOLLOWING CHANGES HAVE ',
     1  'BEEN MADE TO THE PROGRAM...',/3X,'1. REFORMATED DATA BASE',
     2  /,/)
        TYPE 107
107     FORMAT(/1X,'END OF CHANGES')
        RETURN
        END
C
C
C**************************************
C
C       SUBROUTINE TO LIST THE NETWORK NAMES
C
C**************************************
C
        SUBROUTINE HLPNET
C
        INTEGER X
C
100     TYPE 122
122     FORMAT(/1X,'NETWORK NUMBERS EQUAL...',/6X,'1 = TYMNET',T21,
     1  '2 = DECNET',T41,'3 = MCIRNET',T61,'4 = NINNET',/6X,'5 =  ',
     2  'IPLC',T21,'6 = ITSNET',T41,'7 = BOFANET',T61,'8 = ALASCO',
     3  'M',/6X,'9 = DUNET',T20,'10 = FIRNNET',T40,'11 = HKBGNET',
     4  T60,'12 = DOINET',/5X,'13 = TRWNET',T20,'14 =        ',
     5  T40,'15 = DIALNET',T60,'16 = SWBNET',/5X,'17 ',
     6  '= WESTNET',T20,'18 = AUTONET',T40,'19 = MNSQANET',T60,
     7  '20 = EXXON',/5X,'21 = MGTBNET',T20,'22 = UCCPAC',T40,
     8  '23 = TELEVERKET',T60,'24 =             ',/5X,'25 = XEROX ',
     9  T20,'26 = SLIGOS',T40,'27 = NISNET',T60,'28 = UKNET',/5X,
     A  '29 = PHILIPS',T20,'30 = ANZPAC',T40,'31 = ITALNET',T60,
     B  '32 = CWNET',/5X,'33 = ITANET',T20,'34 = TELERATE',T40,'35 ',
     C  '= SCANDUTCH',T60,'36 = NTSNET'/5X'37 = BABYLONNET',T20,
     D  '38 =        ',T40,'39 = LENET',T60,'40 = PAYMENTS',/5X,
     E  '41 = FORDNET',T20,'42 = MTSSNET',T40,'43 = XADANET',T60,
     F  '44 = EUSKONET')
        TYPE 123
123     FORMAT(5X,'45 = HELLER',T20,'46 = PRIMEX  ',T40,'47 = ',
     1  'ANYLABNET',T60,'48 = THNET',/5X,'49 = ARMYCORP',T20,
     2  '50 = EDINET',T40,'51 = DIALCOM',T60,'52 = KTNET',/5X,
     3  '53 = AFNET',T20,'54 = VIDEONET',T40,'55 = SFBNET',
     4  T60,'56 =       ',/5X,'57 = CWBERMUDA',T20,'58 = NETBILLNG',
     5  T40,'59 = PNBNET',T60,'60 = CPRMNET')
        RETURN
        END
C       SUBROUTINE TO LIST PRODUCT TYPES(7/30/91)
C
        SUBROUTINE HPROD
C       
        INTEGER X,I,T
C
100     TYPE 2434
2434    FORMAT(/1X,'MISC.',T13,'LINES',T26,'INTERFACES',T52,
     1  'APPLICATIONS',/1X,'----------',T13,'----------',T26,
     2  '----------',T52,'------------',/1X,' 1 DIALUP',T13,
     3  '20 4.8',T26,' 3 BPS',T39,' 7 MSERVER',T52,'49       ',T65,
     4  '69 UTIL',/1X,' 2 ATC',T13,'21 9.6',T26,' 5 MCP',T39,
     5  '32 TLNET',T52,'50 NETALERT',T65,'71 INTLS',/1X,' 4 PAP',
     6  T13,'22 14.4',T26,' 6 BDLC',T39,'35 SUPERV',T52,'52 CMS',
     7  T65,'75 CDM',/1X,' 9 SUN',T13,'23 19.2',T26,' 8 CONSAT',
     8  T39,'36 ONTYME',T52,'53 ALC',T65,'76 CMF',/1X,'10 SWITCHER',
     9  T13,'24 56KB',T26,'11 XCOM',T39,'37 PROBE',T52,'54     ',
     A  T65,'77 CPC',/1X,'12 ISIS',T13,'25 T-1',T26,'13 PBH',T39,
     B  '38 UN2',T52,'56 CMH',T65,'78 CPPP',/1X,'27 SYNCDBU',T13,
     C  '26 HW-OCL',T26,'14 PBT',T39,'39 TII',T52,'57     ',T65,
     D  '79 NAD',/1X,'30 VALID',T13,'28 XDIAL  ',T26,'15 SNA',T39,
     E  '40 EDI ',T52,'58 ELF',T65,'80 CPAS')
        TYPE 2435
2435    FORMAT(1X,'31 PROJECT',T13,'29 OUTDIAL',T26,'16 BBXS',
     1  T39,'41 EMSGA ',T52,'59 HSA',T65,'81 BITS',/1X,
     2  '33 PERIF',T13,'          ',T26,'17 X.75',T39,'42 CMTI',
     3  T52,'61 MUX',T65,'82 SVR  ',/1X,'34 OEM',T13,'          ',
     4  T26,'18 X.PC',T39,'43 UTS',T52,'62 NCONSOLE',T65,
     5  '83 SVP    ',/1X,'51 PICO',T13,'         ',T26,
     6  '19 ACOM  ',T39,'44 TMCS',T52,'63        ',T65,
     7  '84 SVC    ',/1X,'55 FRE   ',T13,'         ',T26,'65 TIIG',
     8  T39,'45 NEM',T52,'64 TDI',T65,'          ',/1X,'60 VIDEO',
     9  T13,'         ',T26,'70 SDLC',T39,'46 RAM',T52,
     A  '66 DIALCOM',T65,'86 PAPER  ',/1X,'72 TURBO',T13,'         ',
     B  T26,'73 PTI',T39,'47 NETVAL',T52,'67      ',T65,
     C  '87     ',/1X,'88 FRAD',T13,'        ',T26,'74 PHR',T39,
     D  '48 DG    ',T52,'68      ',T65,'91 ITS   ',/1X,
     E  '89 OTHER',T26,'90 CRDU',T39,'92 MFX  ',T52,'93 EZTYM',
     F  T65,'94     ',/1X,'85 PADS  ',T39,'97 CMTU  ',/1X,
     G  '95 PXL  ',/1X,
     H  '96 NODE ',/1X)
        RETURN
        END
        SUBROUTINE CLOUT(CCC,TNUM)
C
        INTEGER CCC,I,J,K,L,M,N,PARTNO(4),SERNO(4),TNUM
        INTEGER PROJNO(4),MAIN
C
100     TYPE 105
105     FORMAT(' ENTER THE RESOLUTION CODE CATEGORY...',
     1  /5X,'1 = HARDWARE',/5X,'2 = SOFTWARE',
     2  /5X,'3 = OEM/MODEM',/5X,'4 = CUSTOMER INDUCED',/5X,
     3  '5 = TELCO/COMMON CARRIER',/5X,'6 = NETWORK CONFIGUR',
     4  'ATION/TOPOLOGY',
     5  /5X,'7 = POWER OUTAGE AT THE SITE',/5X,'8 = PROJECT',
     6  /5X,'9 = OTHER',/2X,'ENTER CHOICE... ? :',$)
        ACCEPT 110,CCC
110     FORMAT(I2)
        IF ((CCC.LT.1).OR.(CCC.GT.9)) GOTO 100
        CALL CCMENUS(CCC,MAIN)
        IF(MAIN.EQ.1) GOTO 100
C       IF ((CCC.GT.9).AND.(CCC.LT.16)) GOTO 113
C       IF ((CCC.GT.29).AND.(CCC.LT.36)) GOTO 113
C       IF ((CCC.GT.79).AND.(CCC.LT.81)) GOTO 113
        GOTO 150
113     CALL DBERR($118,IERT,IERC,0)
        GOTO 116
118     IF (IERT.NE.7) TYPE 117
        TYPE 121,IERT,IERC
121     FORMAT(/1X,I3,4X,I3)
117     FORMAT(/1X,'SOMETHING WENT WRONG, THE PARTS DATABASE MAY ',
     1  'HAVE A PROBLEM.',/1X,'PLEASE NOTIFY NSSC')
        IF (IERT.NE.7) GOTO 150
        TYPE 115
115     FORMAT(/1X,'DATABASE BUSY.....WAITING')
        CALL WAIT(5.5)
116     CALL DBOPEN('(TNT)PARTS')
        CALL DBUPD(-1)
119     TYPE 120
120     FORMAT(/1X,'ENTER PART NUMBER : ',$)
        ACCEPT 130,PARTNO
130     FORMAT(4A5)
        IF (PARTNO(1).EQ.'     ') GOTO 140
        TYPE 135
135     FORMAT(/1X,'ENTER THE SERIAL NUMBER : ',$)
        ACCEPT 130,SERNO
        TYPE 136
136     FORMAT(/1X,'ENTER THE PROJECT NUMBER : ',$)
        ACCEPT 130,PROJNO
        CALL DBADD(1,TNUM,2,PARTNO,3,SERNO,4,PROJNO)
        GOTO 119
140     CALL DBUPD(0)
        CALL DBCLOSE
150     RETURN
        END
        SUBROUTINE CCMENUS(CCC,MAIN)
C
        INTEGER CCC,MAIN,CHO,I
C
        MAIN=0
        I=0
2       FORMAT(/2X,'ENTER CHOICE... ? (-1 TO RETURN TO MAIN ',
     1  'RESOLUTION CODE MENU) : ',$)
        IF (CCC.EQ.1) GOTO 100
        IF (CCC.EQ.2) GOTO 200
        IF (CCC.EQ.3) GOTO 300
        IF (CCC.EQ.4) GOTO 400
        IF (CCC.EQ.5) GOTO 500
        IF (CCC.EQ.6) GOTO 600
        IF (CCC.EQ.7) GOTO 700
        IF (CCC.EQ.8) GOTO 800
        IF (CCC.EQ.9) GOTO 900
100     TYPE 110
110     FORMAT(/1X,'HARDWARE CATEGORY SUBMENU',/,/)
        TYPE 120
120     FORMAT(/5X,'10 = POWER SUPPLY',/5X,'11 = BOARD         ',
     1  /5X,'12 = CABLE         ',/5X,'13 = PERIPHERAL-DISK/TAPE ',
     2  'DRIVE',/5X,'14 = BACKPLANE/CHASSIS',/5X,'15 = SET-UP/',
     3  'INSTALLATION PROBLEM            ',/5X,'16 = REPLACED ENGINE',
     4  /5X)
        TYPE 2
        ACCEPT 125,CHO
125     FORMAT(I3)
        I=I+1
        IF (CHO.LT.0) GOTO 1049
        IF ((CHO.GT.9).AND.(CHO.LT.17)) GOTO 1050
        IF (I.GT.2) GOTO 1000
        GOTO 100
200     TYPE 210
210     FORMAT(/1X,'SOFTWARE CATEGORY SUBMENU',/,/)
        TYPE 220
220     FORMAT(/5X,'20 = CONFIG/PARAM CHANGE-NO VERSION CHANGE',
     1  /5X,'21 = UPGRADE TO NEW VERSION',/5X,'22 = BACK UP TO ',
     2  'OLDER VERSION',/5X,'23 = INSTALL KNOWN PATCH FIX',
     3  /5X,'24 = NEW PATCH/PATCH NSR SUBMITTED',/5X,
     4  '25 = UNSUPPORTED-FEATURE UNSUPPORTED BY PRODUCT',/5X,
     5  '26 = PIR REQUIRED',/5X,'27 = ANOMALY NSR SUBMITTED',/5X,
     6  '28 = MORE INFO REQUESTED',/5X,'29 = VENDOR SOFTWARE',/5X)
        TYPE 2
        ACCEPT 125,CHO
        I=I+1
        IF (CHO.LT.0) GOTO 1049
        IF ((CHO.GT.19).AND.(CHO.LT.30)) GOTO 1050
        IF (I.GT.2) GOTO 1000
        GOTO 200
300     TYPE 310
310     FORMAT(/1X,'OEM CATEGORY SUBMENU',/,/)
        TYPE 320
320     FORMAT(/5X,'30 = ASYNC MODEM',/5X,'31 = SYNC MODEM',/5X,
     1  '32 = DIGITAL MODEM',/5X,'33 = PAD-BT OWNED OR LEASED',/5X
     2  '34 = BRIDGE/ROUTER',/5X,'35 = SOFTWARE/CONFIGURATION',/5X)
        TYPE 2
        ACCEPT 125,CHO
        I=I+1
        IF (CHO.LT.0) GOTO 1049
        IF ((CHO.GT.29).AND.(CHO.LT.36)) GOTO 1050
        IF (I.GT.2) GOTO 1000
        GOTO 300
400     TYPE 410
410     FORMAT(/1X,'CUSTOMER CATEGORY SUBMENU',/,/)
        TYPE 420
420     FORMAT(/5X,'40 = OPERATOR/PROCEDURE ERROR',/5X,
     1  '41 = VENDOR SOFTWARE PROBLEM',/5X,'42 = VENDOR HARDWARE ',
     2  'PROBLEM',/5X,'43 = CHANGE',/5X,'44 = DOWNTIME',/5X)
        TYPE 2
        ACCEPT 125,CHO
        I=I+1
        IF (CHO.LT.0) GOTO 1049
        IF ((CHO.GT.39).AND.(CHO.LT.45)) GOTO 1050
        IF (I.GT.2) GOTO 1000
        GOTO 400
500     TYPE 510
510     FORMAT(/1X,'TELCO CATEGORY SUBMENU',/,/)
        TYPE 520
520     FORMAT(/5X,'50 = DIAL-UP/OUTDIAL-PUBLIC OR PRIVATE',/5X,
     1  '51 = ANALOG LEASED LINE',/5X,'52 = DIGITAL FACILITY',/5X,
     2  '53 = SPECIAL SERVICES (800/950)',/5X,'54 = T-1',/5X)
        TYPE 2
        ACCEPT 125,CHO
        I=I+1
        IF (CHO.LT.0) GOTO 1049
        IF ((CHO.GT.49).AND.(CHO.LT.55)) GOTO 1050
        IF (I.GT.2) GOTO 1000
        GOTO 500
600     TYPE 610
610     FORMAT(/1X,'CONFIG/TOPOLOGY CATEGORY SUBMENU',/,/)
        TYPE 620
620     FORMAT(/5X,'60 = CONFIGURATION GUIDELINES EXCEEDED',/5X,
     1  '61 = DEAD-ENDED NODE',/5X,'62 = VALIDATIONS',/5X,
     2  '63 = FOREIGN NETWORK/IRC/PTT',/5X)
        TYPE 2
        ACCEPT 125,CHO
        I=I+1
        IF (CHO.LT.0) GOTO 1049
        IF ((CHO.GT.59).AND.(CHO.LT.64)) GOTO 1050
        IF (I.GT.2) GOTO 1000
        GOTO 600
700     TYPE 710
710     FORMAT(/1X,'POWER CATEGORY SUBMENU',/,/)
        TYPE 720
720     FORMAT(/5X,'70 = SCHEDULED OUTAGE',/5X,'71 = UNSCHEDULED ',
     1  'OUTAGE',/5X,'72 = CUSTOMER SITE OUTAGE',/5X)
        TYPE 2
        ACCEPT 125,CHO
        I=I+1
        IF (CHO.LT.0) GOTO 1049
        IF ((CHO.GT.69).AND.(CHO.LT.73)) GOTO 1050
        IF (I.GT.2) GOTO 1000
        GOTO 700
800     TYPE 810
810     FORMAT(/1X,'PROJECT CATEGORY SUBMENU',/,/)
        TYPE 820
820     FORMAT(/5X,'80 = PROJECT',/5X)
        TYPE 2
        ACCEPT 125,CHO
        I=I+1
        IF (CHO.LT.0) GOTO 1049
        IF ((CHO.GT.79).AND.(CHO.LT.81)) GOTO 1050
        IF (I.GT.2) GOTO 1000
        GOTO 800
900     TYPE 910
910     FORMAT(/1X,'OTHER CATEGORY SUBMENU',/,/)
        TYPE 920
920     FORMAT(/5X,'90 = SLOT RELOAD',/5X,'91 = SLOT DUMPED & ',
     1  'RELOADED',/5X,'92 = NODE RELOAD',/5X,'93 = NODE DUMPED ',
     2  '& RELOADED',/5X,'94 = DOCUMENTATION',/5X,'95 = PROBLEM ',
     3  'CLEARED BEFORE RESOLUTION/NTF     ',/5X,'96 = SLOT H&E',/5X,
     4  '97 = REF. TO EXISTING TKT',/5X,'98 = CLEARED WHILE ',
     5  'TESTING',/5X,'99 = TRACKING',/4X,'100 = SOFT PORT/LINK ',
     6  'RESET',/4X)
        TYPE 2
        ACCEPT 125,CHO
        I=I+1
        IF (CHO.LT.0) GOTO 1049
        IF ((CHO.GT.89).AND.(CHO.LT.101)) GOTO 1050
        IF (I.GT.2) GOTO 1000
        GOTO 900
1000    MAIN=1
        CCC=0
        TYPE 1010
1010    FORMAT(/1X,'INVALID SUBMENU SELECTION....',/1X,
     1  'RETURNING TO MAIN CLOSEOUT CODE MENU.')
        RETURN
1050    CCC=CHO
        RETURN
1049    MAIN=1
        RETURN
        END

C       ROUTINE TO STORE RESOLUTION CODE IN BASE6 WHEN REFER GROUP
C       CHANGE IS MADE.  RESOLUTION CODE IS RETURNED TO MAIN
C       PROGRAM TO BE INCLUDED IN AUTO STATUS


        SUBROUTINE RESCOD(TNUM,CCC,ANS,L)

C
        INTEGER CCC,TNUM,IERT,I,J,K,RECORD,IERC,NUMBER
        INTEGER ANS,L,X

        DOUBLE PRECISION CODE(120)
        DATA (CODE(K),K=1,66)/'NONE     ','          ','          ',
     1  '          ','          ','          ','          ',
     2  '          ','         ','PWR SUPPLY','BOARD ','CABLE ',
     3  'PERIPHERAL','BPLN/CHASS','SETUP PROB','REPL/ENGN ',
     4  '          ','          ','          ','CONFIG CHG',
     5  'VRSN UPGRD','VRSN DNGRD','KNWN PTCH','NEW PTCH','UNSPPRTD',
     6  'PIR REQRD','NSR SBMTTD','MO.INF.REQ','VENDOR    ',
     7  'ASYC MODEM','SYNC MODEM','DGTL MODEM','BT PAD    ',
     8  'BRDG/RTR','SWARE CNFG','         ','         ','          ',
     9  '          ','OP/PCDR ER','SWARE/VNDR','HWARE/VNDR',
     A  'CHANGE','DOWNTIME','          ','          ','          ',
     B  '          ','          ','DIAL-UP','ANALOG','DIGITAL',
     C  'SS 800/950','T-1       ','          ','          ',
     D  '          ','          ','          ','CFG GL EXC',
     E  'DEADENDED','VALIDATION','IRC/PTT','          ',
     F  '          ','          '/
        DATA (CODE(K),K=67,120)/'        ','        ','        ',
     G  'SCHD OUT','UNSCHD OUT','CUST. SITE',
     H  '          ','          ','          ','          ',
     I  '          ','          ','          ','PROJECT   ',
     J  '          ','          ','          ','          ',
     K  '          ','          ','          ','          ',
     L  '          ','SLT RLOD','SDUMP&RLOD','NODE RLOD','NDUMP&RLOD',
     M  'DOCUMENTN ','NTF/CWT   ','SLOT H&E  ','REF-OTH-TK',
     N  'CWT       ','TRACKING  ','P/L RESET ','          ',
     K  '          ','          ','          ','          ',
     K  '          ','          ','          ','          ',
     K  '          ','          ','          ','          ',
     K  '          ','          ','          ','          ',
     K  '          ','          ','          '/


        CALL DBERR($10,IERT,IERC,0)
        GOTO 12
10      IF(IERT.NE.7) GOTO 999
        TYPE 11
11      FORMAT(/1X,'DATABASE BUSY.........WAITING 10 SECONDS')
        CALL WAIT(5.0)
12      CALL DBOPEN('(TNT)BASE1')
        CALL DBFIND(1,1,TNUM)
        CALL DBNREC(NUMBER)
        IF ((NUMBER.EQ.0).OR.(NUMBER.GT.1)) GOTO 900
        CALL DBGREC($999,1)
        CALL DBVAL(17,CCC)
        IF(CCC.EQ.0) CCC=1
        X=0
        IF(((ANS.EQ.'C').AND.(CCC.LT.10)).OR.(((ANS.EQ.'S').OR.
     1  (ANS.EQ.'L')).AND.((L.EQ.2).OR.(L.EQ.3)).AND.(CCC.LT.
     2  10))) X=1
13      IF(((ANS.EQ.'C').AND.(CCC.LT.10)).OR.(((ANS.EQ.'S').OR.
     1  (ANS.EQ.'L')).AND.((L.EQ.2).OR.(L.EQ.3)).AND.(CCC.LT.
     2  10))) CALL CLOUT(CCC,TNUM)
        IF((X.EQ.1).AND.(CCC.LT.10)) TYPE 14
14      FORMAT(/1X,'RESOLUTION CODE HAS NOT BEEN SET.  YOU MAY NOT ',
     1  'CLOSE A TICKET',/1X,'WITHOUT SETTING THE RESOLUTION/',
     2  'CLOSEOUT CODE TO SOMETHING',/1X,'OTHER THAN NONE!',/1X)
        IF((X.EQ.1).AND.(CCC.LT.10)) GOTO 13
        IF(X.EQ.1) GOTO 28
        TYPE 20,CCC,CODE(CCC)
20      FORMAT(/1X,'THE RESOLUTION CODE IS CURRENTLY SET TO ',I3,
     1  '  ',A10,/1X,'TYPE Y TO CHANGE, N OR C.R. FOR NO CHANGE, OR ',
     2  /1X,'1 TO SET NO RESOLUTION AT THIS TIME.',/1X,'DO YOU WISH ',
     3  'TO CHANGE THE RESOLUTION CODE? : ',$)
        ACCEPT 25,J
25      FORMAT(A5)
        CALL HISET(J)
        IF (J.EQ.'Y') CALL CLOUT(CCC,TNUM)
        IF (J.EQ.'1') CCC=1
28      CALL DBERR($26,IERT,IERC,0)
        GOTO 27
26      IF(IERT.NE.7) GOTO 999
        TYPE 11
        CALL WAIT(5.0)
27      CALL DBOPEN('(TNT)BASE1')
        CALL DBFIND(1,1,TNUM)
        CALL DBGREC($999,1)
        CALL DBUPD(-1)
        CALL DBCHNG(17,CCC,55,CODE(CCC))
        CALL DBUPD(0)
        CALL DBCLOSE
        RETURN
C       IF((J.NE.'Y').AND.(J.NE.'1').AND.(CCC.EQ.1)) CCC=0
        CALL DBERR($30,IERT,IERC,0)
        GOTO 31
30      IF(IERT.NE.7) GOTO 999
        TYPE 11
        CALL WAIT(5.0)
31      CALL DBOPEN('(TNT)BASE6')
        CALL DBUPD(-1)
        CALL DBNREC(RECORD)
        IF(RECORD.EQ.0) GOTO 910
        CALL DBGREC($999,RECORD)
        CALL DBCHNG(13,CCC)
        CALL DBUPD(0)
        CALL DBCLOSE
        IF(CCC.EQ.0) CCC=1
        RETURN
900     CALL DBCLOSE
        TYPE 901,TNUM
901     FORMAT(/1X,'TICKET NUMBER ',I8,' WAS NOT FOUND')
        IF(CCC.EQ.0) CCC=1
        RETURN
910     CALL DBCLOSE
        IF(CCC.EQ.0) CCC=1
        RETURN
999     TYPE 1000,IERT,IERC
1000    FORMAT(/1X,'ERROR TYPE = ',I3,4X,'ERROR CODE = ',I3,/)
        IF(CCC.EQ.0) CCC=1
        RETURN
        END
C*********************************
C
C       GDIS SUBROUTINE
C
C*********************************
        SUBROUTINE GDIS(V1,V2,V3,V4,V5,V6,TNUM,BAS1)
C
        INTEGER TNUM,V1,V2,V3,V4,V5,V6,BAS1(3),NUM,I,B,C
C
40      I=1
50      TYPE 55
55      FORMAT(1X,'TICKET NUMBER : ',T20,$)
        CALL DBOPEN(BAS1)
58      ACCEPT 60,TNUM
60      FORMAT(I8)
65      IF (TNUM.EQ.0) RETURN
        CALL DBFIND(1,1,TNUM)
        CALL DBNREC(NUM)
        IF (NUM.GT.0) GOTO 70
        IF (I.EQ.3) GOTO 200
        TYPE 68,TNUM
68      FORMAT(/3X,'TICKET NUMBER ',I8,' CAN NOT BE FOUND.',/)
        I=I+1
        TYPE 55
        GOTO 58
70      CALL DBGREC($200,1)
        CALL DBVAL(34,V5,35,V6,36,V1,37,V2,38,V3,39,V4)
        CALL DBCLOSE
        RETURN
200     TYPE 205
205     FORMAT(/3X,'USE THE "O" COMMAND IF YOU NEED HELP.',/)
        TNUM=0
        CALL DBCLOSE
        RETURN
        END
C
C
C       SUBROUTINE TO DETERMINE PERIOD OF DAY FOR NETCON
C
        SUBROUTINE NPHONE(REPN,REPF,UNAM,JJ1)
C
        INTEGER REPN(4),REPF(4),SH,SM,TIM1,HALF,Y,S,M,D,UNAM(3),JJ1
C
        JJ1=1
160     IF (UNAM(1).EQ.'NETCO') GOTO 200
        IF (UNAM(1).EQ.'CSS80') GOTO 220
        IF (UNAM(1).EQ.'NSSC') GOTO 230
        IF (UNAM(1).EQ.'FLMTE') GOTO 240
        IF (UNAM(1).EQ.'ENMC') GOTO 260
        RETURN
200     ENCODE(20,205,REPN)
205     FORMAT('NETWORK CONTROL     ')
155     FORMAT('408/922-7301        ')
        ENCODE(20,155,REPF)
        RETURN
220     ENCODE(20,225,REPN)
        ENCODE(20,227,REPF)
225     FORMAT('CS&S 800 SRVC CENTER')
227     FORMAT('215/666-1770        ')
        RETURN
230     ENCODE(20,235,REPN)
        ENCODE(20,237,REPF)
235     FORMAT('NETWORK SYSTEMS SUP.')
237     FORMAT('215/666-3401        ')
        RETURN
240     ENCODE(20,245,REPN)
        ENCODE(20,247,REPF)
245     FORMAT('1ST LINE MAINTENANCE')
247     FORMAT('215/666-3401        ')
        RETURN
260     ENCODE(20,262,REPN)
        ENCODE(20,264,REPF)
262     FORMAT('EURO NTWK MGMT CENTR')
264     FORMAT('331.4789.0817       ')
        RETURN
        END
C
C       SUB-ROUTINE TO PRINT THE HEADER OF A TICKET
C
        SUBROUTINE WWHD(TNUM)
C
        INTEGER TNUM,PRO,T40,F2,SDAT,TIM1,RNAM(4),RFON(4)
        INTEGER NET(2),INT,RS,SITC(4),SITP(4),PROD,STAT,DISC(169)
        INTEGER CCOD,HQCC,ONUM(2),SRGN,HRGN,LOC(4),KHST,COV,COMMNT(4)
        INTEGER CDAT,TCLSD,STH,EHR,PORT,CNAM(3),TECH(3),VER,V5,V6
        INTEGER V1,V2,V3,V4,NODE,SLOT,HOST,CKT(4),TRB(4),BILL,ESC
        INTEGER F1,NT,DUP,TUP,MAINT,SVER,HH,COC(2),CBY,PROBL(2)
        INTEGER JD,JM,JY,CBAK(4),SM,SD,SY,RECORD,NUMBER
        INTEGER IM,ID,IY,NBR,CHEX,ORDER,RECD
        REAL ELM,HOUR
C
        DIMENSION JUNK(1)
        DATA JUNK/'   '/
        DIMENSION AM(12)
        DATA (AM(I),I=1,12)/'JAN','FEB','MAR','APR','MAY','JUN',
     1  'JUL','AUG','SEP','OCT','NOV','DEC'/
        DIMENSION YN(2)
        DATA (YN(I),I=1,2)/'NO','YES'/
        DIMENSION NETOP(26)
        DATA (NETOP(I),I=1,27)/'NSSC','NETCN','ONTYM','CS800','BTDUB',
     1  'NTENG','BTAUS','UKMSG','BTJPN','NISOP','BTUK','BTHK','NTS  ',
     2  'EDICN','BTALS','PORTS','GCSCL','MSGCN','BTAP ','BTSNG',
     3  'ECSC ','ENMC ','LNKOP','UK800','TSIS','BTCAN','CONFR'/
C
        CALL DBVAL(1,TNUM,2,PRO,3,T40,4,F2,5,SDAT,6,TIM1,7,RNAM,8,RFON,
     1  9,NET,10,INT,11,RS,12,SITC,13,SITP,14,PROD,15,STAT,16,DISC,17,
     2  CCOD,18,HQCC,19,ONUM,20,SRGN,21,HRGN,22,
     3  LOC,23,KHST,24,COV,25,COMMNT,26,CDAT,27,TCLSD,28,STH,29,EHR,
     4  30,PORT,31,CNAM,32,TECH,33,VER,34,V5,35,V6,36,V1,37,V2,38,V3,
     5  39,V4,40,NODE,41,SLOT,42,HOST,43,CKT,44,TRB,45,BILL,46,ESC,47,
     6  F1,48,NT,49,DUP,50,TUP,51,MAINT,52,SVER,53,HH,54,ELM,55,COC,
     7  56,CBY)
        IF(TNUM.GT.329999) CALL DBVAL(57,PROBL)
678     CALL DBNDAT(SDAT,IM,ID,IY)
        IF (DUP.GT.0) GOTO 686
        JY=0
        JD=0
        SM=0
        SD=0
        SY=0
        JM=0
        GOTO 687
686     IF (CDAT.EQ.0)GOTO 685
        CALL DBNDAT(CDAT,SM,SD,SY)
        SY=SY-1900
685     CALL DBNDAT(DUP,JM,JD,JY)
        JY=JY-1900
687     IY=IY-1900
        CALL MTTR(SDAT,DUP,TIM1,TUP,ELM,HOUR)
        IF (NT.EQ.2) GOTO 655
        IF (NT.EQ.3) GOTO 674
654     WRITE(8,680)NET,SVER,CNAM,TNUM,STAT,SITC,NODE,NETOP(HH),
     1  SITP,KHST,MAINT,LOC,PROD,V1,V2,V3,RNAM,VER,YN(ESC),RFON,
     2  SRGN,HQCC,COV,HRGN,V4,V6,STH,EHR,YN(PRO),ID,
     3  AM(IM),IY,TIM1,TECH,INT,JD,AM(JM),JY,TUP,CKT,F1,SD,AM(SM),
     4  SY,TCLSD,TRB
680     FORMAT(/1X,'NETWORK',T11,2H: ,2A5,T24,'SEVERITY',T37,2H: ,
     1  I1,T50,'CUSTOMER: ',3A5,/1X,'NODE TKT#: ',I8,T24,'STATE',
     2  T37,2H: ,A5,T50,'CONTACT : ',4A5,/1X,'NODE #',T11,2H: ,
     3  I5,T24,'CONTROL GROUP: ',A5,T51,'CPHONE : ',4A5,/1X,
     4  'KERNAL',T11,2H: ,I5,T24,'REFERRED TO',T37,2H: ,A5,T50,
     5  'LOCALE',T58,2H: ,4A5,/1X,'PRODUCT',T11,2H: ,A5,T24,
     6  'MGMT ESCAL',T37,3H: H,I1,2H S,I1,2H T,I1,T50,'RPTD ',
     7  'BY : ',4A5,/1X,'S/W VERS : ',A5,T24,'TECH ESCAL',T37,
     8  2H: ,A3,T51,'RPHONE : ',4A5,/1X,'S/W DIST : ',A5,T24,
     9  'DE-ESCAL CODE: ',I3,T50,'PLAN #',T58,2H: ,A2,/1X,
     A  'H/W DIST : ',A5,T24,'DEFER :  ',I3,1H/,I3,T50,'SITE HR ',
     B  2H: ,A5,' TO ',A5,/1X,'PRIMARY  : ',A3,T24,'OPEN  : ',
     C  I2,1H-,A3,1H-,I2,1X,A5,1HZ,2X,'COM SPEC: ',3A5,/1X,
     D  'OPEN BY',T11,2H: ,A3,T24,'RESLV : ',I2,1H-,A3,1H-,I2,
     E  1X,A5,1HZ,T50,'CKT #',T58,2H: ,4A5,/1X,'ZONE',T11,2H: ,I1,T24,
     F  'CLOSE : ',I2,1H-,A3,1H-,I2,1X,A5,1HZ,T50,'TELCO # : ',4A5)
        WRITE(8,688)HOUR,ONUM,COC,YN(BILL),YN(T40),PROBL
688     FORMAT(T24,'ELAPS :  ',F8.1,4H HR.,T50,'REF.TKT#: ',2A5,
     1  /,T24,'CLSCD : '2A5,T50,'BILL/T40: 'A3,1H/,A3,/,
     2  /1X,'REPORTED PROBLEM: ',2A5,/)
        GOTO 684
655     WRITE(8,689)NET,SVER,CNAM,TNUM,STAT,SITC,NODE,NETOP(HH),
     1  SITP,KHST,MAINT,LOC,HOST,V1,V2,V3,RNAM,SLOT,YN(ESC),RFON,
     2  PORT,HQCC,COV,PROD,V4,V6,STH,EHR,VER,ID,AM(IM),
     3  IY,TIM1,TECH,SRGN,JD,AM(JM),JY,TUP,CKT,HRGN,
     4  SD,AM(SM),SY,TCLSD,TRB
689     FORMAT(/1X,'NETWORK',T11,2H: ,2A5,T24,'SEVERITY',T37,2H: ,
     1  I1,T50,'CUSTOMER: ',3A5,/1X,'HOST TKT#: ',I8,T24,'STATE',
     2  T37,2H: ,A5,T50,'CONTACT : ',4A5,/1X,'NODE #',T11,2H: ,
     3  I5,T24,'CONTROL GROUP: ',A5,T51,'CPHONE : ',4A5,/1X,
     4  'KERNAL',T11,2H: ,I5,T24,'REFERRED TO',T37,2H: ,A5,T50,
     5  'LOCALE',T58,2H: ,4A5,/1X,'HOST #',T11,2H: ,I6,T24,
     6  'MGMT ESCAL',T37,3H: H,I1,2H S,I1,2H T,I1,T50,'RPTD ',
     7  'BY : ',4A5,/1X,'SLOT     : ',A2,T24,'TECH ESCAL',T37,
     8  2H: ,A3,T51,'RPHONE : ',4A5,/1X,'# PORTS  : ',I3,T24,
     9  'DE-ESCAL CODE: ',I3,T50,'PLAN #',T58,2H: ,A2,/1X,
     A  'PRODUCT  : ',A5,T24,'DEFER :  ',I3,1H/,I3,T50,'SITE HR ',
     B  2H: ,A5,' TO ',A5,/1X,'S/W VERS : ',A5,T24,'OPEN  : ',
     C  I2,1H-,A3,1H-,I2,1X,A5,1HZ,2X,'COM SPEC: ',3A5,/1X,
     D  'S/W DIST',T11,2H: ,A5,T24,'RESLV : ',I2,1H-,A3,1H-,I2,
     E  1X,A5,1HZ,T50,'CKT #',T58,2H: ,4A5,/1X,'H/W DIST : ',A5,T24,
     F  'CLOSE : ',I2,1H-,A3,1H-,I2,1X,A5,1HZ,T50,'TELCO # : ',4A5)
        WRITE(8,668)YN(PRO),HOUR,ONUM,INT,COC,YN(BILL),YN(T40),F1,PROBL
668     FORMAT(1X,'PRIMARY  : ',A3,T24,'ELAPS : ',F8.1,4H HR.,T50,
     1  'REF.TKT#: ',2A5,/1X,'OPEN BY  : ',A3,T24,'CLSCD : '2A5,T50,
     2  'BILL/T40: ',A3,1H/,A3,/1X,'ZONE',T11,2H: ,I1,/,
     3  /1X,'REPORTED PROBLEM: ',2A5,/)
        GOTO 684
C
C       CIRCUIT TICKET DISPLAY
C
674     WRITE(8,669)NET,SVER,CNAM,TNUM,STAT,SITC,NODE,NETOP(HH),
     1  SITP,KHST,MAINT,LOC,HOST,V1,V2,V3,RNAM,VER,YN(ESC),RFON,
     2  PROD,HQCC,COV,HRGN,V4,V6,STH,EHR,YN(PRO),
     3  ID,AM(IM),IY,TIM1,CKT,INT,JD,AM(JM),JY,TUP,TRB,F1,SD,AM(SM),
     4  SY,TCLSD,ONUM
669     FORMAT(/1X,'NETWORK',T11,2H: ,2A5,T24,'SEVERITY',T37,2H: ,
     1  I1,T50,'CUSTOMER: ',3A5,/1X,'LINE TKT#: ',I8,T24,'STATE',
     2  T37,2H: ,A5,T50,'CONTACT : ',4A5,/1X,'LONODE',T11,2H: ,
     3  I5,T24,'CONTROL GROUP: ',A5,T51,'CPHONE : ',4A5,/1X,
     4  'LO KHOST',T11,2H: ,I5,T24,'REFERRED TO',T37,2H: ,A5,T50,
     5  'LOCALE',T58,2H: ,4A5,/1X,'HI NODE',T11,2H: ,I5,T24,
     6  'MGMT ESCAL',T37,3H: H,I1,2H S,I1,2H T,I1,T50,'RPTD ',
     7  'BY : ',4A5,/1X,'HI KHOST : ',A5,T24,'TECH ESCAL',T37,
     8  2H: ,A3,T51,'RPHONE : ',4A5,/1X,'SPEED    : ',A5,T24,
     9  'DE-ESCAL CODE: ',I3,T50,'PLAN #',T58,2H: ,A2,/1X,
     A  'H/W DIST : ',A5,T24,'DEFER :  ',I3,1H/,I3,T50,'SITE HR ',
     B  2H: ,A5,' TO ',A5,/1X,'BACKBONE : ',A3,T24,'OPEN  : ',
     C  I2,1H-,A3,1H-,I2,1X,A5,1HZ,2X,'CIRCUIT : ',4A5,/1X,
     D  'OPEN BY',T11,2H: ,A3,T24,'RESLV : ',I2,1H-,A3,1H-,I2,
     E  1X,A5,1HZ,T50,'TELCO #',T58,2H: ,4A5,/1X,'ZONE',T11,2H: ,I1,T24,
     F  'CLOSE : ',I2,1H-,A3,1H-,I2,1X,A5,1HZ,T50,'REF TKT#: ',3A5)
        WRITE(8,667)HOUR,TECH,COC,YN(BILL),YN(T40),PROBL
667     FORMAT(T24,'ELAPS : ',F8.1,4H HR.,T50,'ANALYSIS: ',3A5,
     1  /,T24,'CLSCD : '2A5,T50,'BILL/T40: 'A3,1H/,A3,/,
     2  /1X,'REPORTED PROBLEM: ',2A5,/)
684     CALL WDISC(DISC)
690     CONTINUE
        CALL DBSET(3)
        CALL DBFIND('RS',1,1,'OR','RS',1,9,1,1,1,TNUM)
        CALL DBNREC(NBR)
        IF (NBR.EQ.0) GOTO 713
        WRITE(8,709)
709     FORMAT(/1X,'***ESCALATIONS PERFORMED ...***',/3X,'PERSON',T27,
     1  'DATE/TIME',/)
        DO 708 I=1,NBR
        CALL DBGREC($713,I)
        CALL DBVAL(2,SDAT,3,TIM1,4,RNAM)
        CALL DBNDAT(SDAT,IM,ID,IY)
        IY=IY-1900
        WRITE(8,707)RNAM,AM(IM),ID,IY,TIM1
707     FORMAT(3X,4A5,T27,A3,1H-,I2,1H-,I2,2X,A5)
708     CONTINUE
713     CALL DBFIND('RS',1,0,'OR','RS',1,8,1,1,1,TNUM)
        CALL DBNREC(RECD)
        IF (RECD.EQ.0) RETURN
        WRITE(8,714)
714     FORMAT(/1X,'CALL BACK LIST...',/3X,'PERSON',T25,'COMPANY',
     1  T46,'PHONE NUMBER',4X,'TALKED TO ?',/)
        DO 718 J=1,RECD
        CALL DBGREC($200,J)
        CALL DBVAL(4,RNAM,7,SITC,8,SITP,13,CHEX,12,cbak)
        WRITE(8,716)CHEX,SITC,RNAM,SITP(1),SITP(2),SITP(3),CBAK(1),
     1  CBAK(2),CBAK(3)
716     FORMAT(1X,A1,1X,4A5,T25,4A5,1X,A5,A5,A5,2X,A5,A5,A5)
718     CONTINUE
200     RETURN
        END
C
C************************
C
C       PAP16
C
C************************
C
C
C       SUBROUTINE TO TAKE NORMAL DATE AND CHANGE TO 1022
C
        SUBROUTINE CGDAT(DAT)
C
        INTEGER DAT,SM,SD,SY
C
        TYPE 100
100     FORMAT(1X,'ENTER DATE MM/DD/YY : ',$)
        ACCEPT 105,SM,SD,SY
105     FORMAT(I2,1X,I2,1X,I4)
        IF (SM.EQ.0) GOTO 110
        CALL CDAT(SY)
        CALL DBDATN(DAT,SM,SD,SY)
        RETURN
110     DAT=0
        RETURN
        END
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C       SUBROUTINE TO CHANGE THE SDAT NUMBER
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
        SUBROUTINE CHSDT1(BAS,BAS10)
C
        INTEGER SDAT,NSDAT,TNUM,NUMBER,Z,BAS(3),IERT,IERC,DAT,ELM
        INTEGER MIDV(4),NT,BAS10(3)
C
90      Z=1
        ELM=0
100     TYPE 105
105     FORMAT(1X,'TICKET NUMBER : ',$)
        ACCEPT 110,TNUM
110     FORMAT(I8)
        IF (TNUM.EQ.0) RETURN
114     CALL DBOPEN(BAS)
        CALL DBFIND(1,1,TNUM)
        CALL DBNREC(NUMBER)
        IF (NUMBER.EQ.0) GOTO 200
        CALL DBGREC($300,NUMBER)
        CALL DBVAL('SDAT',SDAT)
        CALL DBNDAT(SDAT,SM,SD,SY)
        TYPE 115,TNUM,SM,SD,SY
115     FORMAT(/1X,'THE CURRENT DATE DOWN FOR TICKET NUMBER ',I8,
     1  ' IS... ',/,/5X,I2,1H-,I2,1H-,I4,/,/1X,'ENTER THE NEW VALUE ',
     2  'OR A C.R. FOR NO CHANGE : ')
        CALL CGDAT(DAT)
120     FORMAT(I6)
        IF (DAT.EQ.0) GOTO 300
        CALL CHA1I(BAS,5,DAT,TNUM)
        CALL CHA1I(BAS,54,ELM,TNUM)
        RETURN
200     IF (Z.EQ.2) GOTO 215
        Z=2
        ENCODE(15,205,BAS)
205     FORMAT('(TNT)BASE4',5X)
        GOTO 114
215     TYPE 220,TNUM
220     FORMAT(1X,'TICKET NUMBER ',I8,' CAN NOT BE FOUND. PLEASE TRY',
     1  ' AGAIN.')
        ENCODE(15,206,BAS)
206     FORMAT('(TNT)BASE1',5X)
        Z=1
        GOTO 90
295     TYPE 296,IERT,IERC
296     FORMAT(/3X,'ERROR TYPE = ',I5,4X,'ERROR CODE = ',I5,
     1  /,/2X,'CHANGE IS NOT COMPLETE.')
        RETURN
300     TYPE 305
305     FORMAT(1X,'NO CHANGE WAS MADE.')
        CALL DBCLOSE
        RETURN
        END
C
        SUBROUTINE GETBAK

        INTEGER SDAT,TIM1,INT,RS,STAT,INFO(64),PNAM(3),ORDER
        INTEGER STYP,TNUM,NDAT,NTIM,MAINT,ELM,NET,SVER,PROD
        INTEGER COC,DRP,TT,ZONE,TET,I,J,K,L,NUMBER,M,N,HSTAT
        CALL DBOPEN('(TNT)BASE1','(TNT)BASE2','(TNT)BASE5',
     1  '(TNT)BASE6','(TNT)BASE7')
        CALL DBSET(1)
        CALL DBFIND('ALL')
        CALL DBNREC(NUMBER)
        TYPE 3,NUMBER
3       FORMAT(/1X,I8)
        CALL DBMAP(3,'TNUM','TNUM')
        CALL DBNREC(NUMBER)
        M=0
        CALL DBERR($5,IERT,IERC,0)
        GOTO 6
5       IF (IERT.NE.7) GOTO 150
        CALL WAIT(5.5)
6       CONTINUE
        CALL DBSET(3)
        TYPE 2
2       FORMAT(/1X,'MOVING STATUS FROM BASE5 TO BASE2')
        IF (NUMBER.EQ.0) GOTO 11
        TYPE 7,NUMBER
7       FORMAT(/1X,I5)
        DO 10 K=1,NUMBER
        CALL DBERR($40,IERT,IERC,0)
        GOTO 41
40      IF(IERT.NE.7) GOTO 150
        CALL WAIT(5.5)
41      CONTINUE
        IF (M.EQ.0) CALL DBSET(2)
        IF (M.EQ.0) CALL DBUPD(-1)
        CALL DBSET(3)
        TYPE 8,K,M
8       FORMAT(/1X,I5,3X,I3)
        CALL DBGREC($11,K)
        CALL DBVAL(1,TNUM,2,SDAT,3,TIM1,4,INT,5,RS,6,STAT,7,INFO,8,PNAM,
     1  9,ORDER,10,STYP)
        RS=6
        CALL DBSET(2)
        CALL DBADD(1,TNUM,2,SDAT,3,TIM1,4,INT,5,RS,6,STAT,7,INFO,
     1  8,PNAM,9,ORDER,10,STYP)
        CALL DBSET(3)
        CALL DBDEL
        M=M+1
        IF (M.EQ.30) CALL DBSET(2)
        IF (M.EQ.30) CALL DBUPD(0)
        IF (M.EQ.30) CALL WAIT(8.0)
        IF (M.EQ.30) M=0
10      CONTINUE
11      CALL DBSET(1)
        CALL DBFIND('ALL')
        CALL DBMAP(5,'TNUM','TNUM')
        CALL DBNREC(NUMBER)
        M=0
        CALL DBERR($12,IERT,IERC,0)
        GOTO 13
12      IF (IERT.NE.7) GOTO 150
        CALL WAIT(5.5)
13      CONTINUE
        CALL DBSET(5)
        TYPE 14
14      FORMAT(/1X,'MOVING TRACK ENTRIES FROM BASE7 TO BASE6')
        TYPE 15,NUMBER
15      FORMAT(/1X,I5)
        IF (NUMBER.EQ.0) GOTO 199
        DO 20 K=1,NUMBER
        IF (M.EQ.0) CALL DBSET(4)
        IF (M.EQ.0) CALL DBUPD(-1)
        CALL DBSET(5)
        TYPE 16,K,M
16      FORMAT(/1X,I5,3X,I3)
        CALL DBGREC($199,K)
        CALL DBVAL(1,TNUM,2,SDAT,3,TIM1,4,NDAT,5,NTIM,6,RS,7,STAT,
     1  8,MAINT,9,ELM,10,NET,11,SVER,12,PROD,13,COC,14,INT,15,DRP,
     2  16,TT,17,ZONE,18,TET)
        CALL DBSET(4)
        CALL DBADD(1,TNUM,2,SDAT,3,TIM1,4,NDAT,5,NTIM,6,RS,7,STAT,
     1  8,MAINT,9,ELM,10,NET,11,SVER,12,PROD,13,COC,14,INT,15,DRP,
     2  16,TT,17,ZONE,18,TET)
        CALL DBSET(5)
        CALL DBDEL
20      CONTINUE
30      M=M+1
        IF (M.EQ.30) CALL DBSET(4)
        IF (M.EQ.30) CALL DBUPD(0)
        IF (M.EQ.30) CALL WAIT(8.0)
        IF (M.EQ.30) M=0

100     CONTINUE
150     TYPE 151,IERT,IERC
151     FORMAT(/1X,'ERROR TYPE = ',I5,4X,'CODE = ',I5)
199     CALL DBCLOSE
        RETURN
201     END
        SUBROUTINE CHKBAK

        INTEGER SDAT,TIM1,INT,RS,STAT,INFO(64),PNAM(3),ORDER
        INTEGER STYP,TNUM,NDAT,NTIM,MAINT,ELM,NET,SVER,PROD
        INTEGER COC,DRP,TT,ZONE,TET,I,J,K,L,NUMBER,M,N
        CALL DBOPEN('(TNT)BASE1','(TNT)BASE5','(TNT)BASE7')
        CALL DBSET(1)
        CALL DBFIND('ALL')
        CALL DBNREC(NUMBER)
        TYPE 3,NUMBER
3       FORMAT(/1X,I8)
        DO 100 I=1,NUMBER
        TYPE 2,I
2       FORMAT(/1X,I4)
        CALL DBSET(1)
        CALL DBGREC(110,I)
        CALL DBVAL(1,TNUM)
        CALL DBSET(2)
        CALL DBFIND(1,1,TNUM)
        CALL DBNREC(J)
        CALL DBSET(3)
        CALL DBFIND(1,1,TNUM)
        CALL DBNREC(M)
        IF ((J.GT.0).OR.(M.GT.0)) TYPE 1,TNUM,J,M
1       FORMAT(1X,I8,4X,I3,4X,I3)
        IF ((J.GT.O).OR.(M.GT.0)) K=K+1
        L=L+J
        N=N+M
100     CONTINUE
        TYPE 105,L,N,K
105     FORMAT(/1X,'THERE ARE ',I4,' STATUS AND ',
     1  /11X,I4,' TRACK ENTRIES ',/8X,'IN ',I4,' TICKETS, THAT NEED',
     2  ' TO BE MOVED.')
        GOTO 199
110     TYPE 111
111     FORMAT(/1X,'PROBLEM OCCURED.  CHECK SUBROUTINE.')
199     RETURN
200     END
        SUBROUTINE HLPREP
C
        TYPE 10
10      FORMAT(/1X'THE "REPORTED PROBLEM" CODES ARE...',/2X,
     1  '1 = OPER INTERCEPT',T22,
     1  '11 = MODEM',T42,'21 = HW/MS LINK',/2X,'2 = RNA',T22,
     2  '12 = INTL ACCESS',T42,'22 = DBU FAILED',/2X,
     3  '3 = BUSY',T22,'13 = PAP PROBLEM',T42,'23 = PERIPHERAL',
     4  /2X,'4 = GARBAGE',T22,'14 = NODE DOWN',T42,
     5  '24 = CHRONIC',/2X,'5 = NO CARRIER',T22,'15 = NODE RESTART',T42,
     6  '25 = HOST SHUT',/2X,'6 = TONE, NO RESP.',T22,'16 = HOST DOWN',
     7  T42,'26 = NONE ',/2X,'7 = NR TO TID',T22,'17 = HOST MISSING',
     8  T42,'27 = OTHER',/2X,'8 = SLOW RSPNSE',T22,'18 = SLOT RESTART',
     9  T42,'28 = DIALCOM',/2X,'9 = USER DRPD',T22,'19 = UTILITY CODE',
     A  T42,'29 = NET BILLING',/1X,'10 = OUTDIAL',T22,'20 = ',
     B  'LEASED LINE',T42,'30 = EDI BILLING',//1X,'31 = ETS BILLING',
     C  T22,'32 = DCOM BILLING',T42,'33 = ONTYM BILLING',/1X,
     D  '34 =             ',T22,'35 =             ')
        RETURN
        END


C
        SUBROUTINE STBKCL(TNUM,SITC,REPF,ME,TIM1,SDAT)
C
        INTEGER TNUM,SITC(4),REPF(4),ME,TIM1,SDAT,IERT,IERC,NUMBER


22      FORMAT(/1X,'DATABASE BUSY....WAITING 10 SECONDS')
        CALL DBERR($44,IERT,IERC,0)
        GOTO 45
44      IF (IERT.NE.7) GOTO 200
        TYPE 22
        CALL WAIT(8.0)
45      CALL DBOPEN('(TNT)STATBK')
        CALL DBUPD(-1)
        CALL DBFIND(2,1,TNUM,1,12,1,0)
        CALL DBNREC(NUMBER)
        IF (NUMBER.EQ.0) GOTO 199
        CALL DBSRCH(15,1,SITC)
        CALL DBNREC(NUMBER)
        IF (NUMBER.EQ.0) GOTO 199
        CALL DBCHNG(9,TIM1,10,SDAT,11,ME,8,REPF,12,2)
199     CALL DBCLOSE
        RETURN
200     TYPE 205,IERT,IERC
205     FORMAT(/3X,'ERROR TYPE = ',I5,4X,'ERROR CODE = ',I5,/)
300     RETURN
        END
C
C
C************************
C
C       PAP15
C
C************************
C
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C       SUBROUTINE TO CHANGE THE CONTROL GROUP
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
        SUBROUTINE CHHN1(BAS,TNUM,ME,STAT,UNAM)
C
        INTEGER HN,NHN,TNUM,NUMBER,Z,BAS(3),IERT,IERC,NETOP
        INTEGER MIDV(4),NT,BAS10(3),ME,STAT,UNAM(3),ORDER,SDAT
        INTEGER TIM1,INFO(64)
        DIMENSION NETOP(26)
        DATA (NETOP(I),I=1,27)/'NSSC','NETCN','ONTYM','CS800','BTDUB',
     1  'NTENG','BTAUS','UKMSG','BTJPN','NISOP','BTUK','BTHK','NTS  ',
     2  'EDICN','BTALS','PORTS','GCSCL','MSGCN','BTAP ','BTSNG',
     3  'ECSC ','ENMC ','LNKOP','UK800','TSIS','BTCAN','CONFR'/
C
90      Z=1
100     TYPE 105
105     FORMAT(1X,'TICKET NUMBER : ',$)
        ACCEPT 110,TNUM
110     FORMAT(I8)
        IF (TNUM.EQ.0) RETURN
114     CALL DBOPEN(BAS)
        CALL DBFIND(1,1,TNUM)
        CALL DBNREC(NUMBER)
        IF (NUMBER.EQ.0) GOTO 200
        CALL DBGREC($300,NUMBER)
        CALL DBVAL('HN',HN)
116     TYPE 115,TNUM,NETOP(HN)
115     FORMAT(/1X,'THE CURRENT CONTROL GROUP FOR TICKET NUMBER ',I8,
     1  ' IS... ',/,/5X,A5,/,/10X,'1 = NSSC',/10X,'2 = NETCON',
     2  /10X,'3 = ONTYM',/10X,'4 = CSS800',/10X,'5 = BTDUB',/10X,
     3  '6 = NTENG',/10X,'7 = BTAUS',/10X,'8 = UKMSG',/10X,'9 = ',
     4  'BTJPN',/9X,'10 = NISOP',/9X,'11 = BTUK',/9X,'12 = BTHK',
     5  /9X,'13 = NTS  ',/9X,'14 = EDICN',/9X,'15 = BTALS',/9X,
     6  '16 = DBPORTS',/9X,'17 = GCSCL   ',/9X,'18 = MSGCN',/9X,
     7  '19 = BTAP ',/9X,'20 = BTSNG',/9X,'21 = ECSC',/9X,
     A  '22 = ENMC',/9X,'23 = LINKOPS',/9X,'24 = UK800',/9X,
     B  '25 = TSIS',/9X,'26 = BTCAN','27 = CONFR',
     8  /1X,'ENTER THE NEW VALUE OR A C.R. FOR NO CHANGE : ',$)
        ACCEPT 120,NHN
        IF (NHN.GT.27) GOTO 116
120     FORMAT(I2)
        IF (NHN.EQ.0) GOTO 300
        CALL CHA1I(BAS,53,NHN,TNUM)
        CALL GETC(6,UNAM,PCE)
        IF(PCE.EQ."040) GOTO 401
        CALL GETC(11,UNAM,PCE)
        IF(PCE.EQ."040) GOTO 403
        ENCODE(90,400,INFO)UNAM,ME,NETOP(HN),NETOP(NHN)
400     FORMAT(3A5,1H(,A3,1H),' CHANGED THE CONTROL GROUP FROM ',A5,
     1  ' TO ',A5,14X,'.',5X)
        GOTO 405
401     ENCODE(90,402,INFO)UNAM(1),ME,NETOP(HN),NETOP(NHN)
402     FORMAT(A5,1H(,A3,1H),' CHANGED THE CONTROL GROUP FROM ',A5,
     1  ' TO ',A5,24X,'.',5X)
        GOTO 405
403     ENCODE(90,404,INFO)UNAM(1),UNAM(2),ME,NETOP(HN),NETOP(NHN)
404     FORMAT(A5,A5,1H(,A3,1H),' CHANGED THE CONTROL GROUP FROM ',A5,
     1  ' TO ',A5,19X,'.',5X)
405     CALL RTIM(TIM1,SDAT)
        CALL DBERR($410,IERT,IERC,0)
        GOTO 415
410     IF(IERT.NE.7) GOTO 297
        TYPE 411
411     FORMAT(/1X,'DATABASE BUSY.....WAITING...')
        CALL WAIT(6.0)
415     CALL DBOPEN('(TNT)BASE2')
        CALL DBUPD(-1)
        CALL DBFIND(1,1,TNUM)
        CALL DBNREC(NUMBER)
        ORDER=NUMBER+1
        CALL DBADD(1,TNUM,2,SDAT,3,TIM1,4,ME,5,5,6,STAT,7,INFO,8,UNAM,
     1  9,ORDER,10,0)
        CALL DBCLOSE
        ENCODE(95,416,INFO)
416     FORMAT(95(1H ))
        ENCODE(5,420,OHN)HN
420     FORMAT(2X,I1,2X)
        CALL DBERR($430,IERT,IERC,0)
        GOTO 435
430     IF(IERT.NE.7) GOTO 297
        TYPE 411
        CALL WAIT(6.0)
435     CALL DBOPEN('(TNT)BASE3')
        CALL DBUPD(-1)
        CALL DBADD(1,TNUM,2,SDAT,3,TIM1,4,ME,5,'HNCHG',6,NHN,7,OHN,
     1  8,UNAM)
        CALL DBCLOSE
        CALL DBERR($230,IERT,IERC,0)
        GOTO 231
230     IF (IERT.NE.7) GOTO 295
        TYPE 232
232     FORMAT(/1X,'DATABASE BUSY..........WAITING 10 SECONDS')
        CALL WAIT(5.0)
231     CALL DBOPEN('(TNT)STATBK')
        CALL DBFIND(2,1,TNUM)
        CALL DBNREC(NUMBER)
        IF (NUMBER.LT.1) GOTO 233
        CALL DBUPD(-1)
        CALL DBCHNG(7,NHN)
233     CALL DBCLOSE
        RETURN
200     IF (Z.EQ.2) GOTO 215
        Z=2
        ENCODE(15,205,BAS)
205     FORMAT('(TNT)BASE4',5X)
        GOTO 114
215     TYPE 220,TNUM
220     FORMAT(1X,'TICKET NUMBER ',I8,' CAN NOT BE FOUND. PLEASE TRY',
     1  ' AGAIN.')
        ENCODE(15,206,BAS)
206     FORMAT('(TNT)BASE1',5X)
        Z=1
        GOTO 90
295     TYPE 296,IERT,IERC
296     FORMAT(/3X,'ERROR TYPE = ',I5,4X,'ERROR CODE = ',I5,
     1  /,/2X,'CHANGE IS NOT COMPLETE.')
        RETURN
297     TYPE 298,IERT,IERC
298     FORMAT(/3X,'ERROR TYPE = ',I5,4X,'ERROR CODE = ',I5,
     1  /,/2X,'AUTO-STAT REGARDING CONTROL GROUP CHANGE WAS NOT ',
     2  'COMPLETED NORMALLY.')
        RETURN
300     TYPE 305
305     FORMAT(1X,'NO CHANGE WAS MADE.')
        CALL DBCLOSE
        RETURN
        END
C
C
C************************
C
C       PAP17
C
C************************
C
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C       SUBROUTINE TO CHANGE THE DUP NUMBER
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
        SUBROUTINE CHDUP1(BAS,BAS10)
C
        INTEGER DUP,DAT,TNUM,NUMBER,Z,BAS(3),IERT,IERC,DAT,ELM
        INTEGER BAS10(3)
C
90      Z=1
        ELM=0
100     TYPE 105
105     FORMAT(1X,'TICKET NUMBER : ',$)
        ACCEPT 110,TNUM
110     FORMAT(I8)
        IF (TNUM.EQ.0) RETURN
114     CALL DBOPEN(BAS)
        CALL DBFIND(1,1,TNUM)
        CALL DBNREC(NUMBER)
        IF (NUMBER.EQ.0) GOTO 200
        CALL DBGREC($300,NUMBER)
        CALL DBVAL('DUP',DUP)
        CALL DBNDAT(DUP,SM,SD,SY)
        TYPE 115,TNUM,SM,SD,SY
115     FORMAT(/1X,'THE CURRENT DATE UP FOR TICKET NUMBER ',I8,
     1  ' IS... ',/,/5X,I2,1H-,I2,1H-,I4,/,/1X,'ENTER THE NEW VALUE ',
     2  'OR A C.R. FOR NO CHANGE : ')
        CALL CGDAT(DAT)
120     FORMAT(I6)
        IF (DAT.EQ.0) GOTO 300
        CALL CHA1I(BAS,49,DAT,TNUM)
        CALL CHA1I(BAS,54,ELM,TNUM)
        RETURN
200     IF (Z.EQ.2) GOTO 215
        Z=2
        ENCODE(15,205,BAS)
205     FORMAT('(TNT)BASE4',5X)
        GOTO 114
215     TYPE 220,TNUM
220     FORMAT(1X,'TICKET NUMBER ',I8,' CAN NOT BE FOUND. PLEASE TRY',
     1  ' AGAIN.')
        ENCODE(15,206,BAS)
206     FORMAT('(TNT)BASE1',5X)
        Z=1
        GOTO 90
295     TYPE 296,IERT,IERC
296     FORMAT(/3X,'ERROR TYPE = ',I5,4X,'ERROR CODE = ',I5,
     1  /,/2X,'CHANGE IS NOT COMPLETE.')
        RETURN
300     TYPE 305
305     FORMAT(1X,'NO CHANGE WAS MADE.')
        CALL DBCLOSE
        RETURN
        END
C
C
C************************
C
C       PAP18
C
C************************
C
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C       SUBROUTINE TO GET THE TIME INPUT
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
        SUBROUTINE INPTIM(NTIM)
C
        INTEGER A1,A2,A3,A4,A5,NTIM,TUP
C
100     TYPE 105
105     FORMAT(1X'ENTER THE TIME HH:MM  ? ',$)
        ACCEPT 110,NTIM
110     FORMAT(A5)
        IF (NTIM.EQ.'     ') RETURN
        DECODE(5,115,NTIM)A1,A2,A3,A4,A5
115     FORMAT(A1,A1,A1,A1,A1)
        IF (A3.NE.':') GOTO 100
        IF ((A1.LT.'0').OR.(A1.GT.'2')) GOTO 100
        IF ((A2.LT.'0').OR.(A2.GT.'9')) GOTO 100
        IF ((A4.LT.'0').OR.(A4.GT.'5')) GOTO 100
        IF ((A5.LT.'0').OR.(A4.GT.'9')) GOTO 100
        RETURN
        END
C
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C       SUBROUTINE TO CHANGE THE TIME NUMBER
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
        SUBROUTINE CHTDWN
C
        INTEGER TIME,NTIME,TNUM,NUMBER,Z,BAS(5),IERT,IERC,DAT,ELM,NTIM
C
90      ENCODE(15,95,BAS)
95      FORMAT('(TNT)BASE1',5X)
        Z=1
100     TYPE 105
105     FORMAT(1X,'TICKET NUMBER : ',$)
        ACCEPT 110,TNUM
110     FORMAT(I8)
        IF (TNUM.EQ.0) RETURN
114     CALL DBOPEN(BAS)
        CALL DBFIND(1,1,TNUM)
        CALL DBNREC(NUMBER)
        IF (NUMBER.EQ.0) GOTO 200
        CALL DBGREC($300,NUMBER)
        CALL DBVAL('TIME',TIME)
        TYPE 115,TNUM,TIME
115     FORMAT(/1X,'THE CURRENT TIME DOWN FOR TICKET NUMBER ',I8,
     1  ' IS... ',/,/5X,A5,/,/1X,'ENTER THE NEW VALUE ',
     2  'OR A C.R. FOR NO CHANGE : ')
        CALL INPTIM(NTIM)
120     FORMAT(I6)
        IF (NTIM.EQ.0) GOTO 300
125     CALL DBERR($130,IERT,IERC,0)
        GOTO 135
130     IF (IERT.NE.7) GOTO 295
        TYPE 132
132     FORMAT(1X,'DATA BASE BUSY... WAITING 10 SECS.')
        CALL WAIT(8.0)
135     CALL DBOPEN(BAS)
        CALL DBUPD(-1)
        CALL DBFIND(1,1,TNUM)
        CALL DBCHNG('TIME',NTIM,'ELM',0)
        CALL DBCLOSE
        TYPE 140
140     FORMAT(3X'CHANGE IS COMPLETE',/)
        RETURN
200     IF (Z.EQ.2) GOTO 215
        Z=2
        ENCODE(15,205,BAS)
205     FORMAT('(TNT)BASE4',5X)
        GOTO 114
215     TYPE 220,TNUM
220     FORMAT(1X,'TICKET NUMBER ',I8,' CAN NOT BE FOUND. PLEASE TRY',
     1  ' AGAIN.')
        ENCODE(15,206,BAS)
206     FORMAT('(TNT)BASE1',5X)
        Z=1
        GOTO 90
295     TYPE 296,IERT,IERC
296     FORMAT(/3X,'ERROR TYPE = ',I5,4X,'ERROR CODE = ',I5,
     1  /,/2X,'CHANGE IS NOT COMPLETE.')
        RETURN
300     TYPE 305
305     FORMAT(1X,'NO CHANGE WAS MADE.')
        CALL DBCLOSE
        RETURN
        END
C
C
C************************
C
C       PAP19
C
C************************
C
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C       SUBROUTINE TO CHANGE THE TUP NUMBER
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
        SUBROUTINE CHTUP1
C
        INTEGER TUP,NTUP,TNUM,NUMBER,Z,BAS(5),IERT,IERC,DAT,ELM,NTIM
C
90      ENCODE(15,95,BAS)
95      FORMAT('(TNT)BASE1',5X)
        Z=1
100     TYPE 105
105     FORMAT(1X,'TICKET NUMBER : ',$)
        ACCEPT 110,TNUM
110     FORMAT(I8)
        IF (TNUM.EQ.0) RETURN
114     CALL DBOPEN(BAS)
        CALL DBFIND(1,1,TNUM)
        CALL DBNREC(NUMBER)
        IF (NUMBER.EQ.0) GOTO 200
        CALL DBGREC($300,NUMBER)
        CALL DBVAL('TUP',TUP)
        TYPE 115,TNUM,TUP
115     FORMAT(/1X,'THE CURRENT TIME UP FOR TICKET NUMBER ',I8,
     1  ' IS... ',/,/5X,A5,/,/1X,'ENTER THE NEW VALUE ',
     2  'OR A C.R. FOR NO CHANGE : ')
        CALL INPTIM(NTIM)
120     FORMAT(I6)
        IF (NTIM.EQ.0) GOTO 300
125     CALL DBERR($130,IERT,IERC,0)
        GOTO 135
130     IF (IERT.NE.7) GOTO 295
        TYPE 132
132     FORMAT(1X,'DATA BASE BUSY... WAITING 10 SECS.')
        CALL WAIT(8.0)
135     CALL DBOPEN(BAS)
        CALL DBUPD(-1)
        CALL DBFIND(1,1,TNUM)
        CALL DBCHNG('TUP',NTIM,'ELM',0)
        CALL DBCLOSE
        TYPE 140
140     FORMAT(3X'CHANGE IS COMPLETE',/)
        RETURN
200     IF (Z.EQ.2) GOTO 215
        Z=2
        ENCODE(15,205,BAS)
205     FORMAT('(TNT)BASE4',5X)
        GOTO 114
215     TYPE 220,TNUM
220     FORMAT(1X,'TICKET NUMBER ',I8,' CAN NOT BE FOUND. PLEASE TRY',
     1  ' AGAIN.')
        ENCODE(15,206,BAS)
206     FORMAT('(TNT)BASE1',5X)
        Z=1
        GOTO 90
295     TYPE 296,IERT,IERC
296     FORMAT(/3X,'ERROR TYPE = ',I5,4X,'ERROR CODE = ',I5,
     1  /,/2X,'CHANGE IS NOT COMPLETE.')
        RETURN
300     TYPE 305
305     FORMAT(1X,'NO CHANGE WAS MADE.')
        CALL DBCLOSE
        RETURN
        END
C
C
C************************
C
C       PAP21
C
C************************
C
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C       SUBROUTINE TO DROP A TICKET FROM ALL THE BASES
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
        SUBROUTINE DRP1(UNAM,INT,VERS)
C
        INTEGER HOST,NHOST,TNUM,NUMBER,Z,BAS(3),IERT,IERC
        INTEGER UNAM(3),ANS,INT,TIM1,SDAT,VERS
C
90      ENCODE(15,91,BAS)
91      FORMAT('(TNT)BASE1',5X)
        Z=1
100     TYPE 105
105     FORMAT(1X,'ENTER THE TICKET NUMBER TO BE DELETED: ',$)
        ACCEPT 110,TNUM
110     FORMAT(I6)
        IF (TNUM.EQ.0) RETURN
        CALL RTIM(TIM1,SDAT)
        CALL DBOPEN('(TNT)BASE3')
        CALL DBADD(1,TNUM,2,SDAT,3,TIM1,4,INT,5,'DELET',8,UNAM)
        CALL DBCLOSE
125     CALL DBERR($130,IERT,IERC,0)
        GOTO 135
130     IF (IERT.NE.7) GOTO 295
        TYPE 132
132     FORMAT(1X,'DATA BASE BUSY... WAITING 10 SECS.')
        CALL WAIT(8.0)
135     CALL DBOPEN(BAS)
        CALL DBUPD(-1)
        TYPE 136,TNUM,BAS(1),BAS(2),BAS(3)
136     FORMAT(1X,'CHECK FOR TICKET # ',I6,' IN FILE ',A5,A5,A5)
        CALL DBFIND(1,1,TNUM)
        CALL DBNREC(NUMBER)
        IF ((NUMBER.EQ.0).AND.(Z.EQ.1)) GOTO 400
        IF (NUMBER.EQ.0) GOTO 138
        TYPE 137,NUMBER,BAS(1),BAS(2),BAS(3)
137     FORMAT(1X,'DELETED  ',I3,' RECORD(S) FROM ',A5,A5,A5)
        CALL DBDEL
138     CALL DBCLOSE
        Z=Z+1
        IF (Z.EQ.2) ENCODE(15,205,BAS)
        IF (Z.EQ.3) ENCODE(15,206,BAS)
        IF (Z.EQ.4) ENCODE(15,207,BAS)
        IF (Z.EQ.5) RETURN
        GOTO 125
205     FORMAT('(TNT)BASE2',5X)
206     FORMAT('(TNT)BASE6',5X)
207     FORMAT('(TNT)CALBAK',4X)
295     TYPE 296,IERT,IERC
296     FORMAT(/3X,'ERROR TYPE = ',I5,4X,'ERROR CODE = ',I5,
     1  /,/2X,'CHANGE IS NOT COMPLETE.')
        RETURN
400     CALL DBCLOSE
        CALL DEOLD(TNUM)
        RETURN
        END
C
C
C************************
C
C       PAP22
C
C************************
C
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C       SUBROUTINE TO DROP A TICKET FROM ALL THE BASES
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
        SUBROUTINE DEOLD(TNUM)
C
        INTEGER HOST,NHOST,TNUM,NUMBER,Z,BAS(3),IERT,IERC
C
90      ENCODE(15,95,BAS)
95      FORMAT('(TNT)BASE4',5X)
        Z=1
125     CALL DBERR($130,IERT,IERC,0)
        GOTO 135
130     IF (IERT.NE.7) GOTO 295
        TYPE 132
132     FORMAT(1X,'DATA BASE BUSY... WAITING 10 SECS.')
        CALL WAIT(8.0)
135     CALL DBOPEN(BAS)
        CALL DBUPD(-1)
        TYPE 136,TNUM,BAS(1),BAS(2),BAS(3)
136     FORMAT(1X,'CHECK FOR TICKET # ',I8,' IN FILE ',A5,A5,A5)
        CALL DBFIND(1,1,TNUM)
        CALL DBNREC(NUMBER)
        IF (NUMBER.EQ.0) GOTO 138
        TYPE 137,NUMBER,BAS(1),BAS(2),BAS(3)
137     FORMAT(1X,'DELETED  ',I3,' RECORD(S) FROM ',A5,A5,A5)
        CALL DBDEL
138     CALL DBCLOSE
        Z=Z+1
        IF (Z.EQ.2) ENCODE(15,205,BAS)
        IF (Z.EQ.3) ENCODE(15,206,BAS)
        IF (Z.EQ.4) ENCODE(15,207,BAS)
        IF (Z.EQ.5) RETURN
        GOTO 125
205     FORMAT('(TNT)BASE5',5X)
206     FORMAT('(TNT)BASE7',5X)
207     FORMAT('OCALBK',9X)
295     TYPE 296,IERT,IERC
296     FORMAT(/3X,'ERROR TYPE = ',I5,4X,'ERROR CODE = ',I5,
     1  /,/2X,'CHANGE IS NOT COMPLETE.')
        RETURN
        END
C
C       SUBROUTINE TO FORCE INPUT TO UPPER CASE
C
        SUBROUTINE UPCASE(VALUE)
C
        INTEGER VALUE(4),PCE,I,J,K
C
100     DO 150 I=1,20
        CALL GETC(I,VALUE,PCE)
        IF ((PCE.GE."141).AND.(PCE.LE."172)) PCE=PCE-"040
        CALL PUTC(I,VALUE,PCE)
150     CONTINUE
        RETURN
        END
c
C
C       ROUTINE TO FORCE 5 CHARACTERS TO UPPER CASE
C
        SUBROUTINE HISET(IN)
C
        INTEGER IN,PCE,I,K
C
100     DO 150 I=1,5
        CALL GETC(I,IN,PCE)
        IF ((PCE.GE."141).AND.(PCE.LE."172)) PCE=PCE-"040
        CALL PUTC(I,IN,PCE)
150     CONTINUE
        RETURN
        END
        SUBROUTINE UPCAS3(VALUE)
c
        integer value(3),pce,i,j,k
c
100     do 150 i=1,15
        call getc(i,value,pce)
        if ((pce.ge."141).and.(pce.le."172)) pce=pce-"040
        call putc(i,value,pce)
150     continue
        return
        end
C
C********************************
C
C       PAP36.FTF
C
C********************************
C
C
C--------------------------------
C
C       SUBROUTINE TO CHANGE A NUMBER IN THE TROUBLE TICKET
C
C--------------------------------
C
        SUBROUTINE CHA1I(BAS,ATB,VALU,TNUM)
C
        INTEGER BAS(3),ATB,VALU,TNUM,IERT,IERC
C
        TYPE 122,BAS
122     FORMAT(1X,'OPENING ',3A5,' FOR UPDATE ',$)
125     CALL DBERR($130,IERT,IERC,0)
        GOTO 135
130     IF (IERT.NE.7) GOTO 295
        TYPE 132
132     FORMAT(1X,'DATA BASE BUSY... WAITING 10 SECS.')
        CALL WAIT(8.0)
135     CALL DBOPEN(BAS)
        CALL DBUPD(-1)
        CALL DBFIND(1,1,TNUM)
        CALL DBCHNG(ATB,VALU)
        CALL DBCLOSE
        TYPE 140
140     FORMAT('+','...CHANGE IS COMPLETE')
        RETURN
295     TYPE 296,IERT,IERC
296     FORMAT(/3X,'ERROR TYPE = ',I5,4X,'ERROR CODE = ',I5,
     1  /,/2X,'CHANGE IS NOT COMPLETE.')
        RETURN
        END
C********************************
C
C       PAP40.FTF
C
C********************************
C
C
C--------------------------------
C
C       SUBROUTINE TO CHANGE THE 2A5 FIELD
C
C--------------------------------
C
        SUBROUTINE CHA2A(BAS,ATB,VALU,TNUM)
C
        INTEGER BAS(3),ATB,VALU(2),TNUM,IERT,IERC
C
        TYPE 122,BAS
122     FORMAT(1X,'OPENING ',3A5,' FOR UPDATE ',$)
125     CALL DBERR($130,IERT,IERC,0)
        GOTO 135
130     IF (IERT.NE.7) GOTO 295
        TYPE 132
132     FORMAT(1X,'DATA BASE BUSY... WAITING 10 SECS.')
        CALL WAIT(8.0)
135     CALL DBOPEN(BAS)
        CALL DBUPD(-1)
        CALL DBFIND(1,1,TNUM)
        CALL DBCHNG(ATB,VALU)
        CALL DBCLOSE
        TYPE 140
140     FORMAT('+','...CHANGE IS COMPLETE')
        RETURN
295     TYPE 296,IERT,IERC
296     FORMAT(/3X,'ERROR TYPE = ',I5,4X,'ERROR CODE = ',I5,
     1  /,/2X,'CHANGE IS NOT COMPLETE.')
        RETURN
        END
C
C***********************
C
C       PAP60.FTF
C
C***********************
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C       SUBROUTINE TO CHANGE AN ATTRIBUTE OF A 4A5 SIZE
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
        SUBROUTINE CHA4A5(BAS,BAS10,ATB1,ATB2,OUT)
C
        INTEGER CKT(4),NCKT(4),TNUM,NUMBER,Z,BAS(3),IERT,IERC
        INTEGER MIDV(4),NT,BAS10(3),ATB1,ATB2,OUT(2),NET(2)
        DIMENSION FLD(3)
        DATA (FLD(P),P=1,3)/'N','H','C'/
        DIMENSION FL1(3)
        DATA (FL1(P),P=1,3)/4,6,7/
C
90      Z=1
100     TYPE 105
105     FORMAT(1X,'TICKET NUMBER : ',$)
        ACCEPT 113,TNUM
113     FORMAT(I8)
        IF (TNUM.EQ.0) RETURN
114     CALL DBOPEN(BAS)
        CALL DBFIND(1,1,TNUM)
        CALL DBNREC(NUMBER)
        IF (NUMBER.EQ.0) GOTO 200
        CALL DBGREC($300,NUMBER)
        CALL DBVAL(ATB1,CKT,48,NT,9,NET)
        IF (NT.EQ.1) CALL DBVAL(40,MIDV(1))
        IF (NT.EQ.2) CALL DBVAL(42,MIDV(1))
        IF (NT.EQ.3) CALL DBVAL(43,MIDV)
        TYPE 112,TNUM,OUT,CKT
112     FORMAT(/1X,'TICKET NUMBER : ',I8,3X,2A5,' EQUALS : ',4A5,
     1  /,/1X,'ENTER THE NEW VALUE OR A C.R. FOR NO CHANGE : ',$)
        ACCEPT 120,NCKT
120     FORMAT(4A5)
           CALL UPCASE(NCKT)
        IF (NCKT(1).EQ.'     ') GOTO 300
C
        TYPE 122,BAS
122     FORMAT(1X,'OPENING ',3A5,' FOR UPDATE ',$)
125     CALL DBERR($130,IERT,IERC,0)
        GOTO 135
130     IF (IERT.NE.7) GOTO 295
        TYPE 132
132     FORMAT(1X,'DATA BASE BUSY... WAITING 10 SECS.')
        CALL WAIT(8.0)
135     CALL DBOPEN(BAS)
        CALL DBUPD(-1)
        CALL DBFIND(1,1,TNUM)
        CALL DBCHNG(ATB1,NCKT)
        CALL DBCLOSE
        TYPE 140
140     FORMAT('+','...CHANGE IS COMPLETE')
        IF (ATB2.EQ.0) RETURN
        CALL DBERR($110,IERT,IERC,0)
        GOTO 115
110     IF (IERT.NE.7) GOTO 295
        TYPE 118
118     FORMAT(1X,'DATA BASE BUSY... WAITING 8 SECOUNDS')
        CALL WAIT(8.0)
115     TYPE 117,BAS10
117     FORMAT(1X,'OPENING ',3A5,' FOR UPDATE',$)
        CALL DBOPEN(BAS10)
        CALL DBUPD(-1)
        IF (NT.EQ.3) CALL DBFIND(17,1,FLD(NT),1,FL1(NT),1,MIDV,
     1  1,3,1,NET)
        IF((NT.EQ.1).OR.(NT.EQ.2))CALL DBFIND(17,1,FLD(NT),1,
     1  FL1(NT),1,MIDV(1),1,3,1,NET)
        CALL DBNREC(NUMBER)
        IF (NUMBER.EQ.0) GOTO 280
        CALL DBCHNG(ATB2,NCKT)
        CALL DBCLOSE
        TYPE 121
121     FORMAT('+','... CHANGE IS COMPLETE')
        RETURN
280     TYPE 285
285     FORMAT(3X,'NO RELATION RECORD EXISTS...',/)
        RETURN
200     IF (Z.EQ.2) GOTO 215
        Z=2
        ENCODE(15,205,BAS)
205     FORMAT('(TNT)BASE4',5X)
        GOTO 114
215     TYPE 220,TNUM
220     FORMAT(1X,'TICKET NUMBER ',I8,' CAN NOT BE FOUND. TRY AGAIN',
     1  ' PLEASE.')
        ENCODE(15,206,BAS)
206     FORMAT('(TNT)BASE1',5X)
        Z=1
        GOTO 90
295     TYPE 296,IERT,IERC
296     FORMAT(/3X,'ERROR TYPE = ',I5,4X,'ERROR CODE = ',I5,
     1  /,/2X,'CHANGE IS NOT COMPLETE.')
        RETURN
300     TYPE 305
305     FORMAT(1X,'NO CHANGE WAS MADE.')
        CALL DBCLOSE
        RETURN
        END
C
C
C***********************
C
C       PAP61.FTF
C
C***********************
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C       SUBROUTINE TO CHANGE AN ATTRIBUTE OF A NUMBER FIELD
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
        SUBROUTINE CH1I(BAS,BAS10,ATB1,ATB2,OUT)
C
        INTEGER CKT,NCKT,TNUM,NUMBER,Z,BAS(3),IERT,IERC
        INTEGER MIDV(4),NT,BAS10(3),ATB1,ATB2,OUT(2),NET(2)
        REAL ELM
        DIMENSION FLD(3)
        DATA (FLD(P),P=1,3)/'N','H','C'/
        DIMENSION FL1(3)
        DATA (FL1(P),P=1,3)/4,6,7/
C
90      Z=1
100     TYPE 105
105     FORMAT(1X,'TICKET NUMBER : ',$)
        ACCEPT 113,TNUM
113     FORMAT(I8)
        IF (TNUM.EQ.0) RETURN
114     CALL DBOPEN(BAS)
        CALL DBFIND(1,1,TNUM)
        CALL DBNREC(NUMBER)
        IF (NUMBER.EQ.0) GOTO 200
        CALL DBGREC($300,NUMBER)
        IF(ATB1.NE.54) CALL DBVAL(ATB1,CKT,48,NT,9,NET)
        IF(ATB1.EQ.54) CALL DBVAL(ATB1,ELM,48,NT,9,NET)
        IF (NT.EQ.1) CALL DBVAL(40,MIDV(1))
        IF (NT.EQ.2) CALL DBVAL(42,MIDV(1))
        IF (NT.EQ.3) CALL DBVAL(43,MIDV)
        IF(ATB1.EQ.54) GOTO 119
        TYPE 112,TNUM,OUT,CKT
112     FORMAT(/1X,'TICKET NUMBER : ',I8,3X,2A5,' EQUALS : ',I8,
     1  /,/1X,'ENTER THE NEW VALUE OR A C.R. FOR NO CHANGE : ',$)
        GOTO 9115
119     TYPE 9115,TNUM,OUT,ELM
9115     FORMAT(/1X,'TICKET NUMBER : ',I8,3X,2A5,' EQUALS : ',F8.1,
     1 /,/1X,'ENTER THE NEW VALUE OR A C.R. FOR NO CHANGE : ',$)
        ACCEPT 120,NCKT
120     FORMAT(I8)
        IF (NCKT.EQ.0) GOTO 300
        IF(ATB1.EQ.54) ELM=NCKT
        TYPE 122,BAS
122     FORMAT(1X,'OPENING ',3A5,' FOR UPDATE ',$)
125     CALL DBERR($130,IERT,IERC,0)
        GOTO 135
130     IF (IERT.NE.7) GOTO 295
        TYPE 132
132     FORMAT(1X,'DATA BASE BUSY... WAITING 10 SECS.')
        CALL WAIT(8.0)
135     CALL DBOPEN(BAS)
        CALL DBUPD(-1)
        CALL DBFIND(1,1,TNUM)
        IF(ATB1.NE.54) CALL DBCHNG(ATB1,NCKT)
        IF(ATB1.EQ.54) CALL DBCHNG(ATB1,ELM)
        CALL DBCLOSE
        TYPE 140
140     FORMAT('+','...CHANGE IS COMPLETE')
        IF (ATB2.EQ.0) RETURN
        CALL DBERR($110,IERT,IERC,0)
        GOTO 115
110     IF (IERT.NE.7) GOTO 295
        TYPE 118
118     FORMAT(1X,'DATA BASE BUSY... WAITING 8 SECOUNDS')
        CALL WAIT(8.0)
115     TYPE 117,BAS10
117     FORMAT(1X,'OPENING ',3A5,' FOR UPDATE',$)
        CALL DBOPEN(BAS10)
        CALL DBUPD(-1)
        IF (NT.EQ.3) CALL DBFIND(17,1,FLD(NT),1,FL1(NT),1,MIDV,1,3,
     1  1,NET)
        IF((NT.EQ.1).OR.(NT.EQ.2))CALL DBFIND(17,1,FLD(NT),1,
     1  FL1(NT),1,MIDV(1),1,3,1,NET)
        CALL DBNREC(NUMBER)
        IF (NUMBER.EQ.0) GOTO 280
        CALL DBCHNG(ATB2,NCKT)
        CALL DBCLOSE
        TYPE 121
121     FORMAT('+','... CHANGE IS COMPLETE')
        RETURN
280     TYPE 285
285     FORMAT(3X,'NO RELATION RECORD EXISTS...',/)
        RETURN
200     IF (Z.EQ.2) GOTO 215
        Z=2
        ENCODE(15,205,BAS)
205     FORMAT('(TNT)BASE4',5X)
        GOTO 114
215     TYPE 220,TNUM
220     FORMAT(1X,'TICKET NUMBER ',I8,' CAN NOT BE FOUND. TRY AGAIN',
     1  ' PLEASE.')
        ENCODE(15,206,BAS)
206     FORMAT('(TNT)BASE1',5X)
        Z=1
        GOTO 90
295     TYPE 296,IERT,IERC
296     FORMAT(/3X,'ERROR TYPE = ',I5,4X,'ERROR CODE = ',I5,
     1  /,/2X,'CHANGE IS NOT COMPLETE.')
        RETURN
300     TYPE 305
305     FORMAT(1X,'NO CHANGE WAS MADE.')
        CALL DBCLOSE
        RETURN
        END
C
C
C************************
C
C       PAP53.FTF
C
C************************
C
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C       SUBROUTINE TO CHANGE THE START HOUR
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
        SUBROUTINE CHASTH(BAS,BAS10)
C
        INTEGER SLOT,NSLOT,TNUM,NUMBER,Z,BAS(3),IERT,IERC,NET(2)
        INTEGER MIDV(4),NT,BAS10(3)
C
90      Z=1
100     TYPE 105
105     FORMAT(1X,'TICKET NUMBER : ',$)
        ACCEPT 110,TNUM
110     FORMAT(I8)
        IF (TNUM.EQ.0) RETURN
114     CALL DBOPEN(BAS)
        CALL DBFIND(1,1,TNUM)
        CALL DBNREC(NUMBER)
        IF (NUMBER.EQ.0) GOTO 200
        CALL DBGREC($300,NUMBER)
        CALL DBVAL('STH',SLOT,48,NT,9,NET)
        IF (NT.EQ.1) CALL DBVAL(40,MIDV(1))
        IF (NT.EQ.2) CALL DBVAL(42,MIDV(1))
        IF (NT.EQ.3) CALL DBVAL(43,MIDV)
        TYPE 115,TNUM,SLOT
115     FORMAT(/1X,'THE CURRENT START HOUR(GMT) FOR TICKET NUMBER ',I8,
     1  ' IS... ',/,/5X,A5,/,/1X,'ENTER THE NEW VALUE OR A C.R. FOR ',
     2  'NO CHANGE.')
        CALL INPTIM(NSLOT)
120     FORMAT(A5)
        IF (NSLOT.EQ.0) GOTO 300
        CALL CHA1A(BAS,28,NSLOT,TNUM)
        CALL CHRE1A(BAS10,NT,MIDV,14,NSLOT,NET)
        RETURN
200     IF (Z.EQ.2) GOTO 215
        Z=2
        ENCODE(15,205,BAS)
205     FORMAT('(TNT)BASE4',5X)
        GOTO 114
215     TYPE 220,TNUM
220     FORMAT(1X,'TICKET NUMBER ',I8,' CAN NOT BE FOUND. PLEASE TRY',
     1  ' AGAIN.')
        ENCODE(15,206,BAS)
206     FORMAT('(TNT)BASE1',5X)
        Z=1
        GOTO 90
295     TYPE 296,IERT,IERC
296     FORMAT(/3X,'ERROR TYPE = ',I5,4X,'ERROR CODE = ',I5,
     1  /,/2X,'CHANGE IS NOT COMPLETE.')
        RETURN
300     TYPE 305
305     FORMAT(1X,'NO CHANGE WAS MADE.')
        CALL DBCLOSE
        RETURN
        END
C
C
C************************
C
C       PAP54.FTF
C
C************************
C
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C       SUBROUTINE TO CHANGE THE END HOUR
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
        SUBROUTINE CHAEHR(BAS,BAS10)
C
        INTEGER SLOT,NSLOT,TNUM,NUMBER,Z,BAS(3),IERT,IERC,NET(2)
        INTEGER MIDV(4),NT,BAS10(3)
C
90      Z=1
100     TYPE 105
105     FORMAT(1X,'TICKET NUMBER : ',$)
        ACCEPT 110,TNUM
110     FORMAT(I8)
        IF (TNUM.EQ.0) RETURN
114     CALL DBOPEN(BAS)
        CALL DBFIND(1,1,TNUM)
        CALL DBNREC(NUMBER)
        IF (NUMBER.EQ.0) GOTO 200
        CALL DBGREC($300,NUMBER)
        CALL DBVAL('EHR',SLOT,48,NT,9,NET)
        IF (NT.EQ.1) CALL DBVAL(40,MIDV(1))
        IF (NT.EQ.2) CALL DBVAL(42,MIDV(1))
        IF (NT.EQ.3) CALL DBVAL(43,MIDV)
        TYPE 115,TNUM,SLOT
115     FORMAT(/1X,'THE CURRENT END HOUR(GMT) FOR TICKET NUMBER ',I8,
     1  ' IS... ',/,/5X,A5,/,/1X,'ENTER THE NEW VALUE OR A C.R. FOR ',
     2  'NO CHANGE.')
        CALL INPTIM(NSLOT)
120     FORMAT(A5)
        IF (NSLOT.EQ.0) GOTO 300
        CALL CHA1A(BAS,29,NSLOT,TNUM)
        CALL CHRE1A(BAS10,NT,MIDV,15,NSLOT,NET)
        RETURN
200     IF (Z.EQ.2) GOTO 215
        Z=2
        ENCODE(15,205,BAS)
205     FORMAT('(TNT)BASE4',5X)
        GOTO 114
215     TYPE 220,TNUM
220     FORMAT(1X,'TICKET NUMBER ',I8,' CAN NOT BE FOUND. PLEASE TRY',
     1  ' AGAIN.')
        ENCODE(15,206,BAS)
206     FORMAT('(TNT)BASE1',5X)
        Z=1
        GOTO 90
295     TYPE 296,IERT,IERC
296     FORMAT(/3X,'ERROR TYPE = ',I5,4X,'ERROR CODE = ',I5,
     1  /,/2X,'CHANGE IS NOT COMPLETE.')
        RETURN
300     TYPE 305
305     FORMAT(1X,'NO CHANGE WAS MADE.')
        CALL DBCLOSE
        RETURN
        END
C
C********************************
C
C       PAP41.FTF
C
C********************************
C
C
C--------------------------------
C
C       SUBROUTINE TO CHANGE THE 1A5 FIELD
C
C--------------------------------
C
        SUBROUTINE CHA1A(BAS,ATB,VALU,TNUM)
C
        INTEGER BAS(3),ATB,VALU,TNUM,IERT,IERC
C
        TYPE 122,BAS
122     FORMAT(1X,'OPENING ',3A5,' FOR UPDATE ',$)
125     CALL DBERR($130,IERT,IERC,0)
        GOTO 135
130     IF (IERT.NE.7) GOTO 295
        TYPE 132
132     FORMAT(1X,'DATA BASE BUSY... WAITING 10 SECS.')
        CALL WAIT(8.0)
135     CALL DBOPEN(BAS)
        CALL DBUPD(-1)
        CALL DBFIND(1,1,TNUM)
        CALL DBCHNG(ATB,VALU)
        CALL DBCLOSE
        TYPE 140
140     FORMAT('+','...CHANGE IS COMPLETE')
        RETURN
295     TYPE 296,IERT,IERC
296     FORMAT(/3X,'ERROR TYPE = ',I5,4X,'ERROR CODE = ',I5,
     1  /,/2X,'CHANGE IS NOT COMPLETE.')
        RETURN
        END
C*******************************************
C
C       PAP57.FTF
C
C*******************************************
C
C-------------------------------------------
C
C       SUBROUTINE TO CHANGE THE RELATIONAL DATA
C       BASE
C
C-------------------------------------------
C
        SUBROUTINE CHRE1A(BAS10,NT,CKT,ATB,VALU,NET)
C
        INTEGER BAS10(3),NT,CKT(4),ATB,VALU,NUMBER,NET(2)
        DIMENSION FLD(3)
        DATA (FLD(P),P=1,3)/'N','H','C'/
        DIMENSION FL1(3)
        DATA (FL1(P),P=1,3)/4,6,7/
C
100     CALL DBERR($110,IERT,IERC,0)
        GOTO 115
110     IF (IERT.NE.7) GOTO 295
        TYPE 118
118     FORMAT(1X,'DATA BASE BUSY... WAITING 8 SECOUNDS')
        CALL WAIT(8.0)
115     TYPE 117,BAS10
117     FORMAT(1X,'OPENING ',3A5,' FOR UPDATE',$)
        CALL DBOPEN(BAS10)
        CALL DBUPD(-1)
        IF (NT.EQ.3) CALL DBFIND(17,1,FLD(NT),1,FL1(NT),1,CKT,
     1  1,3,1,NET)
        IF((NT.EQ.1).OR.(NT.EQ.2))CALL DBFIND(17,1,FLD(NT),1,
     1  FL1,1,CKT(1),1,3,1,NET)
        CALL DBNREC(NUMBER)
        IF (NUMBER.EQ.0) GOTO 280
        CALL DBCHNG(ATB,VALU)
        CALL DBCLOSE
        TYPE 120
120     FORMAT('+','... CHANGE IS COMPLETE')
        RETURN
280     TYPE 285
285     FORMAT(3X,'NO RELATION RECORD EXISTS...',/)
        RETURN
295     TYPE 297,IERT,IERC
297     FORMAT(1X,'ERROR EQUALS...  IERT = ',I3,4X,'IERC = 'I3)
        RETURN
        END
C
C
C
C       SUBROUTINE TO ADD, DELETE, AND DISPLAY AN ACCESS MESSAGE
C       FOR A SPECIFIC USERNAME.
C
        SUBROUTINE ACCESS(MESS)
C
        INTEGER MESS(64),ILIN,N,J,USRNAM(3),NUMBER,IREC,CHOICE,NMBR
C
5       FORMAT(A5)
6       FORMAT(3A5)
        CALL DBOPEN('(NSSC)ACCMSG','(NSSC)NPAP')
9       CALL DBSET(1)
        TYPE 10
10      FORMAT(/1X,'DO YOU WANT TO ADD(A), DELETE(D), OR SEE(S) ',
     1  'AN ACCESS MESSAGE? ',$)
        ACCEPT 5,CHOICE
        CALL HISET(CHOICE)
        IF ((CHOICE.NE.'A').AND.(CHOICE.NE.'D').AND.(CHOICE.NE.'S'))
     1  GOTO 999
        TYPE 20
20      FORMAT(/1X,'ENTER THE LOGIN USERNAME: ',$)
        ACCEPT 6,USRNAM
        CALL HISET(USRNAM)
        IF(USRNAM(1).EQ.'ALL  ') CALL DBFIND('ALL')
        IF(USRNAM(1).EQ.'ALL  ') GOTO 400
        TYPE 7,USRNAM
7       FORMAT(/1X,3A5,':',/)
        CALL DBFIND(1,1,USRNAM)
        CALL DBNREC(NUMBER)
        IF((NUMBER.EQ.0).AND.(CHOICE.NE.'A')) GOTO 100
        IF((NUMBER.EQ.1).AND.(CHOICE.EQ.'D')) GOTO 125
        IF((NUMBER.EQ.1).AND.(CHOICE.EQ.'S')) GOTO 150
        IF (NUMBER.GT.1) GOTO 175
        IF(((NUMBER.EQ.1).OR.(NUMBER.EQ.0)).AND.(CHOICE.EQ.'A')) GOTO
     1  300
100     TYPE 101,USRNAM
101     FORMAT(/1X,'NO RECORD FOUND FOR USERNAME ',3A5)
        GOTO 9
125     CALL DBCHNG(2,' ')
        GOTO 9
150     CALL DBGREC($9,NUMBER)
        CALL DBVAL(2,MESS)
        DO 160 ILIN=1,4
        N=(ILIN*16)-15
        IF (MESS(N).EQ.'.    ') GOTO 159
        TYPE 155,(MESS(J),J=N,N+15)
155     FORMAT(1X,15A5,A4)
        GOTO 160
159     ILIN=4
160     CONTINUE
        GOTO 9
175     TYPE 176
176     FORMAT(/1X,'OOPS!!!...WE FOUND MULTIPLE RECORDS',/,
     1  /1X,'PLEASE REPORT THIS TO NSSC IMMEDIATELY!')
        GOTO 999
300     TYPE 301
301     FORMAT(1H+,'ENTER YOUR MESSAGE: ',/,$)
        DO 330 ILIN=1,4
        N=(ILIN*16)-15
        ACCEPT 325,(MESS(J),J=N,N+15)
325     FORMAT(16A5)
        NLINE=ILIN
        IF (MESS(N).NE.'.    ') GOTO 330
        ILIN=4
330     CONTINUE
        IF (NUMBER.EQ.0) CALL DBADD(1,USRNAM,2,MESS)
        IF (NUMBER.EQ.0) GOTO 340
        CALL DBCHNG(2,MESS)
340     CALL DBSET(2)
        CALL DBFIND(1,1,USRNAM)
        IF (USRNAM(1).EQ.'ALL') CALL DBFIND('ALL')
        CALL DBNREC(NMBR)
        IF (NMBR.GT.0) CALL DBCHNG(13,0)
        GOTO 9
400     CALL DBNREC(NUMBER)
        IF(CHOICE.EQ.'D') GOTO 125
        IF(CHOICE.EQ.'A') GOTO 300
        TYPE 425
425     FORMAT(/1X,'MESSAGES ARE CURRENTLY IN THE DATABASE FOR THE',
     1  ' FOLLOWING USERS: ',/)
        CALL WAIT(2.0)
        DO 450 IREC=1,NUMBER
        CALL DBGREC($9,IREC)
        CALL DBVAL(1,USRNAM,2,MESS)
        IF ((MESS(1).EQ.'     ').OR.(MESS(1).EQ.'.    ')) GOTO 440
        TYPE 7,USRNAM
        DO 440 ILIN=1,4
        N=(ILIN*16)-15
        IF (MESS(N).EQ.'.    ') GOTO 439
        TYPE 155,(MESS(J),J=N,N+15)
        GOTO 440
439     ILIN=4
440     CONTINUE
450     CONTINUE
        GOTO 9
999     CALL DBCLOS
        RETURN
        END

C
C
C
C       SUBROUTINE TO DISPLAY A CUSTOM ACCESS MESSAGE 
C       FOR A SPECIFIC USERNAME.
C
        SUBROUTINE FYIMSG(MESS,UNAM,ALREADY)
C
        INTEGER MESS(64),ILIN,N,J,UNAM(3),NUMBER,ALREADY
C
5       FORMAT(A5)
6       FORMAT(/1X,3A5,/)
        TYPE 6,UNAM
        CALL DBOPEN('(NSSC)ACCMSG')
        CALL DBFIND(1,1,UNAM)
        CALL DBNREC(NUMBER)
        IF(NUMBER.EQ.0) GOTO 999
        CALL DBGREC($999,NUMBER)
        CALL DBVAL(2,MESS)
        DO 160 ILIN=1,4
        N=(ILIN*16)-15
        IF (MESS(N).EQ.'.    ') GOTO 159
        TYPE 155,(MESS(J),J=N,N+15)
155     FORMAT(1X,15A5,A4)
        GOTO 160
159     ILIN=4
160     CONTINUE
999     CALL DBCLOS
        ALREADY=1
        RETURN
        END

 I&