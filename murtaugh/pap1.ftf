C
C***************************
C
C       PAP1.FTF
C
C***************************
C
C
C       SUBROUTINE FOR THE PURPOSE OF WRITING THE PROBLEM
C       DISCRIPTION WITHOUT THE PERIOD OR FOLLOWING LINES
C
        SUBROUTINE WDISC(DISC)
C
        INTEGER DISC(169),ILIN,N,J
C
        WRITE(8,50)
50      FORMAT(' PROBLEM DESCRIPTION : ')
        DO 100 ILIN=1,10
        N=(ILIN*16)-15
        IF (DISC(N).EQ.'.    ') GOTO 90
        WRITE(8,60)(DISC(J),J=N,N+15)
60      FORMAT(16A5)
        GOTO 100
90      ILIN=12
100     CONTINUE
        RETURN
        END
C
C
C               SUBROUTINE FOR WRITING THE INFO TO DISK
C
        SUBROUTINE WINFO(INFO)
C
        INTEGER INFO(64),ILIN,N,J
C
        DO 50 ILIN=1,4
        N=(ILIN*16)-15
        IF (INFO(N).EQ.'.    ') GOTO 40
        WRITE(8,30)(INFO(J),J=N,N+15)
30      FORMAT(16A5)
        GOTO 50
40      ILIN=4
50      CONTINUE
        RETURN
        END
C
C
C
C       SUBROUTINE TO CALCULATE ELAPSED TIME OF A TICKET
C
        SUBROUTINE MTTR(SDAT,DUP,TIM1,TUP,ELM,HOUR)
C
        INTEGER SDAT,TIM1,TUP,DUP,EH,EM,SH,SM
        INTEGER NDUP,NTUP
        REAL HOUR,ELM
C
        IF (ELM.GT.0) GOTO 105
        IF (DUP.GT.0) GOTO 50
        CALL RTIM(NTUP,NDUP)
        DECODE(5,100,NTUP)EH,EM
        GOTO 75
50      NDUP=DUP
        DECODE(5,100,TUP)EH,EM
100     FORMAT(I2,1X,I2)
75      DECODE(5,100,TIM1)SH,SM
        IF (NDUP.GT.SDAT) GOTO 120
        IF (EH.GT.SH) ELM=(60-SM)+EM+((EH-SH)*60)-60
        IF (EH.EQ.SH) ELM=EM-SM
        IF ((EH.EQ.SH).AND.(EM.EQ.SM)) ELM=1
        IF (ELM.LT.6) ELM=6
105     HOUR=ELM/60
        RETURN
120     ELM=(((NDUP-SDAT)-1)*1440)+(EH*60)+EM+((23-SH)*60)+(60-SM)
        IF (ELM.LT.0) ELM=0
125     HOUR=ELM/60
        RETURN
        END
C
C
C       SUBROUTINE TO MOVE BASE6 TO BASE7
C
        SUBROUTINE MOTRAC(TOT1)
C
        INTEGER TOT1,ANS,I,TNUM,SDAT,TIM1,NDAT,NTIM,RS,STAT
        INTEGER MAINT,NET(2),SVER,PRO,COC,ZONE,IERT,IERC,TOT2
        REAL ELM,AELM
C
50      TYPE 55
55      FORMAT(/1X,'MOVING BASE6 TO BASE7... STANDBY',/)
        TOT2=TOT1
        CALL DBERR($190,IERT,IERC,0)
100     DO 200 I=1,TOT1
        TYPE 105,I
105     FORMAT('+',1X,I4,$)
        CALL DBGREC($200,I)
        CALL DBVAL(1,TNUM,2,SDAT,3,TIM1,4,NDAT,5,NTIM,6,RS,
     1  7,STAT,8,MAINT,9,ELM,10,NET,11,SVER,12,PROB,13,COC,14,WHO,15,
     2  LO,16,HO,17,ZONE,18,AELM)
        CALL DBSET(2)
        CALL DBADD(1,TNUM,2,SDAT,3,TIM1,4,NDAT,5,NTIM,6,RS,
     1  7,STAT,8,MAINT,9,ELM,10,NET,11,SVER,12,PROB,13,COC,14,WHO,15,
     2  LO,16,HO,17,ZONE,18,AELM)
        CALL DBSET(1)
        CALL DBFIND('RS','GE',8)
        GOTO 200
190     IF (IERT.EQ.7) GOTO 197
        TYPE 192,I,NUMBER,TNUM
192     FORMAT(3X,'ERROR OCCURRED WHILE TRANSFERING TICKET ',I8,/1X,
     1  'THIS WAR RECORD NUM= ',I4,' OF ',I4,' PLEASE REPORT THIS !',/)
        RETURN
197     TYPE 198
198     FORMAT(1X,'STANDBY FOR BUSY...')
        CALL WAIT(8.0)
        GOTO 100
200     CONTINUE
        CALL DBSET(1)
        CALL DBUPD(-1)
        CALL DBFIND('RS','GE',8)
        DO 220 I=1,TOT2
        CALL DBGREC($220,I)
        CALL DBDEL
220     CONTINUE
        RETURN
        END
C
C
C{
C       SUBROUTINE TO FIND THE CLOSE OUT CODE
C
        SUBROUTINE CLOUT(CCC,CCOD)
C
        INTEGER CCC,I,J,K,L,M,N,CCOD
C
100     TYPE 105
105     FORMAT(' ENTER THE CLOSE OUT CODE...',/5X,'1 = NTF/D&R',
     1  /5X,'2 = HARDWARE',/5X,'3 = SOFTWARE',
     2  /5X,'4 = UNKNOWN',/5X,'5 = CUSTOMER INDUCED',/5X,
     3  '6 = TELCO INDUCED',/5X,'7 = O.E.M. (MODEMS, ETC.)',
     4  /5X,'8 = POWER OUTAGE AT THE SITE',/5X,'9 = PERIFERALS',
     5  /4X,'10 = DEAD ENDED NODE',/4X,'11 = PROJECT',
     6  /4X,'12 = ASYNC PROJECT',/2X'ENTER CHOICE... ? :',$)
        ACCEPT 110,CCC
110     FORMAT(I2)
        IF ((CCC.LT.1).OR.(CCC.GT.11)) GOTO 100
        CCOD=CCC*10
        RETURN
        END
C
C
C       ROUTINE TO INPUT THE TIME IN XX:YY FORMAT AND THEN SEE
C       IF THE INPUT IS EMPTY. IF IT IS EMPTY THEN CALL THE TIME
C       FROM 1022 AND USE THAT AS THE OFFICAL TIME. THE TIME WILL
C       BE CALLED FROM 1022 ANYWAY TO CHECK IF THE TIME YOU ENTER
C       IS AHEAD OF THE CURRENT TIME. IF IT IS THEN YOU WILL HAVE 
C       THE CHANCE TO RECORRECT OR HAVE THE PROGRAM ASSUME THAT
C       YOU HAVE CHANGED DAYS (PASSED THE 24:00 MARK).
C
        SUBROUTINE GTIM(TIM1,SDAT,LIC)
C
        INTEGER TIM1,TTIM,XX,YY,X1,Y1,H1,H2,M1,M2,BTIM,SDAT
        INTEGER C1,C2,C3,C4,C5,LIC,IA1,IA2,IA3,IA4,IA5,IA6
        INTEGER NDAT
C
10      CALL RTIM(TIM1,SDAT)
        IF (LIC.EQ.0) GOTO 30
12      TYPE 15,TIM1
15      FORMAT(1X,'ENTER TIME OR C.R. FOR ',A5,' GMT : ',$)
        ACCEPT 20,TTIM
20      FORMAT(A5)
        IF (TTIM.NE.'     ') GOTO 50
25      FORMAT(A1,A1,A1,A1,A1)
30      CONTINUE
        RETURN
50      DECODE(5,25,TTIM)C1,C2,C3,C4,C5
        IF (C3.NE.':') GOTO 12
        IF ((C1.LT.'0').OR.(C1.GT.'2')) GOTO 12
        IF ((C2.LT.'0').OR.(C2.GT.'9')) GOTO 12
        IF ((C4.LT.'0').OR.(C4.GT.'5')) GOTO 12
        IF ((C5.LT.'0').OR.(C5.GT.'9')) GOTO 12
        DECODE(5,55,TIM1)H1,M1
55      FORMAT(I2,1X,I2)
        DECODE(5,55,TTIM)H2,M2
        IF (H2.GT.H1) SDAT=SDAT-1
        TIM1=TTIM
        RETURN
        END
C
C
C       ROUTINE TO PULL UP THE DATE REGARDLESS OF TIME ZONE
C
        SUBROUTINE RTIM(TIM1,SDAT)
C
        INTEGER IA1,IA2,IA3,IA4,IA5,IA6,TIM1,SDAT,NDAT
C
        CALL FGMT(IA1,IA2,IA3,IA4,IA5,IA6)
        IF (IA5.GT.9) ENCODE(5,50,TIM1)IA4,IA5
        IF (IA5.LT.10)ENCODE(5,52,TIM1)IA4,IA5
52      FORMAT(I2,2H:0,I1)
50      FORMAT(I2,1H:,I2)
        IA3=IA3+1900
        CALL DBDATN(SDAT,IA1,IA2,IA3)
        RETURN
        END
C
C
C       ROUTINE TO CHECK ELM MINUS V6 ... UNLESS V6*60 IS MORE THAN
C       ELM. WE ALSO CLEAR OUT V4 WILL WE ARE AT IT.
C
        SUBROUTINE VDIS(V4,V6,ELM)
C
        INTEGER V1,V2,V3,V4,V5,V6
        REAL ELM
C
100     IF (ELM.GT.V6*60) GOTO 938
        IF (V6*60-ELM.LT.60) V6=V6-1
        IF (V6*60-ELM.GE.60) V6=V6-(((V6*60-ELM)/60)+1)
938     V4=0
        ELM=ELM-V6*60
        RETURN
        END
C
C
C***********************
C
C       ROUTINE TO GET INFO FOR PROFILE
C
C***********************
        SUBROUTINE GTHRE(OUT,IN,Z)
C
        INTEGER OUT(3),IN(4),Z
C
100     TYPE 105,OUT
105     FORMAT(1H+,3A5,2H :,T20,$)
        ACCEPT 110,IN
110     FORMAT(4A5)
        IF (IN(1).NE.'     ') Z=2
        RETURN
        END
C************************
C
C       GET INPUT FROM 2A5 OUTPUT
C
C************************
C
        SUBROUTINE GTWO(OUT,IN,Z,I)
C
        INTEGER OUT(2),IN(4),Z,I
C
100     TYPE 105,OUT
105     FORMAT(1H+,2A5,2H :,T20,$)
        ACCEPT 110,IN
110     FORMAT(4A5)
        IF (IN(1).NE.'     ') Z=2
        IF ((IN(1).NE.'     ').AND.(I.EQ.2))CALL UPCASE(IN)
        RETURN
        END
C
C****************
C
C       ROUTINE TO GET ON ITEM
C
C****************
        SUBROUTINE GONE(OUT,IN,Z)
C
        INTEGER OUT,IN,Z
C 
100     TYPE 105,OUT
105     FORMAT(1H+,A5,2H :,T20,$)
        ACCEPT 110,IN
110     FORMAT(I8)
        IF (IN.GT.0) Z=2
        RETURN
        END
C
C**************************
C
C       GET PRODUCT NUMBER
C
C**************************
C
        SUBROUTINE GPROD(NUMTYPE,P,Z)
C
        INTEGER NUMTYPE,P,Z,I
C
100     I=1
105     TYPE 2533
2533    FORMAT(1H+,'ENTER THE PRODUCT CODE  OR A C.R. FOR ',
     1  'HELP : ',$)
        ACCEPT 120,P
120     FORMAT(I2)
        IF ((P.GE.1).AND.(P.LE.NUMTYPE)) GOTO 125
        IF ((P.EQ.0).OR.(I.EQ.3)) CALL HPROD
        IF (I.EQ.4) TYPE 115
115     FORMAT(' YOU MUST ENTER A NUMBER GREATER THAN ZERO ')
        I=I+1
        GOTO 105
125     Z=2
        RETURN
C
        END
C
C
C*******************************
C
C       ROUTINE TO GET REGIONS FOR RELATIONAL DATA BASE
C
C*******************************
C
        SUBROUTINE GRGN(I,P,Z,NUMATTN)
C
        INTEGER P,I,MAINT,Z,NUMATTN
C
100     IF (I.EQ.1)TYPE 105
        IF (I.EQ.2)TYPE 110
        ACCEPT 115,P
105     FORMAT(1X,'ENTER THE SOFTWARE DISTRICT NUMBER OR C.R. FOR ',
     1  'HELP : ',$)
110     FORMAT(1X,'ENTER THE HARDWARE DISTRICT SERVING THIS INTERFACE ',
     1  'OR A C.R. FOR HELP : ',$)
115     FORMAT(I8)
        IF ((P.GE.1).AND.(P.LE.NUMATTN)) GOTO 150
        IF (P.EQ.0) CALL HREFR
        GOTO 100
150     Z=2
        RETURN
        END
        SUBROUTINE GTHR3(OUT,IN,Z,I)
C
        INTEGER OUT(3),IN(3),Z,I
C
100     TYPE 105,OUT
105     FORMAT(1H+,3A5,2H :,T20,$)
        ACCEPT 110,IN
110     FORMAT(3A5)
        IF (IN(1).NE.'     ') Z=2
        IF((IN(1).NE.'     ').AND.(I.EQ.2))CALL UPCAS3(IN)
        RETURN
        END
C
C
        SUBROUTINE GTW1(OUT,IN,Z)
C
        INTEGER OUT(2),IN,Z
C
100     TYPE 105,OUT
105     FORMAT(1H+,2A5,2H :,T20,$)
        ACCEPT 110,IN
110     FORMAT(A5)
        IF (IN.NE.'     ') Z=2
        RETURN
        END
C
        SUBROUTINE G1NE(OUT,IN,Z)
C
        INTEGER OUT,IN,Z
C 
100     TYPE 105,OUT
105     FORMAT(1H+,A5,2H :,T20,$)
        ACCEPT 115,IN
115     FORMAT(A5)
        IF (IN.NE.'  ') Z=2
        RETURN
        END
        SUBROUTINE GTW2(OUT,IN,Z)
C
        INTEGER OUT(2),IN,Z
C
100     TYPE 105
105     FORMAT('+PRIMARY ...1=NO, 2=YES : ',$)
        ACCEPT 110,IN
110     FORMAT(I8)
        IF (IN.GT.0) Z=2
        RETURN
        END
        SUBROUTINE GTW3(OUT,IN,Z)
C
        INTEGER OUT(2),IN,Z
C
100     TYPE 105,OUT
105     FORMAT(1H+,2A5,2H :,T20,$)
        ACCEPT 110,IN
110     FORMAT(I8)
        IF (IN.GT.0) Z=2
        RETURN
        END
C
C
C
C       ROUTINE TO GET NUMBER
C
        SUBROUTINE GPNUM(IN,OUT)
C
        INTEGER IN,OUT
100     TYPE 105,IN
105     FORMAT(1H+,A5,T20,2H: ,$)
        ACCEPT 110,OUT
110     FORMAT(I6)
        RETURN
        END
C
C
C
C       SUBROUTINE TO GET ZONE FOR HARDWARE
C
        SUBROUTINE GZONE(IN,Z)
C
        INTEGER Z,IN
C
90      TYPE 100
100     FORMAT(1X,'ENTER HARDWARE ZONE (DISTANCE TO THE NEAREST F.E.',
     1  /1X,'OFFICE',/2X,'ZONE 1  = ONSITE',/7X,'2  = 0 - 50 MILES',/7X,
     2  '3  = 51 - 150 MILES',/7X,'4  = GREATER THAN 150 MILES',/2X,
     3  'ENTER NUMBER : ',$)
        ACCEPT 105,IN
105     FORMAT(I1)
        IF ((IN.LT.0).OR.(IN.GT.4)) GOTO 90
        IF (IN.GT.0) Z=2
        RETURN
        END
  