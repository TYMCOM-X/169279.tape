
!R NAD
1.5
;X   ND4630.CMD

;; ISIS Version 11.01 Sample Command File
;@   (BETATEST)I2IS11.I01

End of assembly
;@   nd4630.tym

End of assembly
;A   (NTS)GOODGY.nts

End of assembly
;@   (BETATEST)I2IS11.R01

DISPAT 0 0
CLOCKS 1B7E 1CBE
MBOARD 1CBE 1FC6
FLASH 1FC6 2CEE
KCAREA 2CEE 2EE0
TTY 2EE0 3200
KERNEL 3200 8354
DDT 8354 0BF00
   1685d (16d-byte) bufferlets allocated to dispatcher
DISPAT 0BF00 1B800
.............................................



    ***  ISIS-II  ***
      Version 11.01d


System Performance Analysis Monitor (SPAM) Enabled
TYMNET-II Node 4630, Kernel Host 4299
Maximum slot number is 2

       >>> HARDWARE CONFIGURATION <<<

Expects NANO hardware

       >>> SLOT CONFIGURATIONS <<<

SLOT 0, NODE CODE, has 270 K-bytes of core, from 1B800 to 5EFFF
   6 logical unit(s)
   L.U. 0 is M.Board channel 0
   L.U. 1 is M.Board channel 1
   L.U. 2 is M.Board channel 2
   L.U. 3 is M.Board channel 3
   L.U. 4 is M.Board channel 4
   L.U. 5 is M.Board channel 5

SLOT 1 has 400 K-bytes of core, from 5F000 to 0C2FFF
   no logical units

SLOT 2 has 80 K-bytes of core, from 0C3000 to 0D6FFF
   no logical units

***Highest location used in this configuration is 0D7000

Requires 924d k-bytes of core


.............................................


Code Generated:  04/04/89  14:38:15 GMT

.............................................

End of assembly
;X   (BETATEST)I2IS11.P01

;; ISIS-II Version 11.01 Patch File

;@   (BETATEST)I2IS11.Q01

ISIS 11.01 PATCH 1
This fixes a boundary value problem for a DDT
write command, when a memory out of bounds condition
fails for just falling on a 64K boundary.

End of assembly


1;F   ND4630.NIB

70;T
0,SUMTBL;P
INTLEN,IEND-INTLEN;P
%P
SEGF,SFSIZE;P
%Q
EXIT

!R NAD
1.5
;X   ND4630.C00

;; SAMPLE COMMAND FILE - T-II NODE CODE - VERSION 05.22
;; >>ISIS NODE - SLOT 0<<
;;
;A   (SOURCE)TII05.I22

End of assembly
;A   nd4630.tym

End of assembly
;A   (nts)goodgy.nts

End of assembly
;A   (SOURCE)TII05.R22

End of assembly
;A   (SOURCE)TII05.F22

Crash codes defined in this version:

Crash code 263
EXCRH EXEC tried to dispatch to nonexistent process
(PROCID*2 in R2)

Crash code 242
BIDCR BIDDY found nothing to do.
  (R1 = dispatch array - should be non-zero)

Crash code 262
YKMCR YAKMAC tried to recover from MAC error, failed.  
KD contains difference between expected and actual KD's.

Crash code 442
BIDHC JFFOH failure.

Crash code 642
BIDC0 JFFO error.

Crash code 7267
SV39C ISIS connect SIO line SVC error.

Crash code 7667
SV3BC ISIS start SIO output SVC error.

Crash code 7467
SV3AC ISIS start SIO input SVC error.

Crash code 1867
SV0CC SOLO connect SIO line SVC error.

Crash code 1C67
SV0EC SOLO start SIO output SVC error.

Crash code 1A67
SV0DC SOLO start SIO input SVC error.

Crash code 7067
SV38C ISIS get SIO status SVC error.

Crash code 1E67
SV0FC SOLO get SIO status SVC error.

Crash code 6467
SV32C ISIS force SYNC output SVC error.

Crash code 6067
SV30C ISIS connect SYNC SVC error.

Crash code 463
LKER0 LINKER found more than 0 lines on inactive link.

Crash code 663
O1263 LINKER found active link with 0 lines.

Crash code 863
O1463 LINKER found KDKN/KDSVLN inconsistency.

Crash code 0A63
O1663 LINKER found active line marked inactive.

Crash code 0C63
O1863 LINKER found NLAT .NE. sum of lines fields.

Crash code 0E63
SIER0 SOLO SIO CCW chaining failure.

Crash code 1063
RTZC0 RTD detected zapper for circuit with null P/T entry.

Crash code 1263
RMEB0 RMAKE found buffer empty.

Crash code 1463
RMZLR RMAKE couldn't find 2nd character of 00/01 pair.

Crash code 1663
RMZL3 RMAKE couldn't find 2nd character of 03 pair.

Crash code 1863
RMNER NEDOUT <= 0 in RMAKE.

Crash code 1A63
RMKNE RMAKE NEEDLE ERROR

Crash code 1C63
RMKHS RMAKE NEGATIVE LOGICAL RECORD COUNT

Crash code 1E63
RMHS3 RMAKE NEGATIVE LOGICAL RECORD COUNT

Crash code 2063
RMZL0 RMAKE ZERO LENGTH RECORD

Crash code 2263
RMNE0 RMAKE NEEDLE OUTSTANDING

Crash code 2463
RMPER RMAKE BAD PERF MON CHAR

Crash code 2663
RMZL1 RMAKE ZERO LENGTH RECORD

Crash code 2863
RMBE0 RMAKE BUFFER EMPTY

Crash code 2A63
RMTIE RMAKE BAD 03-PAIR TO T-I NEIGHBOR

Crash code 2C63
RMTNS RMAKE

Crash code 2E63
RMHS2 RMAKE ILLEGAL 02 FOR HISTORY

Crash code 842
KERIC JFFO failure.

Crash code 3063
KERI0 KERIN found 0 P/T entry.

Crash code 3263
KICTC XHOSTS found invalid 03 pair from kernel.

Crash code 3463
KRCXC XHOSTS detected invalid control record from kernel.

Crash code 3663
KRXCA XHOSTS detected invalid ack from kernel.

Crash code 3863
SUPIC XHOSTS supe interface - no circuit.

Crash code 3A63
SUPI0 XHOSTS supe interface 0 length record.

Crash code 3C63
SUPI1 XHOSTS supe interface empty buffer.

Crash code 3E63
DISI0 DISPI found no dispatcher circuit.

Crash code 4063
DISO0 DISPI got RPORT out of range from dispatcher.

Crash code 4263
DSOC0 DISPI dispatcher output msg type invalid.

Crash code 4463
DSZE0 DISPI got junk from dispatcher on channel 0.

Crash code 4663
DSIO0 DISPI invalid message from dispatcher

Crash code 4863
DSKP0 DISPI DSK type too large.

Crash code 4A63
WCIC0 SWITCH illegal WCI to buffer 1 or 0.

Crash code 4C63
WCIC1 SWITCH invalid WCI buffer index.

Crash code 4E63
WRECR SWITCH reserve tank empty.

Crash code 5063
GCICR SWITCH GCI buffer 0.

Crash code 264
GCIC0 SWITCH GCI for empty buffer or bad buffer index.

Crash code 5263
CBCLC SWITCH CBCLR bad buffer index.

Crash code 5463
CBCL0 SWITCH CBCLR invalid channel number.

Crash code 5663
RTBLC SWITCH RETBLT BCT went < 0

Crash code 5863
CRQCR SWITCH CRQ bad buffer index.

Crash code 5A63
CRQC0 SWITCH CRQ needle garbage.

Crash code 5C63
LEPCR SWITCH LEP invalid rebild reject.

Crash code 5E63
INTCR SWITCH INHST found no work to do.

Crash code 6063
SUPCR SWITCH invalid accounting data type from supe.

Crash code 6263
CRQC2 SWITCH CRQ buffer out of range.

Crash code 6463
ZAPCR SWITCH ZAPX bad IOTAB entry.

Crash code 6663
ZAPC0 SWITCH ZAPV bad IOTAB entry.

Crash code 6863
ZAPC1 SWITCH ZAPV bad compementary BF.

Crash code 6A63
GFCR0 SWITCH GFCBUF no more buffers.

Crash code 266
GFCR1 SWITCH GFCBUF invalid free list pointer.

Crash code 6C63
GFCR2 SWITCH GFCBUF invalid link buffer pointer.

Crash code 6E63
GFCR3 SWITCH GFCBUF bad buffer index.

Crash code 7063
RFCR0 SWITCH RFCBUF invalid buffer index.

Crash code 7263
FNCHC SWITCH FNDCHN ACP consistency error.

Crash code 7463
FNCH0 SWITCH FNDCHN ACP/IOTAB consistency error.

Crash code 7663
BUBCR SWITCH BUBBLE BF/NIOTAB consistency error.

Crash code 7863
BUBC0 SWITCH BUBBLE LKAPND consistency error.

Crash code 7A63
BUBC1 SWITCH BUBBLE IOTAB consistency error.

Crash code 7C63
CBCT0 SWITCH CBCCT-BCT consistency error.

Crash code 7E63
ASLO0 ASYNC ASYLOU no ANITAB entry for port.

Crash code 8063
ASLO1 ASYNC ASYLOU ANITAB entry not complement of .LGBUF.

Crash code 8263
ASC20 ASYNC 02 character pair toward port.

Crash code 8463
ASC30 ASYNC invalid 03 character pair toward port.

Crash code 8663
ASY30 ASYNC illegal ALIERR code.

Crash code 8863
GCHCR ASYNC invalid prefix code.

Crash code 8A63
PTSGC ASYNC invalid signal from CONSAT.

Crash code 8C63
ASLO2 ASYNC

Crash code 8E63
CPKCR ASYNC

Crash code 9063
RMHS4 YAKYAK RMAKE LRC<0 after fat gob shrink.

Crash code 9263
NEGBF YAKYAK BFLTSV<0 AFTER BUFFERLET ACQ OR REL

Crash code 9463
NEGHB YAKYAK HBFTSV<0 AFTER HIST BUF ACQ OR REL

Crash code 9663
WRE SWITCH ILLEGAL CALL TO WRE - POSSIBLE MACERROR

Crash code 9863
CONSAT CRASH - R10 = CALLER

Crash code 9A63
XRAY set-by-user crash: SC command

Crash code 9C63
DISPI bad SNI recv'd from sup

Crash code 9E63
stack storage overflow

Crash code 0A063
stack storage underflow

Crash code 0A263
GETCHR negative buffer number

Crash code 0A463
GETCHR invalid buffer 0

Crash code 0A663
GETCHR BF of buffer is dead

Crash code 0A863
GETCHR negative value in PFXSIG table

Crash code 0AA63
GETCHR illegal 02 pair

Crash code 0AC63
GETCHR invalid 03 pair

Crash code 0AE63
PUTCHR invalid buffer 0

Crash code 0B063
PUTCHR BF of buffer is dead

Crash code 0B263
PUTSIG invalid buffer 0

Crash code 0B463
PUTSIG BF of buffer is dead

Crash code 0B663
PUTSIG signal number too large

Crash code 0B863
PUTSIG invalid signal

Crash code 0BA63
SNDLOG get a signal from .LGBUF

Crash code 0BC63
EMPTY BF of buffer is dead

Crash code 0BE63
ASYNC RING WRAP


TYMNET-II Node Code, Version 5.22, ISIS Node

Node: 4630  Kernel Host: 4299

Ports:          Lines:          Links:
   128d Pthru        0d Sync         6d TIILNK
     3d Xray         6d SIO          0d XLNK
                     6d Total        6d Total
   256d Disp
     3d Krnl

Maximum number of circuits =  439d 


Bufferlet storage space:

 14BBCx bytes ( 83d KB) for  439d total circuits  (193d bytes per circuit)


Memory used by this configuration = 43800x, 270d KB.

Optimal amount of memory for this configuration =   203d  KB.

End of assembly
;; ASSEMBLE PATCHES IF ANY
;A   (SOURCE)TII05.P22


       NETID is 1d.  This is a TYMNET network node.




PATCH added on 870811 at 0900 by JLADEN.
     Starts at ATTLI0+20 and is 10x bytes long
<<< FIX RESET VERSION COMPATIBILTY PROBLEM >>>

PATCH added on 870211 at 1800 by SDW.
     Starts at HSTDI4+0C and is 4x bytes long
<<< Patch to have XRAY HS U command display up hosts that have no ports >>>

PATCH added on 880121 at 1301 by sdw.RESET1.
     Starts at ATTL05-8 and is 6x bytes long
        Continues at PATCH1+0 and is 5Cx bytes long
<<< Make old style reset packet always have old style reset data >>>

PATCH added on 880829 at 1400 by sdw.RESET2.
     Starts at ATTLIN+8 and is 6x bytes long
        Continues at PATCH1+5C and is 54x bytes long
<<< Handle neighbor switching between old and expanded resets >>>

PATCH added on 880126 at 1756 by sdw.RES4M1.
     Starts at G04MIN and is 6x bytes long
        Continues at PATCH0+0 and is 0Ex bytes long
        Continues at PATCH1+96 and is 0D8x bytes long
<<< Send a old style reset every four minutes to help lines to come up >>>

PATCH added on 880126 at 1845 by sdw.RES4M2.
     Starts at G01SE3 and is 6x bytes long
        Continues at PATCH1+16E and is 8Ax bytes long
<<< Part 2 of patch to occasionally send old style resets. >>>

PATCH added on 880218 at 1600 by sdw.SIOCHN.
     Starts at siopt4+8 and is 2x bytes long
<<< Allow SIO to send more than 40 packets per second >>>

PATCH added on 880218 at 2330 by sdw.SIORSPC.
     Starts at SIORS and is 10x bytes long
        Continues at SIORR and is 6x bytes long
        Continues at PATCH0+12 and is 4x bytes long
        Continues at PATCH1+1F8 and is 28x bytes long
<<< Part 1 of patch to send only 1 SIO reset per second >>>

PATCH added on 880218 at 2356 by sdw.SIORSP2.
     Starts at G01PER and is 6x bytes long
        Continues at PATCH1+21E and is 1Ex bytes long
<<< Part 2 of patch to send only 1 SIO reset per second >>>

PATCH added on 880306 at 109 by sdw.FIX DB.
     Starts at DBEGIN and is 6x bytes long
        Continues at PATCH1+23C and is 1Cx bytes long
<<< Disable DB command from local Xray to prevent crash or corrupted data >>>

PATCH added on 880305 at 123 by sdw.FIX WB.
     Starts at XWRBUF and is 6x bytes long
        Continues at PATCH1+258 and is 30x bytes long
        Continues at xwrbuf+6 and is 12x bytes long
<<< Disable WB command from local Xray to prevent crash or corrupted data >>>

PATCH added on 880305 at 134 by sdw.REMZAP.
     Starts at REMZA6+2 and is 6x bytes long
        Continues at PATCH1+27A and is 10x bytes long
<<< Fix potential crash when Xray user zaps before clearing delay circuits >>>

PATCH added on 880307 at 0934 by sdw.NETIDBG.
     Starts at ATTNID and is 12x bytes long
        Continues at PATCH0+16 and is 8x bytes long
<<< Do not put neighbor with bad NETID on node's bad guy list >>>

PATCH added on 880317 at 1523 by sdw.XRAYIN.
     Starts at XRYIN7 and is 4x bytes long
<<< Fix local XRAY to have a dismiss when waiting for character >>>

PATCH added on 880408 at 1500 by SLN.FNDLNK.
     Starts at CRQZOG+6 and is 0Ex bytes long
        Continues at LEP9V2-20 and is 0Ex bytes long
        Continues at PATCH1+28A and is 4Cx bytes long
<<< Fix crash 0007 from Qexec corruption >>>

PATCH added on 880410 at 1525 by sdw.ATT.R2.
     Starts at ATTLDW and is 6x bytes long
        Continues at PATCH1+2D6 and is 14x bytes long
<<< Fix crash in line attach logic due to corrupted register >>>

PATCH added on 880405 at 2334 by sdw.WSZDWN.
     Starts at MCHD04+4 and is 6x bytes long
        Continues at TRLINZ and is 6x bytes long
        Continues at PATCH1+2EA and is 66x bytes long
        Continues at PATCH0+1E and is 30x bytes long
<<< Fix windowsize matchdown to restore to original when link goes down >>>

PATCH added on 880425 at 1713 by sdw.HSecNS.
     Starts at XSTMS0 and is 4Cx bytes long
<<< Fix NS to show proper time spent in H-SEC process >>>

PATCH added on 880426 at 2214 by sdw.KDCMTS.
     Starts at XNEI7B and is 6x bytes long
        Continues at PATCH1+350 and is 1Ax bytes long
<<< Fix Xray KD command to correctly count number of command circuits >>>

PATCH added on 880408 at 1000 by pk.siocopy.
     Starts at sioi5+8 and is 36x bytes long
<<< Remove SIO input problems with foreground/background collisions >>>

PATCH added on 880628 at 1500 by sdw.SIOCH2.
     Starts at siosnd-4 and is 4x bytes long
        Continues at sion4-6 and is 6x bytes long
        Continues at PATCH1+36A and is 12x bytes long
<<< Correct logic which flagged an unloaded line as saturated >>>

PATCH added on 880623 at 1330 by sdw.OOPS.
     Starts at SFAIL-0a and is 6x bytes long
        Continues at PATCH1+37C and is 10x bytes long
<<< Save R0 and R1 when doing software crashes >>>

PATCH added on 880706 at 1301 by CMR.XRDBRM.
     Starts at DBEGI8 and is 6x bytes long
        Continues at PATCH1+38C and is 20x bytes long
<<< Reset INTXRF flag when entering 'DB' command >>>

PATCH added on 880725 at 1500 by sdw.DBFILL.
     Starts at DBEGI5 and is 6x bytes long
        Continues at PATCH1+39C and is 1Ex bytes long
<<< Prevent crash caused by delay circuits using all bufferlets >>>

PATCH added on 880729 at 1600 by SDW.ZR7263.
     Starts at dsozw7 and is 6x bytes long
        Continues at PATCH1+3BA and is 1Cx bytes long
<<< Fix problem with Zap With Reason which leads to a 7263 crash >>>

PATCH added on 880930 at 115 by sdw.NI cmd.
     Starts at XNID+10 and is 6x bytes long
        Continues at qrychn-6 and is 6x bytes long
        Continues at PATCH1+3D6 and is 100x bytes long
<<< Change Xray NI command to also display the NETIDs for each line >>>

PATCH added on 881128 at 0113 by sdw.GETPWR.
     Starts at getpwr+18 and is 0Ex bytes long
<<< Fix Xray GP to work for all Node and Host numbers >>>

PATCH added on 881201 at 2255 by sdw.ExpOld.
     Starts at atl061+4 and is 6x bytes long
        Continues at PATCH1+4D0 and is 40x bytes long
<<< Don't let links between v5.20+ neighbors come up on old style resets >>>

PATCH added on 881202 at 2313 by sdw.?slot.
     Starts at 0e00a4 and is 6x bytes long
<<< Set up Segment E so that DDT ?SLOT command works properly >>>

PATCH added on 881202 at 2255 by sdw.W.SegE.
     Starts at write4+0a and is 6x bytes long
        Continues at writf4+0a and is 6x bytes long
        Continues at chkdat+0f*4 and is 4x bytes long
        Continues at PATCH1+504 and is 40x bytes long
<<< Prevent Xray W or WS command from writing to Seg E or Seg F >>>

PATCH added on 881213 at 1655 by sdw.FIX RB.
     Starts at xrdbu3+4 and is 6x bytes long
        Continues at PATCH1+534 and is 40x bytes long
<<< Put a range check on Xray RB command >>>

PATCH added on 881213 at 1655 by sdw.FIX SM.
     Starts at setme0+6 and is 6x bytes long
        Continues at PATCH1+554 and is 40x bytes long
<<< Put a range check on Xray SM command >>>

PATCH added on 881213 at 1655 by sdw.FIX AP.
     Starts at setpr0+6 and is 6x bytes long
        Continues at PATCH1+566 and is 40x bytes long
<<< Put a range check on Xray AP command >>>
End of assembly
1;F   nd4630.n00

SEG0,RSEG0;P
SEG1,S1SIZE;P
SEGD,SDSIZE;P
SEGF,SFSIZE;P
CTA,CTASIZ;P
%P
%Q
EXIT

!R(NTS)MERLIN
MERGE AND LINK ISIS SLOTS OR SPLIT KERNEL
VERSION  4.00
* @ND4630.MER




         SLOT MAP

SLOT BEGINS ENDS
 0   1B800  5EFFF
 1   5F000  C2FFF
 2   C3000  D6FFF




    MAP OF SLOT  0

SEG  BEGINS ENDS
 0   1C800  25BFF
 1   25C00  31BFF
 2   31C00  41BFF
 3   41C00  51BFF
 4   51C00  573FF
13   57400  5EFFF
14   1B800  1C7FF




    MAP OF SLOT  1

SEG  BEGINS ENDS
 0   5F400  60FAB
 1   61000  69FB7
 2   6A000  6F55B
 3   6F800  7F7FF
 4   7F800  8F3AB
 7   8F400  9F3FF
 8   9F400  AF3FF
 9   AF400  B42A3
13   B4400  B49A0
14   5F000  5F1CF




    MAP OF SLOT  2

SEG  BEGINS ENDS
 0   C3400  C85CD
 1   C8800  CD157
 2   CD400  CF47F
14   C3000  C31FB

EXIT

!R MER   (NTS)MERLIN
MERGE AND LINK ISIS SLOTS OR SPLIT KERNEL
VERSION  4.00
* @ND4630.N01   MER




         SLOT MAP

SLOT BEGINS ENDS
 0   1B800  5EFFF
 1   5F000  C2FFF
 2   C3000  D6FFF




    MAP OF SLOT  0

SEG  BEGINS ENDS
 0   1C800  25BFF
 1   25C00  31BFF
 2   31C00  41BFF
 3   41C00  51BFF
 4   51C00  573FF
13   57400  5EFFF
14   1B800  1C7FF




    MAP OF SLOT  1

SEG  BEGINS ENDS
 0   5F400  60FAB
 1   61000  69FB7
 2   6A000  6F55B
 3   6F800  7F7FF
 4   7F800  8F3AB
 7   8F400  9F3FF
 8   9F400  AF3FF
 9   AF400  B42A3
13   B4400  B49A0
14   5F000  5F1CF




    MAP OF SLOT  2

SEG  BEGINS ENDS
 0   C3400  C85CD
 1   C8800  CD157
 2   CD400  CF47F
14   C3000  C31FB

EXIT

!    