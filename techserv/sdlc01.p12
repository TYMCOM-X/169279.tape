
::      Last updated by J/MCKIERNAN - Jan. 27, 1988

:: PATCH FILE FOR SDLC INTERFACE VERSION 1 REVISION 12

:1) (ESC. 38982) PATCH TO AVOID ILLEGAL MEMORY REFERENCE

        LO      TABINI
        PATCH(860327,1100,ACH,INITB1+12,,02)
        JEFS    .+08
        ENDPATCH(PATCH TO ELIMINATE ILLEGAL MEMORY REFERENCE)
        FO      TABINI



:2) (ESC. 34639,34668) PATCH TO ELIMINATE ASSEMBLY ERROR WHEN OLD MICROCODE

        LO      SIODEF
        LO      SFGXMT
        LO      SDLCDF

        IF      SIOEVR
        ELSE
        PATCH(860327,1500,ACH,XSET60+12,,6)
        J       PA1PTR,,        
        CONPATCH(PA1PTR,,12)
        JE      XSET75,,
        LB      R3,CROTOR,RL,           :GET NEXT CCW
        J       XSET60+1A,,
        ENDPATCH(PATCH FOR OLD MICROCODE)
        EI
        FO      SIODEF
        FO      SFGXMT
        FO      SDLCDF



:3) (MDHIS esc #42121)  AVOID TRANSMIT THE SAME I-FRAME
        LO      SIODEF
        LO      SFGXMT
        LO      SDLCDF

        PATCH(860331,9000,ACH,XSETB0,,6)
        J       PA1PTR,,
        CONPATCH(PA1PTR,,20)
        LB      R4,CROTOR,RL,   :GET CURRENT ROTOR LIST
        NHI     R4,ROTMSK       :WRAP AROUND IF NECESSARY
        SLHLS   R4,4            :GET QUAD WORD BOUNDARY
:       LIS     R0,0            :SAVE 0 INTO R0
:       STH     R0,TCCWL+4,R4,RSIO :ZERO THE COMMAND FIELD OF 2ND CCW
        LB      R4,CROTOR,RL,   :GET CURRENT ROTOR LIST AGAIN
        J       XSETB0+6,,
        ENDPATCH(PATCH TO ZERO THE CCW COMMAND)
        PATCH(860401,1200,ACH,XSETH1,,6)
        J       PA1PTR,,
        CONPATCH(PA1PTR,,0E)
        ST      R0,XTIME,RL2,RL2
        AR      R2,RSIO
        J       XSET43,,
        ENDPATCH(PATCH TO ZERO THE CCW COMMAND)
        FO      SIODEF
        FO      SFGXMT
        FO      SDLCDF

:4)  Patch at  MLOGUP routine to change offset reflected by RX3 instructions.
:*   Problem - In using  D LOGON command in the Op Monitor, slot crashed.
:*   Escaltion  43954,  CAS MayneNet

        LO      MONITR
        PATCH(860404,1500,PING/CHU,MLOGUQ+70,,4)
        JGE     .+$A22
        CONPATCH(MLOGU9,,6)
        J       PA1PTR,,
        CONPATCH(PA1PTR,,10)
        LIS     R4,M4PSLN
        SIS     R4,R8
        JE      MLOGUA,,
        J       MLOGU9+6,,
        ENDPATCH(Correct offset for RX3 instruction to use D LOGON cmd in Op Monitor)
        FO      MONITR




:5)  DATE>   APRIL 10, 1986
:ESCALATION> #46888
:VERSION>  1.12
:
:THIS PATCH IS WRITTEN TO CORRECT THE HOST STATUS ANSWERED TO DOWN MESSAGE
:IF THE V24 CARD IS MISSING OR NOT CONNECTED PROPERLY.
:THE SDLC SLOT WILL RECEIVE AN SIO STATAUS FROM THE MOTHER BOARD FO FFFF
:WHEN THE V24 CARD IS MISSING OR NOT CONNECTED PROPERLY. IN ADDITION TO CHECK
:THE DSR SIGNAL IN THE HALF SECOND LOGIC, THE PATCH WILL ALSO CHECK FOR A
:STATUS OF FFFF IN THE READ REGISTERS 0 AND 1.
:HOWEVER, THE STATUS OF FFFF WILL ONLY APPEAR FOR MISSING V24 CARD IF THE
:MOTHER BOARD HAS AN E.C. FCO84-187 (ENGINEERING CHANGE). THIS PATCH CAN ONLY
:BE TESTED WITH THE PROPER E.C. ADDED TO THE MOTHER BOARD.
        LO      STCTLM
        LO      CTLDEF
        LO      SIODEF
        LO      GBLDEF
        PATCH(860410,1500,A/LEE,CKDSR,,6)
        J       PA1PTR,,
        CONPATCH(PA1PTR,,30)
        LO      SIODEF
        L       R2,SIOTBL,RL2,RL2       :OLD CODE
        LHL     R4,0,R2                 :GET READ REG 0 AND 1
        CI      R4,0FFFF                :SIO CARD DISCONNECTED?
        JN      CKDS00,,                        :
        LIS     R0,ADSRBT               :YES,RESET DSR STATUS
        RBT     R0,LSTATUS,RL2,RL2      
        J       CKDSR2,,                :RESET OTHER DSR STATUS BITS
CKDS00  LB      R4,0,R2                 :OLD CODE
        J       CKDSR+0A,,
        CONPATCH(CKDSR1+10,,2)
CKDSR2  LIS     R0,DSRBIT
        ENDPATCH(PATCH TO IF SIO CARD DISCONNECTED OR NOT)
        FO      SIODEF
        FO      CTLDEF
        FO      STCTLM
        FO      GBLDEF

:6)  Patch to correct the crash in escalation #55572 for HSBCNET and ESC51484.
::   The crash was casused by an incorrect instruction.
::
::  
        LO MONITR

        PATCH(850424,1400,A/LEE,P2DST1+1A,,2)
        JLFS    P2DST2
        ENDPATCH(CORRECT D STAT COMMAND IN MONITOR)
::
        PATCH(850424,1400,A/LEE,P2DLG1+1A,,2)
        JLFS    P2DLG2
        ENDPATCH(CORRECT D LOGON COMMAND IN MONITOR)
::
        FO MONITR




:7) TO AVOID CRASSH CODE OF 2A
        LO      SFGPTP 
        LO      CMDLST
        LO      SFGRCV
        LO      GBLDEF
        LO      CTLDEF
        LO      SIODEF
        LO      SFGXMT
        LO      SDLCFX
        LO      SDLCDF
        PATCH(860408,1200,E/MICHON,RELBB-0A,,6)
        J       PA1PTR,,
        CONPATCH(PA0PTR,,4)
FLIC    WC      0
        CONPATCH(PA1PTR,,40)
        LR      R2,R2                             :DATA MESSAGE OR NOT
        JLE     CMDNT0,,                          :JUMP IF NOT       
        LB      R0,SCBLKS+SCBPST,RSCB,            :TAKE STATUS
        NHI     R0,WPOMSK                         :SEE IF WPOMSK SET 
        JE      RELBB-4,,                             :WPOMSK NOT SET--->
        LHL     R0,SCBLKS+SCBIC,RSCB,             :TAKE THE IC COUNTER 
        JN      RELBB-4,,                             :#0 GOTO DECIC
        LHL     R0,FLIC,,             
        AHI     R0,1                               :SIMPLE COUNTER
        STH     R0,FLIC,,                            :+1 IN COUNTER 
        J       RELBB,,
        ENDPATCH(TO AVOID CRASH 2A)
        FO      SFGPTP 
        FO      CMDLST
        FO      SDLCDF
        FO      SFGRCV
        FO      SIODEF
        FO      SFGXMT
        FO      SDLCFX
        FO      CTLDEF
        FO      GBLDEF

:8) (ESC. 32110) TO AVOID PROBLEM WITH SHUT COMMAND
        IF      (\(PHDPTS))!(\(PHDMPS))
        LO      SFGPTP
        PATCH(860304,1200,e/michon,hpterm+22,,4)
        J       hpter0+0c
        ENDPATCH(TO AVOID PROBLEM DURING SHUT COMMAND)
        FO      SFGPTP
        EI




:9) This patch is to correct an error in managing the MONTAB.
::  The problem was reported in Escalation 65723 SAAB.
::  The error causes the entries in the MONTAB not to be cleaned
::  up properly under certain circumstances.  Because of this 
::  problem, the MONTAB is eventually filled up and results in
::  slot crash of 23.
::
::                                            DAVID PAU 5/23/86  
        LO      MONITR
        LO      MISC
        LO      CTLDEF
        LO      GBLDEF
        LO      FRNTND
PATCH(860523,1645,D/PAU,STUPM3+0E,,6)
        J       PA1PTR,,
CONPATCH(PA1PTR,,1C)
        LB      R5,DCBLKS+DCBCFG,RDCB,
        LIS     R8,0
        STH     R8,MONTAB,R5,R5
        LCS     R8,1
        STB     R8,DCBLKS+DCBCFG,RDCB,
        J       STUPM3+16,,
ENDPATCH(CORRECT PROBLEM IN MANAGING MONTAB)
        FO      MONITR
        FO      MISC
        FO      CTLDEF
        FO      GBLDEF
        FO      FRNTND

:10) (ESC. 72472 AND 82919)

:
:       Patch REMOVED Jan. 27 - Too many problems with design
:

:DATE>   JULY 2, 1986
:VERSION>SDLC 1.12
:PURPOSE> IF FRAME LEN = 0 IS RECEVIED, SKIP 2 BYTES
:         AND CHECK IF RING NEEDS TO WRAP AROUND.
:
:        LO      SFGRCV
:        LO      SDLCDF
:        LO      SIODEF
:PATCH(861124,1600,J/MCKIERNAN,PA0PTR,,0C4)
:RCVZRO  EQ      01
:RCVBFS  EQ      0C0
:        HS      0
:RCVBFP  HC      0
:RCVBUF  BS      RCVBFS
:CONPATCH(RSTRT1+1A,,6)
:RSTRT0  LH      R0,RBUF,R2,RSIO
:CONPATCH(RSTRT1+28,,6)
:        J       PA1PTR,,
:CONPATCH(PA1PTR,,66)
:        LHL     R4,RCVBFP,,
:        STB     RL,RCVBUF,R4,
:        LIS     R0,RCVZRO
:        STB     R0,RCVBUF+1,R4,
:        LB      R3,0,RSIO
:        STB     R3,RCVBUF+2,R4,
:        LB      R3,1,RSIO
:        STB     R3,RCVBUF+3,R4,
:        LB      R3,6,RSIO
:        STB     R3,RCVBUF+4,R4,
:        LB      R3,8,RSIO
:        STB     R3,RCVBUF+5,R4,
:        AIS     R4,6
:        CLHI    R4,RCVBFS
:        JLFS    RSTRT2
:        LIS     R4,0
:RSTRT2  STH     R4,RCVBFP,,
:        AIS     R2,2
:        LHL     R3,RBUFRM,RL,RL
:        CR      R2,R3
:        JLEFS   RSTRT4
:        LIS     R2,0
:RSTRT4  STH     R2,RINDEX,RL,RL
:        J       RSTRT0,,
:ENDPATCH(TO SKIP OVER FRAME IF RCV. LENGTH = 0)
:        FO      SFGRCV
:        FO      SDLCDF
:        FO      SIODEF


:11) (ESC. 74286)
:DATE>     JUN 3, 1986
:VERSION>  SDLC 1.12
:ESCALATIN>74286 FOR MDHIS --- TEST COMMAND CAUSING TIF TO STOP POLLING
:PATCH>    THE PATCH WILL ENABLE THE RECEIVER TO DISPLAY THE BAD ADDR.
:FRAME IN EXT. DDT SCOPE NAD THEN IGNORE THE FRAME AS IF NO FRAME
:WERE RECEVIECD. THESE CONDITION WOULD BE CLEARED BY THE CORRECT ADDR.
:FRAME BEING RECEIVED OR A REV. TIMEOUT.
        LO      SIODEF
        LO      SDLCDF
        LO      CTLDEF
        LO      SFGRCV
        PATCH(860603,1000,A/LEE,FINDST+0C,,6)
        J       PA1PTR,,
        CONPATCH(PA1PTR,,24)
        LB      R1,LCBTAB+LLPORS,RLCB,
        JE      FINDS1
        CLB     R3,LCBTAB+LSARCV,RLCB,
        JN      ADDRER,,
FINDS1  STB     R3,LCBTAB+LSARCV,RLCB,
        J       FINDST+12,,
        CONPATCH(NXTSCB+1A,,4)
        JGE     ADDRER
        CONPATCH(ADDRE0-4,,4)
        NOP
        CONPATCH(RCVEN5+0A,,4)
        JE      NODATA
        ENDPATCH(TO INGORE ANY FRAME WITH THE BAD ADDR. FIELD)
        FO      SIODEF
        FO      CTLDEF
        FO      SDLCDF
        FO      SFGRCV


        LO      SDLCDF
        LO      SFGRCV
        PATCH(860609,1700,A/LEE,ADDRE1,,6)
        J       PA1PTR,,
        CONPATCH(PA1PTR,,10)
        LHI     RC,RADRER
        LCS     RSCB,1
        J       RCVEN7,,
        ENDPATCH(TO SET RSCB = -1 IF ADDRESS ERROR)
        FO      SDLCDF
        FO      SFGRCV


:12)
:Date>      june 16,1986
:version>      SDLC 1.12
:esc. >     esc. 74286 for test frmae exchange
        LO      OUTPUT
        PATCH(850604,1700,A/LEE,TESTX+2A,,2)
        CR      R2,R8
        CONPATCH(TESTX+2E,,4)
        LR      R2,R8
        LR      R0,R2
        ENDPATCH(TO GET THE CORRECT VALUE IN R2 BEOFER CALLING SLOR)
        FO      OUTPUT

:13)
:DATE>       AMY 7, 1986
:VERSION>    SDLC 1.12
:NSR>         617 FOR CRASH CODE OF 29.
:PURPOSE>     THIS PATCH WILL EMPTY THE COMMAND WHENEVER A TRANSMIT
:             TIMEOUT OCCURS.
:
:       Patch REMOVED May 13 - Superceded by patch 38 (J/MCKIERNAN)
:
:        IF      (\(PHDPTS))!(\(PHDMPS))
:        LO      SFGPTP
:        LO      SDLCDF
:        LO      CMDLST
:        PATCH(860507,1200,A/LEE,HPDISC+10,,6)
:        J       PA1PTR,,
:        CONPATCH(PA1PTR,,30)
:HPDIS0  JAL     R5,FDCLCD,,
:        J       HPDIS1
:        JAL     R5,CMDNXT,,
:        J       HPDIS0
:HPDIS1  JAL     RLINK5,RSTSEC,,
:        JAL     RLINK5,SETDIS,,
:        J       HPDISC+18,,
:        ENDPATCH(EMPTY THE COMMAND LIST WHENEVER A TRANSMIT TIMOUT OCCURS)
:        FO      SFGPTP
:        FO      CMDLST
:        FO      SDLCDF
:        EI
:
:        IF      (\(PHDPTS))!(\(PHDMPS))
:        LO      SFGPTP
:        LO      CMDLST
:        LO      SDLCDF
:        PATCH(860606,1100,A/LEE,HPCLR9,,6)
:        J       PA1PTR,,
:        CONPATCH(PA1PTR,,28)
:        JAL     RLINK5,FDCLCD,,
:        J       HPCLRA
:        JAL     RLINK5,CMDNXT,,
:        J       HPCLR9,,
:HPCLRA  LHI     R5,HPCLR9-SEG|A.CODE|
:        STH     R5,PSTATE,RL2,
:        J       HPCLR9+0A,,
:        ENDPATCH(TO EMPTY COMMAND LIST DURING A CLEAR STATE)
:        FO      SFGPTP
:        FO      CMDLST
:        FO      SDLCDF
:        EI
:
:        IF      (\(PHDPTS))!(\(PHDMPS))
:        LO      SFGPTP
:        LO      CMDLST
:        LO      SDLCDF
:        PATCH(860606,1100,A/LEE,HPXCLR,,6)
:        J       PA1PTR,,
:        CONPATCH(PA1PTR,,28)
:        JAL     RLINK5,FDCLCD,,
:        J       HPXCLA
:        JAL     RLINK5,CMDNXT,,
:        J       HPXCLR,,
:HPXCLA  LHI     R5,HPXCLR-SEG|A.CODE|
:        STH     R5,PSTATE,RL2,
:        J       HPXCLR+0A,,
:        ENDPATCH(TO EMPTY COMMAND LIST DURING A CLEAR STATE)
:        FO      SFGPTP
:        FO      CMDLST
:        FO      SDLCDF
:        EI


:14)
:       (7/11/86/CHS)
:       TO ELIMINATE UNNECESSARY CHECKING OF SIO RR0 EOM BIT

        LO      SFGXMT
        PATCH(860711,1130,CSHAW,XSET20,,2E)
        J       XSET30
        ENDPATCH(NOT CHECK EOM BIT BEFORE XMT)
        FO      SFGXMT

:15)
::  This patch corrects a error in counting the frames received.
::  Escalation #86219  HSBC.
::  Patch originally initiated by Dan Upthegrove.
::
        LO SFGRCV
PATCH(860702,1630,D/PAU,RCVCTD+6,,4)
        J       INFORM+6
ENDPATCH(COUNT RECEIVED FRAMES FRMR-XID-TEST)
        FO      SFGRCV


:16)
:DATE>    JUNE 17, 1986
:VERSION> SDLC 1.12
:SEC>     MDHIS ESC. 83729 FOR CRASH 22--NO BUFFERLETS AVAILABLE
:PATCH
::  Revised to correct problem with 'skip return' from call to
::  CHKTST at HSDTST .  'Skip return' would crash (Type 14) .

  if     (\(shdpts))!(\(shdmps))
        LO      SFGPTP
        LO      SDLCDF
PATCH(861111,1640,J/MCKIERNAN,HSDTST,,6)
        J       PA1PTR,,
CONPATCH(PA1PTR,,22)
        JAL     RLINK5,CHKTST,,         : Resume original logic
        J       NOSKIP                  : MUST be an RX2 jump !
        JAL     RLINK5,SETTST,,         : 
        JAL     RLINK5,SETRC,,          : Set retries counter
        J       HSDTST+0C,,             : Resume original logic
NOSKIP  J       HSDTS0,,                : Take 'skip return' in
                                        : patch using RX2 jump
ENDPATCH(TO SET RETRIES FOR TEST FRAMES)
        FO      SFGPTP
        FO      SDLCDF
  ei


:17)
:DATE>     JUN 17, 1986
:VERSION>   SDLC 1.12
:ESC>      MDHIS #83736 FOR TWO PUS ANSWERED WITH THE SAME ADDR.
:PATCH>
        LO      SFGPTP
        if      (\(phdpts))!(\(phdmps))
        PATCH(860617,1100,A/LEE,HPRUA,,6)
        J       HPRNEF,,
        ENDPATCH(TO SEND DM TO THE HOST WHEN UA IS RECEIVED DURING NRM)
        ei
        FO      SFGPTP
        

        LO      SFGRCV
        PATCH(860617,1100,A/LEE,ADDRER,,4)
        NOP
        ENDPATCH(TO MAKE DDT SCOPE DISPLAY THE CORRECT ADDRESS FIELD)
        FO      SFGRCV

:18)
:DATE>      August 21, 1986
:VERSION>   1.12
:ESC>       MDHIS ESC. 78897 AND 78631 FOR CRASH 21 AND 14

::  The first portion of this patch is deleted by Ping Chu, because Drue
::  found a problem when alpha testing this patch with QLLC version 2.02.
::        LO      INPUT
::        LO      BUFRTN
::        LO      SDLCDF
::        LO      CTLDEF
::        PATCH(860609,1400,A/LEE,INPDQ4,,6)
::        J       PA1PTR,,
::        CONPATCH(PA1PTR,,24)
::        LR      RLEN,RLEN
::        JNFS    INPDQA
::        LHI     R0,INPDQA-SEG|A.CODE|
::        STH     R0,DCBLKS+ACTIVD,RDCB,
::        JR      RLINK
::INPDQA  JAL     R6,SETUPB,,
::        BBLOAD[LHL]     RBBA,DCBLKS+DCBBBA,RDCB,
::        J       INPDQ4+0A,,
::        
::        ENDPATCH(TO CHECK IF RLEN = 0)
::        FO      BUFRTN
::        FO      CTLDEF
::        FO      SDLCDF
::        FO      INPUT


        LO      INPUT
        LO      CTLDEF
        LO      SDLCDF
        PATCH(860609,1400,A/LEE,INPDQ4+24,,6)
        J       PA1PTR,,
        CONPATCH(PA1PTR,,18)
        LR      R0,R0
        JE      INPDQ7,,
        LR      RLEN,RLEN
        JE      INPDQ7,,
        J       INPDQ5,,
        ENDPATCH(TO CHECK FI RLEN = 0)
        FO      CTLDEF
        FO      SDLCDF
        FO      INPUT

:19)
: This patch is for MDHIS escalation #92280 (TEST frames queuing
: in the SIO receive buffer. To solve this problem, the transmitter
: will advance the SIO receive buffer pointer past any unprocessed
: receive frames when a frame is being transmitted with the P bit 
: set.
:

        LO      MAIN
        LO      SFGRCV
        LO      SFGXMT
        LO      GBLDEF
        LO      CTLDEF
        LO      SDLCDF
        LO      SDLCFX
        LO      SIODEF
        PATCH(860709,0800,DB,XSET40-24,,6)
        J       PA1PTR,,

        CONPATCH(PA1PTR,,40)
        LB      R4,LCBTAB+LLPORS,RLCB,  :PRIMARY OR SECONDARY?
        JE      AROUND                  :SECONDARY, DON'T FLUSH SIO RCV

        LB      R4,SCBLKS+SSPF,RSCB,    :DOES THIS XMT FRAME HAVE P BIT SET?
        JE      AROUND                  :NO, DON'T FLUSH UNPROCESSED RCV FRAMES

        JAL     R5,RCVSYN,,             :FLUSH UNPROCESSED FRAMES

AROUND
        RBT     RL,X1STFR               :CHECK AND SET 1ST FRAME INDICATOR
        JE      XSET40,,                :NO 1ST FRAME SKIP
        J       XSET40-1A,,             :YES
        ENDPATCH(PATCH FOR QUEUED TEST FRAMES)
        FO      SFGRCV
        FO      SFGXMT
        FO      GBLDEF
        FO      CTLDEF
        FO      SDLCDF
        FO      SDLCFX
        FO      SIODEF



:20)
:date>      july 16, 1986
:version>   SDLC 1.12
:esc>       MDHIS esc. 88585 for RNRs sent at wrong time from the TIF
:patch>     Implementation of releasing bufferlets and incrementing receive
:           quotas upon receiving FRMR at HPRFRM routine.

        IF      (\(PHDPTS))!(\(PHDMPS))
        lo      sfgptp
        patch(860716,1700,a/lee,hprfrm,,06)
        j       pa1ptr,,
        conpatch(pa1ptr,,1C)
        jal     r5,chkpf,,
        j       pktemp
        jal     r5,relibb,,
        j       hprfrm+08,,
pktemp  j       hprin7,,
        endpatch(release bufferlets and increment receive quotas in HPRFRM)
        fo      sfgptp
        ei

:* 21) (ESC.43956)
::  This patch is developed based on the enhancement made to 
::  SDLC TIF 1.13 release by Drue Bondad, NTD.
::
::  It is an enhancement to the SDLC TIF in handling the 
::  situation where, for some reasons, the CU keeps sending
::  RNRs to the TIF.
::
::  If the CU does not terminates the RNR and in order for the TIF
::  to get out of the infinite exchange of RNR<=>RR, this patch
::  will count thber of RNR received from CU.  When the number
::  of RNR received from CU exceeds the POLLRETRIES counter, the
::  link will be reinitialized.
::      
          IF   (\(PHDPTS))!(\(PHDMPS))      :THIS PATCH IS ONLY FOR TIF
::
::                                                 
          LO   SDLCDF
          LO   SDLCFX
          LO   SIODEF
          LO   CTLDEF
          LO   CMDLST
          LO   SFGRCV
          LO   SFGXMT
          LO   SFGPTP
          LO   MAIN

::      THE FOLLOWING PATCHES ARE MADE FOR THE CHANGES IN FSYB01.F12
 
RCVRNR  EQ      SCBXRR+04               : Define RCVRNR limit
XMTRNR  EQ      SCBXRR+05               : Define XMTRNR limit
SCBLEN  EQ      ((SCBXRR+02)+0F)&-10    : Update the SCB size

::<1>
:
:    ROUTINE TO SET POLLRETRIES COUNTER INTO RCVRNR
:
	  PATCH(870325,1800,J/MCKIERNAN,PA1PTR,,0E)
SETPOL    LHL  R0,RTYRLN,RL2,
          STB  R0,SCBLKS+RCVRNR,RSCB,
          JR   RLINK5
          ENDPATCH(CNTRNR.P12  1)

::<2>
:
:    ROUTINE TO DECREMENT POLLRETRIES COUNT IN RCVRNR
:
	  PATCH(870325,1800,J/MCKIERNAN,PA1PTR,,26)
DECPOL    LB   R0,SCBLKS+RCVRNR,RSCB,   :GET RCVRNR COUNTER
          JER  RLINK5                   :RETURN IF COUNTER = 0
          CLHI R0,0FF                   :INFINITE RETRY?
          JE   6,RLINK5,,               :YES, NEVER TIME OUT
          SIS  R0,1                     :NO, DECREMENT COUNTER
          JLER RLINK5                   :NORMAL RETURN IF TIME OUT
          STB  R0,SCBLKS+RCVRNR,RSCB,   :UPDATE COUNTER
          J    6,RLINK5,,               :SKIP RETURN, NO TIME OUT
          ENDPATCH(CNTRNR.P12 2)

::
::   THE FOLLOWING CHANGES ARE IN PHDP01.F12
::
::<3>                
          PATCH(870325,1800,J/MCKIERNAN,HPOPA,,6)
          J    PA1PTR,,
          CONPATCH(PA1PTR,,18)
          JAL  RLINK5,SETPOL,,
          JAL  RLINK5,SETRCB,,
          JAL  RLINK5,SETRC,,
          J    HPOPAA,,
          ENDPATCH(CNTRNR.P12 3)
::
::<4>
          PATCH(870325,1800,J/MCKIERNAN,HPR.N1+14,,6)
          J    PA1PTR,,
          CONPATCH(PA1PTR,,18)
          ST   R3,SCBLKS+SCBRNR,RSCB,
          JAL  R5,DECPOL,,              :DECREMENT NO. OF RNR 
          J    HPBUSY,,                 :TOO MANY RNR, 
          J    HPR.N1+1A,,              :
          ENDPATCH(CNTRNR.P12 4)
:
::<5>
:          PATCH(860409,1415,D/PAU,HPRTMO+2A,,6)
:          J    PA1PTR,,
:          CONPATCH(PA1PTR,,12)
:          JAL  RLINK5,DECPOL,,
:          J    HPINOP,,
:          J    HPRID1,,
:          ENDPATCH(CNTRNR.P12 5)
:
::<6>
:          PATCH(860409,1510,D/PAU,HPWND5+10,,6)
:          J    PA1PTR,,
:          CONPATCH(PA1PTR,,12)
:          JAL  RLINK5,DECPOL,,
:          J    HPWOP5,,
:          J    HPWND5+18,,
:          ENDPATCH(CNTRNR.P12 6)
:
::<7>
:          PATCH(860409,1515,D/PAU,HPTER5,,6)
:          J    PA1PTR,,
:          CONPATCH(PA1PTR,,12)
:          JAL  RLINK5,DECPOL,,
:          J    HPTER3,,
:          J    HPTER5+8,,
:          ENDPATCH(CNTRNR.P12 7)
:
:
        FO      SDLCDF
        FO      SDLCFX
        FO      SIODEF
        FO      CTLDEF
        FO      CMDLST
        FO      SFGXMT
        FO      SFGRCV
        FO      SFGPTP
        EI

:22)  Patch in the foreground. 
:*    HDLC Micro-engine derives the SIO Segment Size (= window size) one
:*    byte leaa than what the SNA or SDLC slot has specified.
:*	(7/18/86/CHS)
:
:	IF	PRODID-49
:	LO	FGGBDF
:	ELSE
:	LO	SIODEF
:	EI
:	PATCH(860718,1056,CSHAW,SIOTBX,,NLINES*4)
:Q	EQ	0
:	RE	NLINES
:	WC	SIOX|Q|
:Q	EQ	Q+1
:	ER
:	ENDPATCH(SET SIO SEGEMTN SIZE RIGHT)



:23)
:date>     july 17, 1986
:version>  sdlc 1.12
:esc>      SBBA sdlc esc. 98235 for false states in monitor
:patch>    In both routines HSNDM and HSNDM5, protocol states
:          are not being updated correctly. This patch will update
:          teh protocol state with PNDM as soon as HSNDM and HSNDM5
:          are called.

        if      (\(shdpts))!(\(shdmps))
        lo      sdlcdf
        lo      sfgptp
        lo      gbldef
        lo      ctldef
        lo      sdlcdf
        patch(860717,1700,a/lee,hsndm+0e,,6)
        j       pa1ptr,,
        conpatch(pa1ptr,,18)
        sth     r5,scblks+spstat,rscb,
        lis     r5,pndm
        stb     r5,scblks+sphsta,rscb,
        j       hsndm+14,,
        conpatch(hsndm5+0a,,6)
        j       pa1ptr,,
        conpatch(pa1ptr,,18)
        sth     r5,scblks+spstat,rscb,
        lis     r5,pndm
        stb     r5,scblks+sphsta,rscb,
        j       hsndm5+10,,
        endpatch(to update protocol state correctly in HSNDM and HSNDM5)
        fo      sdlcdf
        fo      sfgptp
        fo      gbldef
        fo      ctldef
        fo      sdlcdf
        ei

:24)	(6/30/86/CHS)
::	THIS IS A VERY LONG PATCH TO FIX THE STATION PROTOCOL
::	DISPATCHER.
::
	LO	GBLDEF
	LO	CTLDEF
	LO	SDLCDF
	LO	SFGRCV
	LO	SFGXMT
	LO	SFGPTP


::	FRCV01 AT FINDST+0C
::	LSARCV = EXPECTED STATION
::	LSPRCV = ACTUAL STATION
	IF	REVLEVN-$812
	PATCH(860630,1200,CSHAW,FINDS1,,6)
	ELSE
	PATCH(860630,1200,CSHAW,FINDST+0C,,6)
	EI
	STB	R3,LCBTAB+LSPRCV,RLCB,	:RCV'ED ADDR INTO LSPRCV
	ENDPATCH()


::	FXMT01 AT XSTAR0+2
::	RECOVER BEFORE EXIT FROM XMTTER
	PATCH(860709,1600,CSHAW,XSTAR0+2,,4)
	J	XSET95
	ENDPATCH()


::	FXMT01 AT XSET55+10
::	IF HALF-DUPLEX AND PRIMARY, RE-SYN SIO RCV INDEX
	PATCH(860709,1600,CSHAW,XSET55+10,,6)
	J	PA1PTR,,
	CONPATCH(PA1PTR,,24)
XSET57
	LB	R3,SCBLKS+SSPF,RSCB,
	JE	XSET95,,
	LB	R1,LCBTAB+LLPORS,RLCB,
	JE	XSET60,,
	JAL	R5,RCVSYN,,
	J	XSET60,,
	ENDPATCH()



::	FSUB01 AT PTPINT+1C
::	TO INIT LSAXMT AND LSARCV TO 0
	PATCH(860630,1200,CSHAW,PTPINT+1C,,6)
	J	PA1PTR,,
	CONPATCH(PA1PTR,,18)
	STB	R4,LCBTAB+LSAXMT,RLCB,
	STB	R4,LCBTAB+LSARCV,RLCB,
	LB	R4,LCBTAB+LLACES,RLCB,
	J	PTPINT+22,,
	ENDPATCH()

::	FSUB01 AT PTPIN1+0E
::	TO INIT SCBCST AND TO SET RCV RESPONSE TIMER FOR 2NDARY
	PATCH(860630,1200,CSHAW,PTPIN1+0E,,6)
	J	PA1PTR,,
	CONPATCH(PA1PTR,,2C)
	LB	R0,LCBTAB+LLSTAT,RLCB,
	STB	R0,SCBLKS+SCBCST,RSCB,
	LR	R0,R0
	JN	PTPINX
	LHL	R0,TRR.LN,RL2,,
	SLHLS	R0,TSCALE
	A	R0,FASTC,,
	ST	R0,SCBLKS+SCBRRT,RSCB,
PTPINX
	J	PTPIN1+14,,
	ENDPATCH()



::	FSUB01 FROM SRCV20 TO SRCV30+2A
::	REPLACED
::	IT RCV TIMEOUT, SKIP RETURN
::		ELSE, SKIP+4 RETURN
	PATCH(860630,1200,CSHAW,SRCV20,,22)
	JAL R5,SIORCV,,
	LHL	RLCB,LCBPTR,RL,RL
	L	R5,RCVRET,RL2,RL2
	LB	R3,LCBTAB+LSARST,RLCB,
	CLHI	R3,RVTMOT
	JN	4,R5
	JR	R5
	ENDPATCH()



::	FSUB01 AT SXMT60+0A
::	WHEN XMT ERROR, SIMPLY NO SKIP RETURN
	PATCH(860709,1600,CSHAW,SXMT60+0A,,4)
	JN	SXMT90
	ENDPATCH()

	IF	(\(PHDPTS))!(\(PHDMPS))

::	HPDP01 FROM PXDISP TO HPDXTX
::	REPLACE

	PATCH(860630,1200,CSHAW,PXDISP+0A,,4)
	JE	PXDI3S
	CONPATCH(PXDIS1+14,,2C)
	JGE	PA1PTR,,
PXDI2S
	STB	R2,LCBTAB+LSAXMT,RLCB,
	JAL	R5,GETSCB
	LIS	R1,1
	STB	R1,LCBTAB+LLSTAT,RLCB,
	STB	R1,SCBLKS+SCBCST,RSCB,
	J	PSDISP
PXDI3S
	JAL	R10,CRASH,,
	BC	0,0,0,CRFTRC

	CONPATCH(PA0PTR,,NLINES*4)
	WS	0
CSHAW	RE	NLINES
	WC	0
	ER

	CONPATCH(PA1PTR,,20)
	LIS	R2,0
	STB	R2,LCBTAB+LSAXMT,RLCB,
	L	R0,CSHAW,RL2,RL2
	JN	PSDISP,,
	LO	SDLCFX
	JAL	R5,PDMISS,,
	J	PSDISP,,

	ENDPATCH()



::		FIX PRDISP
	PATCH(860630,1200,CSHAW,PRDISP,,44)
	JAL	R5,SRCV
	J	PRDI1S
	LB	R2,LCBTAB+LSPRCV,RLCB,
	CLB	R2,LCBTAB+LSARCV,RLCB,
	JE	PRDI0S
	JAL	R5,GETSCB
	JAL	R5,RELIBB
	J	PRDISP
PRDI0S
	JAL	R5,GETSCB
	L	R1,SCBLKS+SPHPTR,RSCB,
	J	4,R1
PRDI1S
	LB	R2,LCBTAB+LSARCV,RLCB,
	JAL	R5,GETSCB
	L	R1,SCBLKS+SPHPTR,RSCB,
	JR	R1
	ENDPATCH()

:	FIX ALL PLACES
	PATCH(860630,1200,CSHAW,HPDRTX,,4)
	J	HPDXTO
	CONPATCH(HPDTS5+4,,4)
	J	HPDRTX
	CONPATCH(HPDXD5+4,,4)
	J	HPDRTX
	CONPATCH(HPWND7-4,,4)
	J	HPDRTX
	CONPATCH(HPNDM+0A,,6)
	J	PA1PTR,,
	CONPATCH(PA1PTR,,18)
	STH	R5,SCBLKS+SPSTAT,RSCB,
	LB	R0,SCBLKS+SCBREL,RSCB,
	RBT	R0,CSHAW,RL2,RL2
	J	HPNDM+10,,
	CONPATCH(HPINIT+6,,6)
	J	PA1PTR,,
	CONPATCH(PA1PTR,,18)
	STB	R1,SCBLKS+SPHSTA,RSCB,
	LB	R0,SCBLKS+SCBREL,RSCB,
	SBT	R0,CSHAW,RL2,RL2
	J	HPINIT+0C,,
	ENDPATCH()



	IF	REVLEV-$812
::	MODIFY PHDP01 AT HPDXTX+24 AND HPDXTO+30
::	DELETE PDMISS
	PATCH(860709,1700,CSHAW,HPDXTX+24,,4)
	NOP	0
	CONPATCH(HPDXTO+30,,4)
	NOP	0
	ENDPATCH()

	EI


::	MODIFY PHDP01 AT HPOPAG-0C
::	TO ELIMINATE ONE POSIBBLE DIMISS
	PATCH(860709,1600,CSHAW,HPOPAG-0C,,4)
	JLE	HPOPAG
	ENDPATCH()

	EI

	IF	(\(SHDPTS))!(\SHDMPS))


::	PHDS01FROM SXDISP TO HSDXTO
::	REPLACE

	PATCH(860630,1200,CSHAW,SXDIS1,,12)
	NOP	0,0,0,
	NOP	0,0,0,
	NOP	0,0,0,
	CONPATCH(SRDISP+8,,6)
	J	PA1PTR,,
	CONPATCH(PA1PTR,,12)
	LB	R2,LCBTAB+LSPRCV,RLCB,
	STB	R2,LCBTAB+LSARCV,RLCB,
	J	SRDISP+0E,,
	CONPATCH(SRDIS0,,4)
	NOP	0
	CONPATCH(HSDCRS+0A,,4)
	NOP	0
	CONPATCH(SRDIS1,,20)
	TBT	RL,PTPHLT,,
	JN	SPHALT
	LIS	R2,0
	STB	R2,LCBTAB+LSPRCV,RLCB,
	STB	R2,LCBTAB+LSARCV,RLCB,
	J	HSDRT4
	CONPATCH(HSDXTR-4,,4)
	J	HSDRTO
	CONPATCH(HSDRTX-4,,4)
	J	HSDRTO

::	REWTIRE HSDRO3 ROUTINE
	CONPATCH(HSDRO3,,80)
HSDRTO
	LB	R1,SCBLKS+SCBPST,RSCB,
	LHL	R2,TRR.LN,RL2
	NHI	R1,SNRMSK
	JEFS	HSDRT1
	LHL	R2,TRP.LN,RL2
HSDRT1
	SLHLS	R2,TSCALE
	A	R2,FASTC,,
	ST	R2,SCBLKS+SCBRRT,RSCB,
	LB	R2,SCBLKS+SCBREL,RSCB,
	STB	R2,LCBTAB+LSARCV,RLCB,
	STB	R2,LCBTAB+LSPRCV,RLCB,
HSDRT2
	LB	R2,LCBTAB+LSPRCV,RLCB,
	AIS	R2,1
	CLB	R2,LCBTAB+LSMAXN,RLCB,
	JLFS	HSDRT3
	LIS	R2,0
HSDRT3
	STB	R2,LCBTAB+LSPRCV,RLCB,
	CLB	R2,LCBTAB+LSARCV,RLCB,
	JE	SRDISP
HSDRT4
	JAL	R5,GETSCB
	LB	R1,SCBLKS+SCBCST,RSCB,
	JN	HSDCRS
	L	R0,SCBLKS+SCBRRT,RSCB,
	CL	R0,FASTC,,
	JGE	HSDRT2
	L	R1,SCBLKS+SPHPTR,RSCB,
	JR	R1
	ENDPATCH()

::	FIX ALL PLACES
	PATCH(860630,1200,CSHAW,HSNDM6+8,,4)
	J	HSDRTR
	CONPATCH(HSDXI7+0C,,4)
	J	HSDRTR
	CONPATCH(HSDTS6+0C,,4)
	J	HSDRTR
	CONPATCH(HSRLNE-4,,4)
	J	HSDRTR
	CONPATCH(HSTER7-4,,4)
	J	HSDRTR
	ENDPATCH()



	IF	REVLEV-$812
::	MODIFY PHDS01 AT HSDXTO+24
::	DELETE PDMISS
	PATCH(860709,1700,CSHAW,HSDXTO+24,,4)
	NOP	0
	ENDPATCH()

	EI


::	PHDS01 AT HSNDM5
::	TO EMPTY XMT QUEUE WHEN SCHEDULED  IN NDM MODE
	PATCH(860709,1600,CSHAW,HSNDM5,,6)
	J	PA1PTR,,
	CONPATCH(PA1PTR,,20)
HSND50
	JAL	R5,RSTSEC,,
HSND51
	JAL	R5,FDCLCD,,
	J	HSND52
	JAL	R5,CMDNXT,,
	J	HSND51
HSND52
:*	J	HSNDM5+6,,	: return address should be + 0A, Ping Chu
	J	HSNDM5+0A,,	: 9/3/86 Ping Chu
	ENDPATCH()



::	PHDS01 AT HSXTMO+0A
::	CLEAR XMT SEDBAS
	PATCH(860709,1600,CSHAW,HSXTMO+0A,,6)
	J	PA1PTR,,
	CONPATCH(PA1PTR,,12)
HSXTM2
	STH	R5,SCBLKS+SPSTAT,RSCB,
	JAL	R5,RSTSEC,,
	J	HSXTMO+10,,
	ENDPATCH()

	EI

:25)
::  This patch is written based on some modifications made by
::  Drue Bondad as solutions to escalation 70891 and NSR749.
::  Originally if Monitor operator enters username, password
::  or host number that exceed a certain length, incorrect
::  information will be stored into the LOBTAB and caused
::  ill. nem. ref. crash when the information is redisplayed.
::  Now several routines have been added to validate the data
::  input by the Monitor operator before the information is
::  actually stored in hte LABTAB.
::

	LO	MONITR
	LO	CTLDEF
PATCH(860723,1400,PING/CHU,MNPR20+38,,6)
	J	PA1PTR,,
CONPATCH(PA1PTR,,22)
	JAL	R9,MNPUSR
	J	MNP2C5,,
	J	MNP2M1,,
	J	MNP2M2,,
	J	MNP2M3,,
	J	MNP2C3,,
::
CONPATCH(MNP2M2+10,,6)
	J	PA1PTR,,
CONPATCH(PA1PTR,,22)
	JAL	R9,MNPHST
	J	MSYTER,,
	J	MNP2M4,,
	J	MSYTER,,
	J	MNP2M3,,
	J	MNP2C2,,
::
CONPATCH(MNP2M3+28,,6)
	J	PA1PTR,,
CONPATCH(PA1PTR,,24)
	JAL	R9,MNPASS
	J	MNP2C2,,
	J	MNP2M4,,
	J	MSYTER,,
	J	MNP2M5,,
	J	MNP2C2,,
::
CONPATCH(MNP2N1+10,,6)
	J	PA1PTR,,
CONPATCH(PA1PTR,,22)
	JAL	R9,MNPUSR
	J	MNP2N4,,
	J	MNP2N2,,	
	J	MNP2N3,,
	J	MNP2N6,,	
	J	MNP2C1,,
::	
CONPATCH(MNP2N3+10,,6)
	J	PA1PTR,,
CONPATCH(PA1PTR,,22)
	JAL	R9,MNPHST
	J	MSYTER,,
	J	MNP2N7,,
	J	MSYTER,,
	J	MNP2N6,,
	J	MNP2N5,,

::
CONPATCH(MNP2N6+2E,,6)
	J	PA1PTR,,
CONPATCH(PA1PTR,,22)
	JAL	R9,MNPASS
	J	MNP2C1,,
	J	MNP2N7,,
	J	MSYTER,,
	J	MNP2N8,,	
	J	MNP2C1,,
::
CONPATCH(PA1PTR,,1E)
::
MNPUSR
	LHI	R5,USRMAX-1
        J       MNP2RR
::
MNPHST
        LHI     R5,HSTMAX-1
        J       MNP2RR
::
MNPASS
        LHI     R5,PASMAX-1
::
MNP2RR  STB      R5,MAXCHR,,
	J	MNP2R1,,
::
CONPATCH(MNP2RA+0E,,6)
	J	PA1PTR,,
CONPATCH(PA1PTR,,2C)
	JE	$A6,R9
	CLHI	R0,ACOLN+80
	JE	$A12,R9
	CLHI	R0,ASEMI+80
	JE	$A18,R9
	CLB	R5,MAXCHR,,
	JG	MSYTER,,
	STB	R0,TEMBUF,R1,
	J	MNP2RA+28,,
::
CONPATCH(MNP2RA+34,,6)
	J	PA1PTR,,
CONPATCH(PA1PTR,,0A)
	JL	MNP2RA,,
	J	$A24,R9
::
CONPATCH(PA0PTR,,4)
MAXCHR	BS	1
::
	HS	0
USRMAX	EQ	0A
HSTMAX	EQ	4
PASMAX	EQ	0C
::
ENDPATCH(ROUTINES TO CORRECT PROBLEM IN LOGTAB)
::

PATCH(860702,1100,A/LEE,MNP2M3+0E,,6)
        J       PA1PTR,,
        
CONPATCH(PA1PTR,,18)
        JGE     MNP2C2,,
        LB      R5,MONBUF,R3,R4
        CLHI    R5,ASLUH+80
        J       MNP2M3+16,,
CONPATCH(MNP2N6+12,,6)
        LB      R5,MONBUF,R3,R4
ENDPATCH(TO MAKE R5 CONTAINS CHAR COUNT)
        FO      MONITR
        FO      CTLDEF

:26)
:DATE>    JUNE 25, 1986
:VERSION>  SDLC 1.12
:ESC.>    SBBA HKSB ESC. 87240
:PATCH>   THIS PATCH FILE CONTAINS TWO PATCHES. THE FIRST ONE WILL MAKE
:         TIF NOT TO CONVERT AN UA TO A DM WHEN RECEIVE AN UA AFTER SENDING 
:         DISC. THE SECOND PATCH IS TO EMPTY THE XMT QUEUE TO AVOID
:         SENDING OUT DM?FRMR THAT WAS ARRIVED EARLIER WHEN RECEIVNG THE 
:         FIRST XID OF A NEW SEQUENCE.

        IF      (\(PHDPTS))!(\(PHDMPS))
        LO      SDLCDF
        LO      SFGRCV
        LO      SFGPTP
        LO      GBLDEF
        PATCH(860709,1100,A/LEE,HPWND4+1A,,6)
        J       PA1PTR,,
        CONPATCH(PA1PTR,,20)
        LHI     R2,DMCD
        CHI     R3,RVDM
        JE      HPWND9
        LHI     R2,UACD
        CHI     R3,RVUA
        JE      HPWND9
        J       HPWND4+2A,,
        CONPATCH(PA1PTR,,14)
HPWND9
        JAL     R5,XBGCMD,,
        LA      R1,HPNDM,,
        J       HPDRTX,,
        ENDPATCH(NOT TO CONVERT AN UA TO D DM WHEN RECEIVING UA AFTER DISC)
        FO      SDLCDF
        FO      GBLDEF
        FO      SFGRCV
        FO      SFGPTP
        EI

:2)     
        IF      (\(SHDPTS))!(\(SHDMPS))
        LO      SFGPTP
        LO      GBLDEF
	LO	SDLCDF
        PATCH(860804,1500,PING/CHU,HSDX05+4,,6)
        J       PA1PTR,,
        CONPATCH(PA1PTR,,28)
        JAL     RLINK5,XBGINF,,
HSDX06  JAL     R5,FDCLCD,,
        J       HSDXXX
        JAL     R5,CMDNXT,,
        JBS     HSDX06
        J       HSDXI0,,
HSDXXX  J       HSDXI1,,
        ENDPATCH(TO EMPTY THE XMT QUEUE WHEN RECEIVING THE  1IST XID)
        FO      SFGPTP
        FO      GBLDEF
	FO	SDLCDF
        EI

:27)
:patch for esc#99416 of HSBC: crash code 21occurs when logging into
:OP monitor.
	lo	pvchdl
	lo	main
	lo	gbldef
	lo	frntnd
	lo	ctldef
	gl	msgb2
	patch(860723,1000,ach,msgb2+38,,6)
	j	pa1ptr,,
	conpatch(pa1ptr,,18)
	sth	r12,portab,rport,rport
	sbt	rport,acp,,
	rbt	rport,outdat,,
	j	msgb2+42,,
	endpatch()
	fo	pvchdl
	fo	frntnd



: 28)
:
:       Escalation I99417 - Hongkong Bank V1.12 SDLC
:
:       Problem - OP monitor user types ahead a lot of <CR>,
:       consumes the command link list, causing crash code 29.
:
:       Escalation I23760 - Correct return register
:       Escalation I80712 - Flush input if it follows.  R2 had not
:                           been decremented as yet.  If data did
:                           not follow, ring pointers were wrong.
:       Escalation I25684 - Send ERROR message if data follows a
:                           CR (BIG problem for EXIT command) .
:
:       Patch file - (PINGCHU) FIXP28.P12
:

	LO	MONITR
	LO	GBLDEF
	LO 	CTLDEF

PATCH(870506,1830,J/MCKIERNAN,MONINP,,06)
        J       PA1PTR,,                : Jump to PATCH area
CONPATCH(PA1PTR,,0E)
        JAL     R4,GETCH,,              : Resume previous logic
        SIS     R2,1                    : Decrement msg. length
        J       MONINP+06,,             : Return
CONPATCH(MONIP1+042,,02)
        LR      R2,R2                   : Check for message end
ENDPATCH( Decrement length immediately in MONINP routine )

PATCH(870506,1830,J/MCKIERNAN,ACR01+012,,06)
	J	PA1PTR,,                : Jump to PATCH area
CONPATCH(PA1PTR,,01E)
	TBT	R1,OUTDAT,,             : In output mode ?
        JNR     R7                      : Yes - Ignore data
	LH	R4,DCBLKS+DCBICC,RDCB,  : Any command data ?
	JER	R7                      : No  - Ignore data
        L       R4,M2SAVE,,             : Any data after CR ?
        JNR     R7                      : Yes - Ignore data
	J 	MNPRC,,                 : Otherwise, OK
ENDPATCH( Handle user type ahead in Operations Monitor )

	FO	MONITR
	FO	GBLDEF
	FO	CTLDEF


:29) (ESC. 00233)
:: (SABB esc#00233) Handles rcv address error when data lost
:: Problem - XID received by HIF with an undefined address when a data
:: lost condition happens, HIF releases buffers without setting up the
:: registers properly.

        LO      SFGRCV
        LO      SDLCDF
        LO      SDLCFX
        LO      SIODEF
        LO      CTLDEF
        LO      GBLDEF

        PATCH(860723,1800,DB,RCVEN2,,06)
        J       PA1PTR,,

        CONPATCH(PA1PTR,,18)
        STH     R2,RINDEX,RL,RL
        CLHI    RSCB,-1         :SCB FOR THIS RCV
        JE      NODATA,,        :NO, ADDRESS ERROR
        J       RCVEN2+6,,      :YES, RETURN

        ENDPATCH(SABB ESC00233 HANDLES RCV ADDR ERROR WHEN DATA LOST)

        FO      SDLCDF
        FO      SDLCFX
        FO      CTLDEF
        FO      GBLDEF
        FO      SIODEF
        FO      SFGRCV


:30)

: (SABB ESC06959) PATCH TO SET UP RLCB BEFORE PERFORMING HALT.
: PATCH: SETLCB.P12

:FIRST PART OF THE PATCH IS FOR PRIMARY STATIONS
        IF      (\(PHDPTS))!(\(PHDMPS))
        LO      SFGPTP
        LO      SDLCDF
        LO      SDLCFX
        LO      CTLDEF
        LO      GBLDEF


	PATCH(860805,1100,DB,PPHLT+2,,06)
        J       PA1PTR,,                :JUMP TO THE PATCH

        CONPATCH(PA1PTR,,14)
	LHL	RLCB,LCBPTR,RL,RL	:GET LCB TABLE ENTRY
	STB	R2,LCBTAB+LSPRCV,RLCB,	
	J	PPHLT1,,		:RETURN


	ENDPATCH(SABB ESC06959 FOR RLCB NOT SET BEFORE PPHLT)
        FO      SFGPTP
        FO      SDLCDF
        FO      SDLCFX
        FO      CTLDEF
        FO      GBLDEF

        EI      (\(PHDPTS))!(\(PHDMPS))

:SECOND PART OF PATCH FOR SECONDARY STATIONS
	IF	(\(SHDPTS))!(\(SHDMPS))

        LO      SFGPTP
        LO      SDLCDF
        LO      SDLCFX
        LO      CTLDEF
        LO      GBLDEF

	PATCH(860805,1100,DB,SPHLT+2,,06)
	J	PA1PTR,,

	CONPATCH(PA1PTR,,14)
	LHL	RLCB,LCBPTR,RL,RL	:GET LCBTAB ENTRY
	STB	R2,LCBTAB+LSPRCV,RLCB,	
	J	SPHLT1,,	

	ENDPATCH(SABB ESC06959 FOR RLCB NOT SET BEFORE SPHLT)

        FO      SFGPTP
        FO      SDLCDF
        FO      SDLCFX
        FO      CTLDEF
        FO      GBLDEF
        FO      SFGXMT
        FO      SFGRCV

	EI	(\(SHDPTS))!(\(SHDMPS))

:31)
::patch to reset the bpterm bit array due to circuit zap, and network
::delay. The function of this patch is to clear the bpterm to allow
::the port not staying in TTRN state. (esc 84246)
	if	(\(phdpts))!(\(phdmps))
	lo	sfgptp
	patch(860805,1300,achao,hpterm+18,,6)
	j	hpter0+0c,,
	fo	sfgptp
	endpatch()
	ei




:32) (Esc. 09721 and 96701)

:*   Problem - Crash Code 35 when FTRACE is turned on. IC counter is 
:*   not cleared when a new SNRM comes in for a station. Slot crashed
:*   at  XFGCMD+30.  Esc. 09721 SABB

:       Escalation I96701 - Reset SCBIC after XMT queue is empty

        LO      GBLDEF
        LO      CTLDEF
        LO      SDLCFX
        LO      SFGPTP
        LO      SFGRCV
        LO      SFGXMT
        LO      SDLCDF

	IF	(\(PHDPTS))!(\(PHDMPS))
PATCH(870302,1430,J/MCKIERNAN,HPOP4,,06)
        J       PA1PTR,,
CONPATCH(PA1PTR,,14)
        LIS     R5,0                    : Reset SCBIC after the
        STH     R5,SCBLKS+SCBIC,RSCB,   : XMT queue is emptied
        LA      R1,HPOPA,,              : Resume original logic
        J       HPDRTX,,                :
ENDPATCH( Esc. I96701 - Reset SCBIC after XMT queue is emptied )
        EI

  IF    FTRACE
PATCH(870226,0900,R/KISHMIRIAN,CMDNXT+22,,02)
        JR      R5                      : Return - Don't crash
ENDPATCH( Esc. I96701 - Reset SCBIC after XMT queue is emptied )
  EI
        FO      SDLCFX
        FO      CTLDEF
        FO      GBLDEF
        FO      SFGPTP
        FO      SFGRCV
        FO      SFGXMT
        FO      SDLCDF

:33)
:	Escalation Number : 20311
:	Customer          : SABBNET
:	Product ID        : SDLC
:	Patch Filename    : (SNADEV:39) E20311.P12 or (pingchu:37) montim.p12
:
:	The first patch uses the time when the SDLC monitor
:	is initialized as the slot's last crash time if the
:	slot's last crash time is equal to zero.
:	The slot's last crash time can be equal to zero
:	when a slot is first loaded, or when a slot is
:	halted prior to the first crash.
:
:	The second patch uses the slot's last crash time
:	for the SDLC monitor header instead of the time
:	the circuit was built to the monitor.
:

	LO	MONITR			:PATCH IS IN MONITR MODULE
	LO	CRASH			:NEED CRASH LIBRARY
	PATCH(860904,1500,R/KISHMIRIAN,IZMON,,6)
	J	PA1PTR,,		:JUMP TO PATCH1 AREA
	CONPATCH(PA1PTR,,20)
	L	R8,CTIME,,		:GET LAST CRASH TIME
	JNFS	E20311			:NOT ZERO
	L	R8,GMT,,		:GET CURRENT TIME
E20311	ST	R8,CTIME,,		:SAVE NEW CRASH TIME
	LA	R8,CRCNT,,		:RESTORE REGISTER 8
	J	IZMON+6,,		:RETURN TO MONITOR INITIALIZATION
	ENDPATCH(ESCALATION 20311 - FIRST CRASH TIME INITIALIZED)
	FO	CRASH			:NO LONGER NEED CRASH LIBRARY
	FO	MONITR			:DONE WITH MONITR MODULE

	LO	MONITR			:PATCH IS IN MONITR MODULE
	LO	CRASH			:NEED CRASH LIBRARY
	PATCH(860904,1500,R/KISHMIRIAN,STUPM5+6C,,6)
	L	R3,CTIME,,		:GET TIME OF LAST CRASH
	ENDPATCH(ESCALATION 20311 - MONITOR NOW DISPLAYS LAST CRASH TIME)
	FO	CRASH			:NO LONGER NEED CRASH LIBRARY
	FO	MONITR			:DONE WITH MONITR MODULE

:34)
:	Escalation Number : 20323
:	Customer          : SABBNET
:	Product ID        : SDLC
:	Patch Filename    : (sdlcdev:39)E20323.P12 or (PINGCHU:37) LOGTAB.P12
:
:	This patch matches the correct log table message with
:	the proper log table code when accessing the log table.
:	The log table message text offset was two greater than
:	the log table message code offset.
:
:       Patch REMOVED Jan. 27 - Superceded by patch 46 (J/MCKIERNAN)
:
:
:	LO	MONITR			:PATCH IS IN MONITR MODULE
:	LO	CTLDEF			:NEED DEFINITIONS FROM CTLDEF
:	PATCH(860910,1000,R/KISHMIRIAN,MERLG2+70,,6)
:	J	PA1PTR,,		:JUMP TO PATCH1 AREA
:	CONPATCH(PA1PTR,,26)
:	LB	R5,LOGTBL+LOGTYP,R11,	:GET THE ERROR LOG CODE
:	CLHI	R5,2			:IS IT 0 OR 1?
:	JL	MERLG3+12,,		:YES, DO NOT PRINT MESSAGE TEXT
:	SIS	R5,2			:NO, CORRECT OFFSET
:	LHL	R3,MLGTXP,R5,R5		:GET LOG TEXT POINTER
:	LB	R9,MLGTXP,R3,		:GET BYTE COUNT
:	LIS	R4,0			:INIT TEXT POINTER
:	J	MERLG3,,		:RETURN TO MONITOR
:	ENDPATCH(ESCALATION 20323 - CORRECT LOGTABLE ERROR OFFSET)
:	FO	CTLDEF			:NO LONGER NEED CTLDEF
:	FO	MONITR			:DONE WITH MONITR MODULE


:35)
:	PATCH FILE NUMBER	:   nnn (to be filled in later by sts - hqtech)
:	ESCALATION NUMBER	: NONE
:	CUSTOMER		: ALL
:
:	PRODUCT CODE		: SDLC
:	(DIR:SYS)FILENAME	: (to be filled in by sts - hqtech)
:	(DIR:SYS)ORIGINAL NAME	: (SDLCDEV:39)/(PINGCHU:37)FIXP24.P12
:	VERSION			: 01.12
:	REASON (NSR/PIR)	: NONE, CORRECTS PARTS OF PATCH 23 AND 24
:	AUTHOR			: ROLAND KISHMIRIAN
:	DATE			: 11/03/86
:
:	DESCRIPTION OF PROBLEM	:
:
:	PSTATE IS NOT BEING SAVED AFTER PATCH 24 IS EXECUTED.  THE WRONG
:	VALUE IS ALSO BEING SAVED IN SPSTAT WHEN PATCH 23 IS EXECUTED.
:
:	DESCRIPTION OF PATCH	:
:
:	THIS PATCH NOW SAVES PSTATE AND SPSTAT FOR PATCH NUMBERS 23 AND 24.
:
:	SUPERSEDED PATCH FILES	:
:
:	THIS PATCH SUPERSEDES PARTS OF PATCH NUMBERS 23 AND 24
:	IN THE (SOURCE)SDLC01.P12 PATCH FILE.
:	BOTH PATCH NUMBERS 23 AND 24 STILL MUST BE CALLED.
:
:	ADDITIONAL COMMENTS	:
:
:	THIS PROBLEM WAS REPORTED BY JOHN MCKIERNAN OF HQTECH
:	IN HIS ONTYME NUMBER M35680 ON 21 OCTOBER 1986.

	LO	SFGPTP			:PATCH IS IN SFGPTP MODULE
	LO	SDLCDF			:NEED SDLCDF MODULE
	LO	SDLCFX			:NEED SDLCFX MODULE
	LO	CTLDEF			:NEED CTLDEF MODULE
	LO	GBLDEF			:NEED GBLDEF MODULE
	LO	SFGXMT			:NEED SFGXMT MODULE
	LO	SFGRCV			:NEED SFGRCV MODULE
 IF	(\(SHDPTS))!(\SHDMPS))
	PATCH(861103,1000,R/KISHMIRIAN,HSNDM5,,6)
	J	PA1PTR,,		:JUMP TO PATCH1 AREA
	CONPATCH(PA1PTR,,3E)
HSND50	LHI	R5,HSNDM5-SEG|A.CODE|	:GET PROTOCOL STATE
	STH	R5,PSTATE,RL2,		:SAVE STATE FOR DEBUGGING
	STH	R5,SCBLKS+SPSTAT,RSCB,	:STORE CURRENT PROTOCOL STATE
	LIS	R5,PNDM			:PROTOCOL IN NORMAL DISCONNECTED
	STB	R5,SCBLKS+SPHSTA,RSCB,	:SAVE STATE OF PROTOCOL HANDLER
HSND51	JAL	R5,RSTSEC,,		:RESET SECTOR DATA BUFFER BASE
HSND52	JAL	R5,FDCLCD,,		:ANYMORE TRANSMIT COMMANDS?
	J	HSND53			:NO
	JAL	R5,CMDNXT,,		:YES, RELEASE CURRENT TRANSMIT COMMAND
	J	HSND52			:CHECK IF ANY MORE TRANSMIT COMMANDS
HSND53	J	HSNDM5+10,,		:RETURN TO HSNDM5 LOGIC
	ENDPATCH(FIX PATCHES 23 AND 24 HSNDM5 LOGIC)
 EI
	FO	SDLCDF			:NO LONGER NEED SDLCDF MODULE
	FO	SDLCFX			:NO LONGER NEED SDLCFX MODULE
	FO	CTLDEF			:NO LONGER NEED CTLDEF MODULE
	FO	GBLDEF			:NO LONGER NEED GBLDEF MODULE
	FO	SFGXMT			:NO LONGER NEED SFGXMT MODULE
	FO	SFGRCV			:NO LONGER NEED SFGRCV MODULE
	FO	SFGPTP			:DONE WITH SFGPTP MODULE


:36)
:	PATCH FILE NUMBER	:   nnn (to be filled in by hqtech)
:	ESCALATION NUMBER	: 52092
:	CUSTOMER		: HSBCNET
:
:	PRODUCT CODE		: SDLC
:	(DIR:SYS)FILENAME	: (to be filled in by hqtech)
:	(DIR:SYS)ORIGINAL NAME	: (SDLCDEV:39)/(PINGCHU:37)RADMAC.P12
:				: (AS OPPOSED TO A MAC RAD OR A BIG MAC
:				: FROM DOUGLAS MC DONNELL)
:	VERSION			: 01.12
:	REASON (NSR/PIR)	: (to be filled in by hqtech)
:	AUTHOR			: ROLAND KISHMIRIAN
:	DATE			: 12/05/86
:
:	DESCRIPTION OF PROBLEM	:
:
:	THE USE OF A DECIMAL RADIX IN THE MAC MACRO LIMITS THE INTERFACE
:	TO A MAXIMUM OF NINE LINES.
:
:	DESCRIPTION OF PATCH	:
:
:	THE DECIMAL RADIX HAS BEEN REMOVED FROM THIS MACRO.
:
:	SUPERSEDED PATCH FILES	:
:
:	NO PATCHES ARE SUPERSEDED.
:

	LO	SFGPTP		:PATCH IS IN SFGPTP MODULE
	LO	SDLCDF		:NEED SDLCDF MODULE DEFINITIONS
	LO	SDLCFX		:NEED SDLCFX MODULE DEFINITIONS
	LO	SIODEF		:NEED SIODEF MODULE DEFINITIONS
	LO	CTLDEF		:NEED CTLDEF MODULE DEFINITIONS
	LO	CMDLST		:NEED CMDLST MODULE DEFINITIONS
	LO	SFGRCV		:NEED SFGRCV MODULE DEFINITIONS
	LO	SFGXMT		:NEED SFGXMT MODULE DEFINITIONS
	LO	GBLDEF		:NEED GBLDEF MODULE DEFINITIONS
	LO	MAIN		:NEED MAIN   MODULE DEFINITIONS
	KILL	MAC		:KILL PREVIOUS USE OF MAC MACRO

MAC	MACRO(OPT,DFAULT,MODS)	[
OPT`LN	HS	0		:START OF TABLE FOR THIS OPTION
Q	EQ	0		:INITIALIZE LINE NUMBER
	RE	NLINES		:REPEAT NLINES TIMES
  IF	`\OPT|Q|		:OPTIONS SPECIFIED
	HC	`OPT|Q|`MODS	:USE SPECIFIED VALUES
  ELSE				:OPTIONS NOT SPECIFIED
	HC	`DFAULT`MODS	:USE DEFAULT VALUES
  EI				:(OPT|Q| MODS)
Q	EQ	Q+1		:INCREMENT LINE NUMBER
	ER			:END OF REPEAT LOOP
	]			:END OF MAC MACRO

 IF	(\(PHDPTS))!(\(PHDMPS))
	PATCH(861205,1300,R/KISHMIRIAN,TPD.LN,,NLINES*2*0D)
 ELSE
	PATCH(861205,1300,R/KISHMIRIAN,TPD.LN,,NLINES*2*0C)
 EI
 IF	(\(PHDMPS))!(\(SHDMPS))
	MAC(TPD.,0,*TPS/4)	:DELAY FOR THE PRIMARY (AFTER RCV RR)
 ELSE
	MAC(TPD.,1,*TPS/4)	:DELAY FOR ONE CYCLE (QUARTER OF A SECOND)
 EI
	MAC(THD.,2,*1)		:WAIT FOR HW XMT COMPLETE, UNIT = 1/600 SECOND
	MAC(TRR.,3,*TPS)	:TIMER FOR RECEIVE RESPONSE (3 SECONDS)
	MAC(TNR.,9,*TPS/$A10)	:TIMER FOR RESPONSE FROM NETWORK
	MAC(TRP.,1,*TPS)	:TIMER WAITING FOR POLLING (1 SECOND)
	MAC(TXR.,3,*TPS)	:TIMER FOR XMT RESPONSE INTERVAL (3 SECONDS)
 IF	(\(PHDPTS))!(\(PHDMPS))
	MAC(TFP.,0,*TPS/$A10)	:DELAY FOR THE PRIMARY (AFTER RCV I-FRAME)
 EI
	MAC(TIR.,0,*TPS/2)	:TIMER FOR WAITING FOR MORE I-FRAMES (0.5 SEC.)
	MAC(PAU.,3,*TPS)	:PAUSE (3 SECOND)
	MAC(RTY,5,*1)		:RETRY NUMBER FOR EACH LINE
	MAC(RTYT,0,*1)		:RETRY PAUSE
	MAC(RTYN,0,*1)		:NUMBER OF RETRY SEQUENCES
	MAC(RTYR,0,*1)		:RETRY COUNT FOR POLLING
	ENDPATCH(ESCALATION 52092 - REMOVE DECIMAL RADIX FROM MAC MACRO)
	FO	SDLCDF		:DONE WITH SDLCDF MODULE DEFINITIONS
	FO	SDLCFX		:DONE WITH SDLCFX MODULE DEFINITIONS
	FO	SIODEF		:DONE WITH SIODEF MODULE DEFINITIONS
	FO	CTLDEF		:DONE WITH CTLDEF MODULE DEFINITIONS
	FO	CMDLST		:DONE WITH CMDLST MODULE DEFINITIONS
	FO	SFGRCV		:DONE WITH SFGRCV MODULE DEFINITIONS
	FO	SFGXMT		:DONE WITH SFGXMT MODULE DEFINITIONS
	FO	GBLDEF		:DONE WITH GBLDEF MODULE DEFINITIONS
	FO	SFGPTP		:DONE WITH SFGPTP MODULE


:37)
:	ESCALATION NUMBER	: 35075
:	CUSTOMER		: FIRN
:	(DIR:SYS)ORIGINAL NAME	: (SDLCDEV:39)/(PINGCHU:37)SCBIC2.P12
:
:	DESCRIPTION OF PROBLEM	:
:	THE SLOT CRASHED WITH AN ILLEGAL MEMORY REFERENCE AT RSTRT0+828.
:	VS, VR, NS, AND NR WERE ZEROED OUT AFTER RECEIVING A SNRM.
:	HOWEVER, SCBIC, THE I-FRAME COUNTER, WAS NOT ZEROED OUT.
:
:	DESCRIPTION OF PATCH	:
:	WHEN A SNRM IS SENT, SCBIC, THE I-FRAME COUNTER, IS NOW ZEROED OUT.
:	THIS PATCH ZEROES OUT SCBIC AT THE REMAINING TWO LOCATIONS.

:       Escalation I96701 - Reset SCBIC after XMT queue is emptied

	LO	SFGPTP			:PATCH IS IN SFGPTP MODULE
	LO	SDLCDF			:NEED DEFINITIONS FROM SDLCDF
	LO	SDLCFX			:NEED DEFINITIONS FROM SDLCFX
	LO	CTLDEF			:NEED DEFINITIONS FROM CTLDEF
	LO	GBLDEF			:NEED DEFINITIONS FROM GBLDEF
	LO	SFGXMT			:NEED DEFINITIONS FROM SFGXMT
	LO	SFGRCV			:NEED DEFINITIONS FROM SFGRCV

 IF	(\(SHDPTS))!(\(SHDMPS))
	PATCH(870226,0900,R/KISHMIRIAN,HSOP1+2A,,6)
	J	PA1PTR,,		:JUMP TO PATCH1 AREA
	CONPATCH(PA1PTR,,030)
HSOP00  JAL     R5,FDCLCD,,             : Esc. I96701 - Autostrade
        J       HSOP01                  :  "
        JAL     R5,CMDNXT,,             :  "
        J       HSOP00                  :  "
HSOP01	LIS	R0,0			:INITIALIZATION VALUE
	STH	R0,SCBLKS+SCBIC,RSCB,	:ZERO OUT SCBIC I-FRAME COUNTER
	LHL	R0,TNR.LN,RL2,		:GET RESPONSE TIMER
	SLLS	R0,TSCALE
	JE	HSOP10,,		:JUMP IF NOT DEFINED
	J	HSOP1+32,,		:RETURN TO HSOP1
	ENDPATCH( Esc. I96701 - Reset SCBIC after XMT queue is emptied )
 EI

 IF	(\(PHDPTS))!(\(PHDMPS))
        PATCH(870226,0900,R/KISHMIRIAN,HPRNEF,,6)
	J	PA1PTR,,		:JUMP TO PATCH1 AREA
	CONPATCH(PA1PTR,,34)
	JAL	RLINK5,RELIBB,,		:JUMP TO RELEASE BUFFER IF NECESSARY
        JAL     RLINK5,CLRVSR,,		:CLEAR VR AND VS
        JAL     RLINK5,CLRNSR,,		:CLEAR NR AND NS
HPRNE0  JAL     R5,FDCLCD,,             : Esc. I96701 - Autostrade
        J       HPRNE1                  :  "
        JAL     R5,CMDNXT,,             :  "
        J       HPRNE0                  :  "
HPRNE1	LIS	R5,0			:INITIALIZATION VALUE
	STH	R5,SCBLKS+SCBIC,RSCB,	:ZERO OUT SCBIC I-FRAME COUNTER
:       JAL     RLINK5,CLRCLR,,		:RESET RELATIVE STATION # BIT ARRAY
:	THE ABOVE INSTRUCTION IS NOT NEEDED AS THE CODE EVENTUALLY GOES
:	TO HPCLR9 (PER ALMOND CHAO) AND GETS CALLED THERE.
        J       HPDMIN,,		:JUMP TO INFORM BACKGROUND
	ENDPATCH( Esc. I96701 - Reset SCBIC after XMT queue is emptied )
 EI

	FO	SDLCDF			:NO LONGER NEED SDLCDF
	FO	SDLCFX			:NO LONGER NEED SDLCFX
	FO	CTLDEF			:NO LONGER NEED CTLDEF
	FO	GBLDEF			:NO LONGER NEED GBLDEF
	FO	SFGXMT			:NO LONGER NEED SFGXMT
	FO	SFGRCV			:NO LONGER NEED SFGRCV
	FO	SFGPTP			:DONE WITH SFGPTP MODULE


:38)	ESCALATION NUMBER	: 11134
:	CUSTOMER		: FIRN
:	PATCH NAME		: (PINGCHU:37)FIXP38.P12
:
:* Problem -  SLOT CRASHED WITH CODE 2A AFTER THE BG TO FG COMMAND LIST
:	      WAS FILLED.  THE FDCLCD ROUTINE (CHECK QUEUE) HAD NOT BEEN
:             EXECUTED.
:
:* Solution - THIS PATCH RESETS THE OUTPUT SECTOR DATA PRIOR TO CALLING
:             THE FDCLCD ROUTINE.
:

	LO	SFGPTP			:PATCH IS IN SFGPTP MODULE
	LO	CMDLST			:NEED CMDLST MODULE DEFINITIONS
	LO	CTLDEF			:NEED CTLDEF MODULE DEFINITIONS
	LO	GBLDEF			:NEED GBLDEF MODULE DEFINITIONS
	LO	SDLCDF			:NEED SDLCDF MODULE DEFINITIONS

: - - - - - - - - - - - - - - - - - - - -
:*	PATCH(870414,1900,R/KISHMIRIAN,RSTSEC,,6)
	PATCH(870505,1900,PING/CHU,RSTSEC,,6)
	J	PA1PTR,,		:JUMP TO PATCH1 AREA
	CONPATCH(PA1PTR,,2E)
	LHL	R4,SCBLKS+SCBIC,RSCB,	:GET IC COUNTER
	JEFS	RSTSE1			:SCBIC COUNTER IS ZERO
	LB	R1,SCBLKS+SCBRXC,RSCB,	:GET RETRANSMIT COUNTER
	JEFS	RSTSE1			:SCBRXC COUNTER IS ZERO
	LIS	R4,0			:INITIALIZATION VALUE
	SR	R4,R1			:-(SCBRXC) VALUE
	AHM	R4,SCBLKS+SCBIC,RSCB,	:DECREMENT SCBIC COUNTER
RSTSE1
	LB	R4,SCBLKS+SCBSTN,RSCB,	:GET RELATIVE STATION NUMBER
	LIS	R1,0			:INITIALIZATION VALUE
	STB	R1,SCBLKS+SCBRXC,RSCB,	:RESET RETRANSMIT COUNTER
	J	RSTSE2,,		:RETURN TO RSTSEC



 IF	(\(SHDPTS))!(\(SHDMPS))

: - - - - - - - - - - - - - - - - - - - -

	CONPATCH(HSXDM1+8,,6)
	J	PA1PTR,,		:JUMP TO PATCH1 AREA
	CONPATCH(PA1PTR,,1C)
	JAL	RLINK5,SXMT,,		:JUMP TO XMT SIO ROUTINE
	J	HXSD11			:FOR NONSKIP/SKIP JUMPS
	JAL	RLINK5,RSTSEC,,		:RESET RETRANSMIT SECTOR
:*	J	HSNDM1,,		:DELETE QUEUE (Ping Chu,5/5/87)
	J	HSNDM3,,		:go into NDM (Ping Chu, 5/5/87)
HXSD11
	J	HSXTMO,,		:TRANSMIT TIMEOUT

: - - - - - - - - - - - - - - - - - - - -
:*	CONPATCH(HSRSNR,,4)		:(Ping Chu, 5/5/87)
:*	J	HSNDM1			:DELETE QUEUE (ping Chu, 5/5/87)
: - - - - - - - - - - - - - - - - - - - -

	CONPATCH(HSTER2,,6)
	J	PA1PTR,,		:JUMP TO PATCH1 AREA
	CONPATCH(PA1PTR,,1C)
	JAL	RLINK5,RSTSEC,,		:RESET RETRANSMIT FLAG
	JAL	RLINK5,FDCLCD,,		:EMPTY QUEUE FOR TRANSMIT CYCLE
	J	HSTE22			:FOR NONSKIP/SKIP JUMPS
:*	J	HSTER9,,		:(Jan. 27, 1988 - JPM)
        J       HSTER2+08,,             :ALREADY EMPTY
HSTE22
:*	J	HSTER2+8,,		:(Jan. 27, 1988 - JPM)
        J       HSTER9,,                :ADVANCE TO NEXT COMMAND

: - - - - - - - - - - - - - - - - - - - -

	CONPATCH(HSCLR4+4,,4)
	J	HSTER3			:SET UP DISPATCHER

: - - - - - - - - - - - - - - - - - - - -

 EI	:(\(SHDPTS))!(\(SHDMPS))




 IF	(\(PHDPTS))!(\(PHDMPS))

: - - - - - - - - - - - - - - - - - - - -

	CONPATCH(HPWNDM+32,,6)
	J	PA1PTR,,		:JUMP TO PATCH1 AREA
	CONPATCH(PA1PTR,,1C)
	JAL	RLINK5,RSTSEC,,		:RESET RETRANSMIT SECTOR
	JAL	RLINK5,FDCLCD,,		:GO GET COMMAND CODE
	J	E11134			:REQUIRED BECAUSE OF SKIP JUMPS
	J	HPWNDM+3A,,		:RETURN TO HPWNDM
E11134
	J	HPWND8,,		:NO DATA PRESENT

: - - - - - - - - - - - - - - - - - - - -

	CONPATCH(HPDISC+10,,6)
	J	PA1PTR,,		:JUMP TO PATCH1 AREA
	CONPATCH(PA1PTR,,026)
HPDIS0
	JAL	RLINK5,RSTSEC,,		:RESET RETRANSMIT SECTOR
	JAL	RLINK5,FDCLCD,,		:ANY COMMANDS IN THE COMMAND LIST?
	J	HPDIS1			:NO
	JAL	R5,CMDNXT,,		:YES, EMPTY THE COMMAND FROM THE LIST
	J	HPDIS0			:CHECK FOR ANOTHER COMMAND
HPDIS1
	JAL	RLINK5,SETDIS,,		:SET CONDITION BIT ARRAY IN SCB
	J	HPDISC+018,,		:RETURN

: - - - - - - - - - - - - - - - - - - - -

	CONPATCH(HPTER0,,6)
	J	PA1PTR,,		:JUMP TO PATCH1 AREA
	CONPATCH(PA1PTR,,1C)
	JAL	RLINK5,RSTSEC,,		:RESET RETRANSMIT SECTOR
	JAL	RLINK5,FDCLCD,,		:GET ALREADY QUEUED CMD FROM B.G.
	J	HPTR00			:NONSKIP JUMP
	J	HPTER7,,		:IC = 0, GO CHECK N(R), V(S)
HPTR00
	J	HPTER0+0C,,		:RETURN

: - - - - - - - - - - - - - - - - - - - -

	CONPATCH(HPCLR9,,6)
	J	PA1PTR,,		:JUMP TO PATCH1 AREA
	CONPATCH(PA1PTR,,2A)
HPCLRA
	JAL	RLINK5,RSTSEC,,		:RESET RETRANSMIT SECTOR
	JAL	RLINK5,FDCLCD,,		:ANY COMMANDS FROM BACK GROUND?
	J	HPCLRB			:NO
	JAL	RLINK5,CMDNXT,,		:YES, EMPTY COMMAND FROM THE LIST
	J	HPCLRA			:CHECK FOR ANOTHER COMMAND
HPCLRB
	LHI	R5,HPCLR9-SEG|A.CODE|
	STH	R5,PSTATE,RL2,		:SAVE STATE FOR DEBUGGING
	J	HPCLR9+0A,,		:RETURN

: - - - - - - - - - - - - - - - - - - - -

	CONPATCH(HPCLR9+10,,4)
	NOP

: - - - - - - - - - - - - - - - - - - - -

	CONPATCH(HPXCLR,,6)
	J	PA1PTR,,		:JUMP TO PATCH1 AREA
	CONPATCH(PA1PTR,,2A)
HPXCLA
	JAL	RLINK5,RSTSEC,,		:RESET RETRANSMIT SECTOR
	JAL	RLINK5,FDCLCD,,		:ANY COMMANDS FROM BACK GROUND?
	J	HPXCLB			:NO
	JAL	RLINK5,CMDNXT,,		:YES, EMPTY COMMAND FROM THE LIST
	J	HPXCLA			:CHECK FOR ANOTHER COMMAND
HPXCLB
	LHI	R5,HPXCLR-SEG|A.CODE|
	STH	R5,PSTATE,RL2,		:SAVE STATE FOR DEBUGGING
	J	HPXCLR+0A,,		:RETURN

: - - - - - - - - - - - - - - - - - - - -

	CONPATCH(HPXCLR+10,,4)
        NOP

: - - - - - - - - - - - - - - - - - - - -

 EI	:(\(PHDPTS))!(\(PHDMPS))


	ENDPATCH( RESET OUTPUT SECTOR DATA PRIOR TO FDCLCD )

	FO	CMDLST			:DONE WITH CMDLST MODULEDEFINITIONS
	FO	CTLDEF			:DONE WITH CTLDEF MODULE DEFINITIONS
	FO	GBLDEF			:DONE WITH GBLDEF MODULE DEFINITIONS
	FO	SDLCDF			:DONE WITH SDLCDF MODULE DEFINITIONS
	FO	SFGPTP			:DONE WITH SFGPTP MODULE


:39)
:
:       Escalation I47565 - Autostrade V1.12 SDLC
:
:       Line with RTSCTS(YES) would have RTS set when there
:       is nothing to send.  DTRUP routine issued CCW which
:       raised RTS regardless of configuration.  We should
:       issue one CCW (DTRCU2) for lines with constant RTS
:       and another (DTRCU1) for lines with RTSCTS(YES) .
:
:       Patch file - (PINGCHU) DTRCMD.P12
:

        LO      SFGPTP
        LO      SIODEF
PATCH(861104,1400,J/MCKIERNAN,DTRUP+0C,,06)
        J     PA1PTR,,                  : Jump to patch area
CONPATCH(PA1PTR,,01E)
        LI    R3,DTRCU2                 : Assume constant RTS
        TBT   R8,RTSCTS,,               : Check RTS/CTS option
        JE    DTRUP1,,                  : No - Raise DTR , RTS
        LI    R3,DTRCU1                 : RTS / CTS handshaking
        J     DTRUP1,,                  : Raise DTR but not RTS
ENDPATCH( Do not raise RTS with DTR unless using constant RTS )
        FO      SFGPTP
        FO      SIODEF

:40)
:
:       Escalation I63441 - INS V1.12 SDLC
:
:       A previous patch (860718,C/SHAW) provided a 'quick fix'
:       to problem with HDLC Micro Engine SIO firmware, which
:       did not determine the data area size correctly.  The
:       'quick fix' was to use a pointer which was past the
:       actual data area, but this leads to problems in the
:       'Connect SIO' SVC since we may use a pointer which
:       is beyond the MAC segment.  Correct this problem by
:       making the 'quick fix' conditional and extending the
:       segment.
:
:       Interfaces using the HDLC Micro Engine should define
:       NEWSIO switch (NEWSIO EQ 1) to include 'quick fix' .
:
:       Patch file - (PINGCHU) INISIO.P12
:

	LO	SIODEF
PATCH(861203,1200,J/MCKIERNAN,SIOTBX,,NLINES*4)
:       Quick fix to 'fake out' HDLC Micro Engine and set the
:       data area size (window) .  Note that this will create
:       an address which is beyond the segment, so we need to
:       'extend' the segment to let the SIO reference it.
:
Q	EQ	0
	RE	NLINES
  IF    \NEWSIO
        WC      SIOX|Q|                 : ONLY a quick fix !
  ELSE
	WC	SIOX|Q|-01
  EI
Q	EQ	Q+1
	ER
  IF    \NEWSIO
:       Now extend the segment by changing the CTA (SEG 0E)
:       Note that this assumes segments 05 or 06 are used. 
:       Do not extend segments which are allready 'full' .
  IF    0FFFF-S5SIZE
CONPATCH(AREAS+014,,04)
S5SIZE  EQ      S5SIZE+02
S5AREA  EQ      AREAS+014
S5AREA  WC      S5SIZE
  ELSE
        REMARK  %  ****  ERROR - SIO segment cannot be extended. %
  EI
  IF    S6SIZE
  IF    0FFFF-S6SIZE
CONPATCH(AREAS+018,,04)
S6SIZE  EQ      S6SIZE+02
S6AREA  EQ      AREAS+018
S6AREA  WC      S6SIZE
  ELSE
        REMARK  %  ****  ERROR - SIO segment cannot be extended. %
  EI
  EI
        REMARK  %  NOTE - HDLC Micro Engine options assembled. %
  EI
ENDPATCH( Set SIO data area size correctly )
        FO      SIODEF


:41)
:	PATCH FILE NUMBER	:   nnn (to be filled in by hqtech)
:	ESCALATION NUMBER	: 48650
:	CUSTOMER		: SCJNET
:
:	PRODUCT CODE		: SDLC
:	(DIR:SYS)FILENAME	: (to be filled in by hqtech)
:	(DIR:SYS)ORIGINAL NAME	: (SDLCDEV:39)/(PINGCHU:37)SIOVFL.P22
:	VERSION			: 01.22
:	REASON (NSR/PIR)	: (to be filled in by hqtech)
:	AUTHOR			: ROLAND KISHMIRIAN
:	DATE			: 12/03/86
:
:	DESCRIPTION OF PROBLEM	:
:
:	AN ASSEMBLY ERROR MESSAGE IS NOT PRINTED WHEN THE DATA BLOCK
:	OF AN SIO LINE CROSSES A SEGMENT BOUNDARY.  AN ASSEMBLY ERROR
:       MESSAGE IS NOT PRINTED IF THE RECEIVE BUFFER ALLOCATION FOR A
:       LINE EXCEEDS THE MAXIMUM.
:
:	DESCRIPTION OF PATCH	:
:
:	AN ASSEMBLY ERROR MESSAGE IS NOW PRINTED WHEN THE DATA BLOCK
:	OF AN SIO LINE CROSSES A SEGMENT BOUNDARY.  AN ASSEMBLY ERROR
:       MESSAGE IS NOW PRINTED IF THE RECEIVE BUFFER ALLOCATION FOR A
:       LINE EXCEEDS THE MAXIMUM.
:
:	SUPERSEDED PATCH FILES	:
:
:	NO PATCHES ARE SUPERSEDED.
:

	LO	SIODEF			:PATCH IS IN SIODEF MODULE
	LO	SDLCDF			:NEED SDLCDF MODULE DEFINITIONS
	LO	GBLDEF			:NEED GBLDEF MODULE DEFINITIONS
PATCH(861210,1600,J/MCKIERNAN,PA0PTR,,0)

Q	EQ	0
	RE	NLINES
  IF	(SIOX|Q|&0F0000)-(SIOT|Q|&0F0000)
	REMARK  % **** ERROR - Data block for line ;
	NUMBER  Q ;
	REMARK   crosses segment ;
	NUMBER  (SIOX|Q|&0F0000)/10000 ;
	REMARK   boundary !%
  EI
  IF    RBFH|Q|-1FFF
        REMARK  % **** ERROR - Receive buffer for line ;
        NUMBER  Q ;
        REMARK   exceeds SIO limits !%%
  EI
Q	EQ	Q+1
	ER

ENDPATCH( Escalation I48650 - Check SIO data area limits )
	FO	SDLCDF			:DONE WITH SDLCDF MODULE DEFINITIONS
	FO	GBLDEF			:DONE WITH GBLDEF MODULE DEFINITIONS
	FO	SIODEF			:DONE WITH SIODEF MODULE


:42)
:
:       Escalation I78176 - INSC V1.12 SDLC
:
:       When using 'Extended DDT' to display ring content,
:       display of old data would sometimes attempt output
:       of a Port 00 message, but the message type would be
:       out of range.  User would see data from some other
:       table.  Correct XDRISM routine to check a Port 00
:       message for a valid type, and skip over it if it
:       is out of range.  Display the content, but use a
:       new literal to indicate a problem.
:
:       Patch file - (PINGCHU) XDDTDR.P12
:

        LO      STATUS
PATCH(870117,1600,J/MCKIERNAN,PA0PTR,,0A)
INVP0M  SC      /??? 0000 /             : Literal for output
CONPATCH(XDR0C0+04,,06)
        J       PA1PTR,,                : Jump to patch area
CONPATCH(PA1PTR,,022)
        LA      R4,,R2,R2               : Resume original logic
        CHI     R2,10                   : Check message type for
        JLE     XDR0C0+0A,,             : a valid range (< 11x)
        LR      R5,R2                   : Set up to print type
        SVC     0B,INVP0M,,             : Output the literal
        JAL     R11,XDPUT,,             : Output the type
        AIS     R1,2                    : Move ring index
        JR      R13                     : Return to XDRISM
ENDPATCH( Display '???' if Port 0 message out of range )
        FO      STATUS


:43)
:
:       No escalation - Just found a problem
:
:       When using Extended DDT 'SCOPE' command, a user may
:       receive display output for multiple lines.  If some
:       previous user was monitoring a line and the circuit
:       was lost, the trace table was not reset.  If some
:       other user attempted to monitor another line, the
:       display output would be for multiple lines.
:
:       Patch file - (PINGCHU) XDDTSC.P12
:

        LO      SFGRCV
        LO      STATUS
PATCH(870202,1400,J/MCKIERNAN,DSC1+0E,,06)
        J       PA1PTR,,                : Jump to patch area
CONPATCH(PA1PTR,,014)
        LIS     R1,0                    : Clear trace bits
        ST      R1,PTRBIT,,             : 
        SBT     R8,PTRBIT,,             : Set bit for line
        J       DSC1+014,,              : Return
ENDPATCH( Reset all trace bits before starting new trace )
        FO      SFGRCV
        FO      STATUS


:44)
:
:       Escalation I90768 - Hongkong Bank V1.12 SDLC
:
:       Interface crashed (Type 14) in receive routines
:       while releasing buffers allocated to a frame it
:       had just received.  Interface ran out of buffers
:       and attempted to release those it had allocated.
:       Routine which copies SIO RCV buffers to buffers
:       puts data in chaining bytes, but the subroutine
:       which fetches the next buffer does not reset it
:       if the fetch fails.  This creates a 'bad' chain
:       which eventually leads to the crash.
:
:       Patch file - (PINGCHU) GETNBB.P12
:

        LO      SFGRCV
        LO      BBUFER
PATCH(870211,1000,J/MCKIERNAN,GETNB1,,06)
        J       PA1PTR,,                : Jump to patch area
CONPATCH(PA1PTR,,010)
        LIS     R4,0                   : End chain with ZERO in
        BBSTOR  R4,BBUFER+BBFLSZ-BBFPSZ,R10,    : CHAIN1 field
        L       R6,RETSA1,R9,R9        : Resume original logic
        JR      R6                     :
ENDPATCH( Esc. I90768 - End buffer chaining if GBB fails )
        FO      SFGRCV
        FO      BBUFER


:45)
:
:       Escalation I03697 - Autostrade V1.12 SDLC
:
:       Interface crashed (Type 14) due to invalid INPUT ring
:       indexes (CEI > NFMI) .  The interface had received an
:       IIX framed message in multiple ISIS messages.  Somehow
:       the ISIS message lengths were incorrect (too high) and
:       the interface prepared to discard the extra data.  The
:       FLSHRC routine moved the ring index too far since the
:       count had not been decremented.  ELIR then moved the
:       index to the next 'quad byte' value.  The next call
:       to INPUT fetched a port out of range, then crashed.
:
:       Correct FLSHRC to decrement RLEN (R2) before skipping
:       over data which may not follow.  Also correct problem
:       of ERRSET using 'AHM' to increment the counter which
:       is a full word area.
:
:       Patch file - (PINGCHU) ERRSET.P12
:

        LO      CTLDEF
        LO      INPUT
PATCH(870511,1300,J/MCKIERNAN,ERRSET+08,,06)
        AM      R0,LSDTAB,R6,R4         : Use AM for WS counter
CONPATCH(INPD3,,06)
        J       PA1PTR,,                : Jump to patch area
CONPATCH(PA1PTR,,0E)
        JAL     R4,GETCH,,              : Resume previous logic
        SIS     R2,1                    : Decrement msg. length
        J       INPD3+06,,              : Return
CONPATCH(INPD4,,02)
        LR      R2,R2                   : Check for message end
CONPATCH(INPDQ5+06,,04)
        SIS     R2,1                    : Use the same logic as
        AIS     R8,1                    : found in INPD routine
ENDPATCH( Correct byte count before flushing message )
        FO      CTLDEF
        FO      INPUT


:
:       Escalation I03697 - Autostrade V1.12 SDLC
:
:       Interface crashed (Type 14) due to invalid INPUT ring
:       indexes (CEI > NFMI) .  The interface had received a
:       BLACK BALL (Type A4) message and prepared to discard
:       the remainder of the message, but the length was not
:       set (RLEN was the message type) .
:
:       Patch file - (PINGCHU) BLACKB.P12
:

        LO      CTLDEF
        LO      FRNTND
        LO      INPUT
PATCH(870410,1500,J/MCKIERNAN,CBLCKB+01C,,06)
        J       PA1PTR,,                : Jump to patch area
CONPATCH(PA1PTR,,010)
        LHL     R8,DCBLKS+DCBICC,R12,   : Resume original logic
        LIS     R4,LSDBBL               : 
        LIS     R2,0                    : Set remaining length
        J       ERRSET,,                : 
ENDPATCH( Correct byte count before flushing message )
        FO      CTLDEF
        FO      FRNTND
        FO      INPUT


:46)
:
:       Escalation I02442 - Autostrade V1.12 SDLC
:
:       SIO generated OVERRUN interrupt which disables the
:       receive logic.  Interface could not receive after
:       the interrupt.
:
:       Modify HSEC logic to check for SIO interrupts.  If an
:       OVERRUN (Type 06) is seen, reinitialize the SIO port
:       and record the event in the Operations Monitor Log
:       table.  If a CCW ERROR (Type 02) or I/O CMD ERROR
:       (Type 08) was seen, crash (Type FE) .
:
:       Patch file - (PINGCHU) SIOINT.P12
:
:       ** Revised Jan. 27, 1988 for RESTART after crash **
:
:       Previous logic assumed the slot would HALT and be reloaded
:       after a crash.  If the slot simply restarted, the interrupt
:       indication is not reset and the slot will crash repeatedly.
:

LGSIOI  EQ      17                      : Define event type

        LO      GBLDEF
        LO      CTLDEF
        LO      SIODEF
        LO      STCTLM
        LO      MONITR
PATCH(870324,1030,J/MCKIERNAN,PA1PTR,,03A)
LGTX15  SC      /SIO Interrupt/
MLOGTP  HC      LGTX00-MLGTXP
        HC      LGTX01-MLGTXP
        HC      LGTX02-MLGTXP
        HC      LGTX03-MLGTXP
        HC      LGTX04-MLGTXP
        HC      LGTX05-MLGTXP
        HC      LGTX06-MLGTXP
        HC      LGTX07-MLGTXP
        HC      LGTX08-MLGTXP
        HC      LGTX09-MLGTXP
        HC      LGTX0A-MLGTXP
        HC      LGTX0B-MLGTXP
        HC      LGTX0C-MLGTXP
        HC      LGTX0D-MLGTXP
        HC      LGTX0E-MLGTXP
        HC      LGTX0F-MLGTXP
        HC      LGTX10-MLGTXP
        HC      LGTX11-MLGTXP
        HC      LGTX12-MLGTXP
        HC      LGTX13-MLGTXP
        HC      LGTX14-MLGTXP
        HC      LGTX15-MLGTXP
CONPATCH(HSECX1,,06)
        J       PA1PTR,,                : Jump to patch area
CONPATCH(PA1PTR,,08A)
CHKSIO  JAL     R6,CKINT,,              : Check for interrupts
        JAL     R6,CKDSR,,              : Resume previous logic
        JAL     R6,CHPTP,,              : 
        J       HSECX1+08,,             : 

CKINT   L       R2,SIOTBL,R9,R9         :
        LB      R0,08,R2                : Get interrupt status
        JER     R6                      : Return if zero (OK)

        SRLS    R0,4                    : 
        NHI     R0,0F                   : 
        CHI     R0,06                   : Check for OVERRUN
        JE      RSTSIO                  : Reset port if so

        JAL     R10,CRASH,,             : Otherwise crash
        BC      0,0,0,0FE               : with 'Type FE'

RSTSIO  LIS     R1,1                    : Set 'LINE' message
        LHI     R0,LGINOP               : Set 'Inoperable'
        JAL     R5,SETLOG,,             : Log this event

        LIS     R1,1                    : Set 'LINE' message
        LHI     R0,LGSIOI               : Set 'SIO Interrupt'
        JAL     R5,SETLOG,,             : Log this event

        AHM     R1,0E,R2                : Increment the counter
        
        LHI     R0,00                   : Reset interrupt status
        STH     R0,08,R2                : 
        JAL     R5,IZSIO,,              : Reset the SIO port

        LHL     R10,LCBPTR,R9,          : Get the LCB index
        LHL     R11,CFGPTR,R9,          : Get station count 
        LB      R11,CFGTAB+LNMSTN,R11,  : 
        SIS     R11,1                   : 

SETCLR  SBT     R11,LCBTAB+BPCLR,R10,   : Set 'CLR' state
        SIS     R11,1                   : Loop to set all
        JGE     SETCLR                  : 

        J       CHKSIO+06               : 
CONPATCH(INISIO+058,,06)
        J       PA1PTR,,                : Jump to patch area
CONPATCH(PA1PTR,,010)
        STH     R0,08,R2                : Reset interrupt indication
        STH     R0,RINDEX,R8,R8         : Resume previous logic
        J       INISIO+05E,,            : Return
CONPATCH(MERLG2+070,,0C)
        LB      R5,LOGTBL+LOGTYP,R11,   : (Remove patch 34)
        J       PA1PTR,,                : Jump to patch area
CONPATCH(PA1PTR,,018)
        SIS     R5,02                   : Subtract unused types
        JL      MERLG3+012,,            : Skip them if not used

        LHL     R3,MLOGTP,R5,R5         : Use new pointer table
        J       MERLG2+07C,,            : Return
ENDPATCH( Reset SIO port`, line state if OVERRUN interrupt occurs )
        FO      GBLDEF
        FO      CTLDEF
        FO      SIODEF
        FO      STCTLM
        FO      MONITR


:47)
:
:       No escalation - Problem found in testing
:
:       Network circuit building protocol specifies that all
:       login characters should have the high order bit set.
:       Interface attempted to 'gouge' the circuit, but did
:       not set the high order bit in doing so.  Net effect
:       is that the attempt is ignored.
:
:       Patch file - (PINGCHU) CGOUGE.P12
:

        LO      CTLDEF
        LO      PVCHDL
PATCH(870415,1630,J/MCKIERNAN,MSGB20-0E,,06)
        J       PA1PTR,,                : Jump to patch area
CONPATCH(PA1PTR,,018)
        LHI     R0,84                   : Assume level 04

        LB      R6,CFGTAB+LNSPED,R1,    : Check line speed
        JN      SETLVL                  : Use level 04

        LHI     R0,83                   : Set level 03
SETLVL  J       MSGB21,,                : Return
ENDPATCH( Set high order bit of all login characters )
        FO      CTLDEF
        FO      PVCHDL


:
:       No escalation - Problem found in testing
:
:       Interface which receives IIX capable circuit sends the
:       remote interface a SELECT IIX DIALECT Command which has
:       a length which is incorrect.  Correct the definition.
:
:       Patch file - (PINGCHU) SIDCMD.P12
:

        LO      INPUT
PATCH(870701,1000,J/MCKIERNAN,DIALSL-02,,02)
        HC      4                       : Message length
ENDPATCH( Correct length for SELECT DIALECT command )
        FO      INPUT



:48)
:
:	ESCALATION NUMBER	: 11710
:	CUSTOMER		: HFC
:	PRODUCT AND VERSION	: SDLC 01.12
:	PATCH NAME		: (SDLCDEV:39)/(PINGCHU:37)XDMISS.P12
:	AUTHOR			: ROLAND KISHMIRIAN
:	DATE			: 04/13/87
:
:	DESCRIPTION OF PROBLEM	:
:
:	THE RESPONSE TIME IS TWICE AS LONG AS NATIVE MODE.
:
:	DESCRIPTION OF PATCH	:
:
:	THIS PATCH ELIMINATES AN EXTRA DISMISS CYCLE AT THE PRIMARY/SECONDARY
:	STATION PROTOCOL DISPATCHER (PSDISP/SSDISP).
:
:	SUPERSEDED PATCH FILES	:
:
:	NO PATCHES ARE SUPERSEDED.
:

	LO	SFGPTP			:PATCH IS IN SFGPTP MODULE
	LO	CTLDEF			:NEED CTLDEF MODULE DEFINITIONS
	LO	GBLDEF			:NEED GBLDEF MODULE DEFINITIONS
	LO	MAIN			:NEED MAIN   MODULE DEFINITIONS
	LO	SDLCDF			:NEED SDLCDF MODULE DEFINITIONS
	LO	SDLCFX			:NEED SDLCFX MODULE DEFINITIONS
	LO	SFGRCV			:NEED SFGRCV MODULE DEFINITIONS
	LO	SFGXMT			:NEED SFGXMT MODULE DEFINITIONS

 IF	(\(PHDPTS))!(\(PHDMPS))
	PATCH(870413,0700,R/KISHMIRIAN,PSDISP+14,,4)
	NOP				:DO NOT CALL PDMISS UNCONDITIONALLY
	ENDPATCH(AVOID EXTRA DISMISS AT PRIMARY STATION PROTOCOL DISPATCHER)
 EI

:       Do not remove SECONDARY DISMISS .  FG enters loop in NDM
:       if DISMISS is not used.  We should probably fix that case
:       also and improve the SECONDARY , but I leave that to NTD .
:       J/MCKIERNAN - Apr. 15

: IF	(\(SHDPTS))!(\(SHDMPS))
:	PATCH(870413,0700,R/KISHMIRIAN,SSDISP+14,,4)
:	NOP				:DO NOT CALL PDMISS UNCONDITIONALLY
:	ENDPATCH(AVOID EXTRA DISMISS AT SECONDARY STATION PROTOCOL DISPATCHER)
: EI

	FO	CTLDEF			:DONE WITH CTLDEF MODULE DEFINITIONS
	FO	GBLDEF			:DONE WITH GBLDEF MODULE DEFINITIONS
	FO	SDLCDF			:DONE WITH SDLCDF MODULE DEFINITIONS
	FO	SDLCFX			:DONE WITH SDLCFX MODULE DEFINITIONS
	FO	SFGRCV			:DONE WITH SFGRCV MODULE DEFINITIONS
	FO	SFGXMT			:DONE WITH SFGXMT MODULE DEFINITIONS
	FO	SFGPTP			:DONE WITH SFGPTP MODULE

:49)
:
:       Escalation I03517 - Autostrade V1.12 SDLC
:
:       Type 14 crash at MERLG2+082 .  SDLC Operations Monitor
:       user enters 'LOG N' (N is numeric) to display the last
:       'N' log entries.  P1LGTB uses offset of 'oldest' entry
:       to determine which entries to display.  If the offset
:       of the oldest entry was equal to 'N' , it calculates
:       the starting entry offset incorrectly.
:
:       Patch file - (PINGCHU) DSPLOG.P12
:

        LO      MONITR
PATCH(871026,1600,J/MCKIERNAN,P1LGTB+050,,04)
        JL      P1LGT6                  : Skip if 'N' in range
ENDPATCH( Correct problem in Operations Monitor LOG display )
        FO      MONITR



:50)
:
:	ESCALATION NUMBER	: 57736
:	TICKET NUMBER		: 30769
:	CUSTOMER		: EPA
:	PRODUCT AND VERSION	: SDLC 01.12
:	PATCH NAME		: (SDLCDEV:39)/(PINGCHU:37)FXRSHT.P12
:
:	DESCRIPTION OF PROBLEM	:
:	THE RSHUT COMMAND DOES NOT WORK.
:
:	DESCRIPTION OF PATCH	:
:	IF A STATION TO BE SHUT IS ALREADY SHUT, OR IF A STATION TO HAVE
:	THE SHUT REMOVED IS ALREADY IN THE RSHUT STATE, THEN THE CIRCUIT
:	STATE (LSDCST) FOR THE LSDTAB TABLE WILL NOT BE UPDATED.
:
:	SUPERSEDED PATCH FILES	:
:	NO PATCH FILE IS SUPERSEDED.
:

	LO	STCTLM		:PATCH IS IN STCTLM MODULE
	LO	CTLDEF		:NEED CTLDEF MODULE DEFINITIONS
	LO	GBLDEF		:NEED GBLDEF MODULE DEFINITIONS

	PATCH(870729,1600,R/KISHMIRIAN,TPVCL6+10,,04)
	JN	TPVCL9+06	:NO CHANGE, DO NOT UPDATE CIRCUIT STATE
	CONPATCH(TPVCL7+06,,04)
	JE	TPVCL9+06	:NO CHANGE, DO NOT UPDATE CIRCUIT STATE
	ENDPATCH(Update LSDCST only if SHUT/RSHUT state changes)

	FO	CTLDEF		:DONE WITH CTLDEF MODULE DEFINITIONS
	FO	GBLDEF		:DONE WITH GBLDEF MODULE DEFINITIONS
	FO	STCTLM		:DONE WITH STCTLM MODULE

   @ x