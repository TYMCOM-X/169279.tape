:---------------------------------------------------------------------
: Patch name: SLRMSG.TST                    Product and Version:CMT7:04
:     Author: ANIL THAKUR                          Organization: STS
:   Customer: FORD                                 Date Written: 11/28/90
: Description of Problem: AT SLOR WE ARE OPENNING BINARY BIT ARRAY TO
:			  RECORD THE TYPE OF MSG TYPE (DATA OR CRTL) ON
:			  EVERY ACTIVE PORT.THIS ARRAY IS USED AT DSPED
:			  PRESLR IS A SMALL ROUTINE WHICH CHECKS WHETHER
:			  R2 HAS RIGHT MSG TYPE FOR THE RECORD TO BE OPENED
:			  BY SLOR.
:---------------------------------------------------------------------
	LO	TP
	LO	RING
	LO	FRNTND
PATCH(112890,1000,A/THAKUR,SLOR,,6)
	J	PA1PTR,,
CONPATCH(PA1PTR,,20)
	TBT	R2,DATAM,,		:CHECK CHAR CODE IF DATA OR CRTL MSG
	JN	GREAT,,			:IF DATA GO TO GREAT
	SBT	R1,BINARY,,		:RECORD THIS IN BINARY BIT ARRAY
	J	NOPROB,,
GREAT	RBT	R1,BINARY,,		:CRTL MSG RECORD IT IN BINARY ARRAY
NOPROB	LHL	R15,NFMI+ORING,,	:FROM SOURCE
	SHI	R15,ORSIZE
	J	SLOR1,,		
CONPATCH(ELODR2,,6)
	J	PA1PTR,,
CONPATCH(PA1PTR,,20)
	SIS	R0,3			:FROM SOURCE
	JN	CONT
	LIS	R15,0			:INITIALIZE R15 
	JR	R4
CONT	STB	R0,2+ORING+RING+ORSIZE,R1,
	J	ELOR,,
CONPATCH(PA1PTR,,1C)
PRESLR	LR	R2,R0			:R2= MSG TYPE R0 =ISIS MSG LENGTH
	SIS	R2,3			:TAKE OUT HEADER
	JLE	GONE
	J	SLOR,,			:CONTINUE WITH SLOR
GONE	LHI	R0,9D
	J	PRESLR			:CHECK THE CONDITION AGAIN
	IF	SCSSW
CONPATCH(BUFA25+16,,6)
	J	PA1PTR,,
CONPATCH(PA1PTR,,20)
	JAL	R4,PRESLR,,	
	LR	R10,R1
	SLLS	R10,1
	L	R13,DSTCKP,R12
	J	BUFA25+22,,
	ELSE
CONPATCH(BUFA25+0C,,6)
	J	PA1PTR,,
CONPATCH(PA1PTR,,20)
	JAL	R4,PRESLR,,		:GO TO PRESLOR TO CHECK R2
	LR	R10,R1			:FROM SOURCE
	SLLS	R10,1			:FROM SOURCE
	L	R13,DSTCKP,R12		:FROM SOURCE
	J	BUFA25+18,,		:BACK TO SOURCE
	EI
:
:THE FOLLOWING CODE WAS WRITTEN TO OVERCOME THE WEIRD VALUE
:(7FFF) WHICH WAS STORED IN SOME ROUTINE IN DXLIM CAUSING
:WATCH FROG TIMEOUT ERROR.
:
CONPATCH(SLOR1,,6)
	J	PA1PTR,,
CONPATCH(PA1PTR,,28)
CHK	CHI	R0,0A0			:CHECK ISIS MSG LENGTH
	JG	BLOWN			:ITS NOT VALID
	LCS	R3,4			:NO PROB! FROM SOURCE
	NH	R3,CEI+ORING,,		:FROM SOURCE
	J	SLOR1+08,,
BLOWN	LHI	R0,9D			:INVALID MSG LENGTH. RECTIFY IT
	ST	R0,DXLIM,R12		:9D IS MAX XMIT POSSIBLE
	ST	R0,TXLIM,R12
	AIS	R0,3			:ROOM FOR HEADER
	J	CHK
ENDPATCH(INITIALIZE R15 IF MSG TYPE IS ZERO)
:----------------------------------------------------------------------
: Added on 08/09/91 for morgan. In optimizer routine we are closing
: the record without checking whether it is data or crtl msg.
:----------------------------------------------------------------------
	LO	OPTIM
	LO	TPF
PATCH(080991,1100,A/THAKUR,OPT030+54,,6)
	J	PA1PTR,,
CONPATCH(PA1PTR,,30)
	ST	R13,TSTCKP,R11,
	ST	R1,COPTR1,R11,	:FROM SOURCE
	LHL	R1,DPORT,R12,
	JAL	R4,ELODR,,	:TEST KIND OF RECORD
	J	SCHEX1,,	:BACK TO SOURCE
ENDPATCH(AT OPTIMIZER CHECK THE KIND OF RECORD BEEING CLOSED)
	FO	TPF
	FO	OPTIM
:---------------------------------------------------------------------
: Patch name:ERRMSG.TST                     Product and Version:cmt07:04
:     Author:ANIL THAKUR                           Organization:MMGMT
:   Customer: CAMP SYSTEMS                         Date Written:07/25/91
: Escalation Number: 369255     
: Description of Problem:  The cmt slot crashes when host is down. This
:	                   happens because when we try to send out the error
:		           message we do not open a record for it and at
:			   dsped we try to close it resulting in the crash.
:			   At rlb612 flag gets activated which is checked 
:			   at dsped and record is not closed.
:---------------------------------------------------------------------
	lo	logon
	lo	iix
	lo	dsp
	lo 	tm
	lo	msgs	
	lo 	prt
	lo	frntnd
patch(072491,1000,a/thakur,rlb612,,6)
	j	pa1ptr,,
conpatch(pa1ptr,,20)
	lis	r0,1
	stb	r0,erfl,,	:activate the flag
	lis	r0,d.stor	:from source
	tbt	r0,dbits,r12,	:from source
	je	rlb615,,	:from source
	j	rlb612+0a,,
conpatch(pa0ptr,,8)
erfl	bs	1
fb1	bs	1
fb2	bs	1
fb3	bs	1
endpatch(activate the flag for errmsg)
:---------------------------------------------------------------------
: PATCH NAME:  bpisis.tst                     PRODUCT AND VERSION:  CMTI  7.04
:     Author:  JEFF MORDEN                            Organization:  STS
:   Customer:  INFOLINK (modified for FORD)           Date Written:  4/5/90
: Description of Problem:  #
:       A STRANGE ASSORTMENT OF PROBLEMS HAVE BEEN OCCURING WITH A COMMON
:       FEATURE THAT THE BUFFERLETS ARE HOLDING A VERY LARGE QUANTITY
:       OF DATA WHICH OFTEN CONSISTS OF MORE THAN ONE 3270 COMMAND
:       FOR A PRINTER.  IN GENERAL, THE BACKPRESSURE MECHANISM SHOULD
:       HAVE PREVENTED THIS VOLUME OF DATA FROM ACCUMULATING EXCEPT
:       IF USING ISIS VERSION 11 OR ABOVE WHICH DOESN'T SUPPORT THE
:       FRISIS BIT ARRAY.  INSTEAD IT IS NECESSARY TO ACTUALLY SEND
:       THE ISIS BACKPRESSURE MESSAGES.  HOWEVER, EVEN IF NOT USING
:       THIS VERSION OF ISIS IT COULD BE POSSIBLE WITH SHORT PRINTER
:       COMMANDS AND AN SNA HIF LOCATED ON A DIFFERENT NODE THAN THE
:       CMT TO CAUSE MULTIPLE COMPLETE MESSAGES IN THE BUFFERLETS.
:       DRAINING AND PROCESSING THESE MESSAGES HAS RESULTED IN SOME
:       STRANGE LOOPS, CRASHES, AND IMPROPER PROCESS FLOW CONTROL.
:       THIS PATCH INSURES THAT BACKPRESSURE IS APPLIED IMMEDIATELY 
:       UPON RECEIVING AN ETX FOR A DEVICE SO THAT ISIS CAN NOT CONTINUE
:       TO DELIVER ANY MORE DATA FOR THAT PORT THAN IS ALREADY IN THE
:       RING ON THIS CYCLE OF THE EXEC.
:--------------------------------------------------------------------------
:            Modification was done on 11/28/90 by Anil. Before closing
:	the record we make sure that at DSPED whether we are closing
:	the right record. BINARY is a bit array which records at SLOR
:	the kind of record beeing opened by dport. At DSPED we check
:	BINARY bit array to decide whether to call ELOR (for crtl data)
: 	or to call ELODR (for data msg)
:---------------------------------------------------------------------------
:	Modification was done on 07/24/91 by anil. the cmt slot crashes
:	when host is down .a flag gets activated when the code goes through
:	rlb612 and at dsped we check the flag before closing the record
:---------------------------------------------------------------------
        LO      DSP
	LO 	FRNTND
PATCH(040590,1100,J/MORDEN,DSPED,,6)
        J       PA1PTR,,
CONPATCH(PA1PTR,,90)
        PUSH(R0)
        PUSH(R1)
        PUSH(R2)
        PUSH(R4)
	LB	R0,ERFL,,		:CHECK THE FLAG FOR ERR MSG 07/24/91
	JG	NEXX,,			:IF SET DON'T DO ANYTHING   07/24/91
        LHL     R1,DPORT,R12,           :GET PORT NUMBER
	JE	NEXX
        ST      R15,SAVE15,,
        LR      R15,R15
        JGEFS   .+8
        JAL     R4,TEST,,		:11/28/90 crtl or data msg ?
        LHL     R1,DPORT,R12,
        LIS     R0,3                    :SET NUMBER OF CHARACTERS IN MESSAGE
        LHI     R2,0A0                  :SET BACKPRESSURE MESSAGE
        RBT     R1,FRISIS,,             :FOR ISIS VERSIONS LESS THAN 11.01
        JAL     R4,SLOR,,
        JAL     R4,ELOR,,               :MESSAGE SENT VERSIONS >= 11.01
        L       R4,SAVE15,,
        JGE    NEXX,,
        LHL     R1,DPORT,R12,
        LH      R0,DXLIM,R12,
	LR	R2,R0			:11/28/90  get char code for slor
	SIS	R2,3			:11/28/90  
        JAL     R4,SLOR,,
NEXX    lis	r0,0
	stb	r0,erfl,,
	POP(R4)
        POP(R2)
        POP(R1)
        POP(R0)
        LIS     R7,P.PRNT               :FROM SOURCE
        TBT     R7,DIABIT,R12,
        J       DSPED+6,,
TEST	RBT	R1,BINARY,,		:11/28/90  crtl or data record?
	JG	ELOR,,			:11/28/90  crtl msg, return on R4
	J	ELODR,,			:11/28/90  data msg, return on R4	
CONPATCH(PA0PTR,,(MAXPRT/10+1)*2+8)
BINARY	RE	(MAXPRT/10+1)
	HC	0
	ER
SAVE15  WS      1
CONPATCH(IZFRNT,,6)
        J       PA1PTR,,
CONPATCH(PA1PTR,,14)
        ST      R0,RETPTR,,
        LIS     R0,0
        ST      R0,SAVE15,,
        J       IZFRNT+6,,
:
:NOW RELEASE BACKPRESSURE IF START PRINT BIT IN PRINT COMMAND NOT SET
:
        LO      PRT
        IF      \PRTSW
CONPATCH(PSCH10-06,,6)
        J       PA1PTR,,
CONPATCH(PA1PTR,,84)
        JN      PSCH10,,
	PUSH(R0)
        PUSH(R1)
        PUSH(R2)
        PUSH(R4)
        LHL	R1,DPORT,R12,
	JLE	FWD
	ST	R15,SAVE15,,
	LR	R15,R15
        JGEFS   .+8
        JAL     R4,ELODR,,               :02/20/91
        LHL     R1,DPORT,R12,           :GET PORT NUMBER
        LIS     R0,3			:SET NO OF CHARACTERS IN MESSAGE
        LHI     R2,0A1                  :RELEASE BACKPRESSURE MESSAGE
        SBT     R1,FRISIS,,		
        JAL     R4,SLOR,,
        JAL     R4,ELOR,,
        L       R4,SAVE15,,
        JGE   FWD
        LHL     R1,DPORT,R12,
        LH      R0,DXLIM,R12,
        LR	R2,R0			:02/20/91
	SIS	R2,3			:02/20/91
	JAL     R4,SLOR,,
FWD     POP(R4)
        POP(R2)
        POP(R1)
	POP(R0)
        J       FSHIIX,,                :BACK TO SOURCE
        EI              :END IF 
        FO      PRT
:
:NEDD TO MAKE ROUTINE THAT INSURES THAT R15 IS 0 UPON ENTERING INPUT.  THIS IS
:SO THE ABOVE PATCHES CAN USE R15 AS A WAY OF IDENTIFYING IF AN OUTPUT RECORD
:HAS BEEN STARTED AND IS IN PROGRESS.  AT LEAST ONE PROCESS SOMEWHERE IS USING
:R15 FOR ITS OWN PURPOSES WITHOUT PUSHING AND POPPING AND THIS INTRODUCES A
:NEGATIVE VALUE THAT IS NOT RELATED TO THE ORING INDEX AND TRICKS THE ABOVE
:PATCHES.
:
CONPATCH(EXEC+8,,6)
        J       PA1PTR,,
CONPATCH(PA1PTR,,14)
        JAL     R5,BUFACT,,
        JAL     R0,INPUT,,              :NOW GO DO INPUT WHICH HAS THE ABOVE
        J       EXEC+10,,               :PATCHES AS PART OF ITS PROCESSES

CONPATCH(DISFAST,,6)
	J	PA1PTR,,
CONPATCH(PA1PTR,,82)
	LHI	R1,0			:INITIALIZE COUNTER FOR PORTS
BACKN   AIS     R1,1                    :INCREMENT PORT NUMBER AND START WITH 1
        CLI     R1,NPORT                :ALL PORTS CHECKED???
        JE      XOUTN                    :YES -- LEAVE ROUTINE
        TBT     R1,ACP                  :IS IT AN ACTIVE PORT
        JN      ANLYSN                   :YES -- SEE IF MESSAGES NEED SENDING
        SBT     R1,CGISIS,,        	:NO BACKPRESSURE ON INACTIVE PORT
        J       BACKN
	
XOUTN	SVC	FASTD
	J	EXEC,,			:BACK TO BEG. OF EXEC LOOP
     
ANLYSN  TBT     R1,FRISIS               :START HERE IF LAST PASS ON PORT
	JE	ISA0N			:YES, COMPARE WITH CGISIS
	SBT 	R1,CGISIS,,		:SET CGISIS
	JE	SNDBPN			:IF SET , SEND BP
	J	BACKN			:ELSE GET NEXT PORT

ISA0N	RBT	R1,CGISIS,,		:RESET CGISIS
	JE	BACKN			:IF RESET, GET NEXT PORT
	J	RBPN			:RELEASE BP

SNDBPN	LHI	R2,0A1			:RELEASE BACK PRESSURE MESSAGE
	LIS	R0,3			:SIZE OF MESSAGE
	JAL	R4,SLOR,,		:PUT MSG IN RING
	JAL	R4,ELOR,,		:FINISH	IT UP
	J	BACKN

RBPN	LHI	R2,0A0			:SET  BP MSG
	LIS	R0,3
	JAL	R4,SLOR,,
	JAL	R4,ELOR,,
	J	BACKN
CONPATCH(PA0PTR,,NGRP*2+2)
CGISIS	HS	NGRP
CONPATCH(IZIN1,,6)
	J	PA1PTR,,
CONPATCH(PA1PTR,,1E)
	RBT	RPORT,ACP		:SET PORT NOT ACTIVE
	SBT	RPORT,TOISIS		:SET BP OFF
	SBT	RPORT,CGISIS,,		: INITIALIZE ALONG WITH FRISIS
	J	IZIN1+8,,	
ENDPATCH( SET BP OR RELEASE WHEN REQUIRED TO AVOID FLOODING OF BUFFERLETS)
	FO	FRNTND
	FO	DSP
	LO	FRNTND
:this initializes the binary bit array created at slor
PATCH(013191,1000,A/THAKUR,IZFRNT+22,,6)
	J	PA1PTR,,
CONPATCH(PA1PTR,,20) 
	LIS	R0,4			:FROM SOURCE
	STH	R0,USROFF
	LIS	R0,0			:USED TO RESET BINART BITS
	LHI	RPORT,(MAXPRT/10+1)-1
AGAIN	STH	R0,BINARY,RPORT,	:RESET THE BINARY RPORT
	SIS	RPORT,2			:DECREMENT 
	LHI	RPORT,NPORT-1		:FROM SOURCE (SET UP A LOOP)
	J	IZIN1,,			:JUMP BACK TO SOURCE
ENDPATCH(INITIALIZE THE BINARY BIT ARRAY)
    