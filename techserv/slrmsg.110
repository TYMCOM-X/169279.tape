:---------------------------------------------------------------------
: Patch name: SLRMSG.1103                    Product and Version:CMT11:03
:     Author: ANIL THAKUR                          Organization: STS
:   Customer: FORD                                 Date Written: 11/28/90
: Description of Problem: AT SLOR WE ARE OPENNING BINARY BIT ARRAY TO
:			  RECORD THE TYPE OF MSG TYPE (DATA OR CRTL) ON
:			  EVERY ACTIVE PORT.THIS ARRAY IS USED AT DSPED
:			  PRESLR IS A SMALL ROUTINE WHICH CHECKS WHETHER
:			  R2 HAS RIGHT MSG TYPE FOR THE RECORD TO BE OPENED
:			  BY SLOR.
:---------------------------------------------------------------------
	LO	TP
	LO	RING
	LO	FRNTND
PATCH(112890,1000,A/THAKUR,SLOR,,6)
	J	PA1PTR,,
CONPATCH(PA1PTR,,30)
	TBT	R2,DATAM,,		:CHECK CHAR CODE IF DATA OR CRTL MSG
	JNFS	GREAT			:IF DATA GO TO GREAT
	SBT	R1,BINARY,,		:RECORD THIS IN BINARY BIT ARRAY
	JFS	NOPROB
GREAT	RBT	R1,BINARY,,		:CRTL MSG RECORD IT IN BINARY ARRAY
NOPROB	LHL	R15,NFMI+ORING,,	:FROM SOURCE
	SHI	R15,ORSIZE
	J	SLOR1,,		
CONPATCH(ELODR2,,6)
	J	PA1PTR,,
CONPATCH(PA1PTR,,30)
	SIS	R0,3			:FROM SOURCE
	JN	CCCONT,,
	JR	R4
CCCONT	STB	R0,2+ORING+RING+ORSIZE,R1,
	J	ELOR,,
CONPATCH(PA1PTR,,1C)
PRESLR	LR	R2,R0			:R2= MSG TYPE R0 =ISIS MSG LENGTH
	SIS	R2,3			:TAKE OUT HEADER
	JLE	GONE,,
	J	SLOR,,			:CONTINUE WITH SLOR
GONE	LHI	R0,9D
	J	PRESLR			:CHECK THE CONDITION AGAIN
CONPATCH(BUFA27,,6)
	J	PA1PTR,,
CONPATCH(PA1PTR,,30)
	JAL	R4,PRESLR,,		:GO TO PRESLOR TO CHECK R2
	LR	R10,R1			:FROM SOURCE
	SLLS	R10,1			:FROM SOURCE
	L	R13,DSTCKP,R12,		:FROM SOURCE
	J	BUFA27+0e,,		:BACK TO SOURCE
:
:THE FOLLOWING CODE WAS WRITTEN TO OVERCOME THE WEIRD VALUE
:(7FFF) WHICH WAS STORED IN SOME ROUTINE IN DXLIM CAUSING
:WATCH FROG TIMEOUT ERROR.
:
CONPATCH(SLOR1,,6)
	J	PA1PTR,,
CONPATCH(PA1PTR,,36)
CHK	CHI	R0,0A0			:CHECK ISIS MSG LENGTH
	JG	BLOWN			:ITS NOT VALID
	LCS	R3,4			:NO PROB! FROM SOURCE
	NH	R3,CEI+ORING,,		:FROM SOURCE
	J	SLOR1+08,,
BLOWN	LHI	R0,9D			:INVALID MSG LENGTH. RECTIFY IT
	ST	R0,DXLIM,R12,		:9D IS MAX XMIT POSSIBLE
	ST	R0,TXLIM,R12,
	AIS	R0,3			:ROOM FOR HEADER
	J	CHK
ENDPATCH(INITIALIZE R15 IF MSG TYPE IS ZERO)
:---------------------------------------------------------------------
: PATCH NAME:  bpisis.tst                     PRODUCT AND VERSION:  CMTI  7.04
:     Author:  JEFF MORDEN                            Organization:  STS
:   Customer:  INFOLINK (modified for FORD)           Date Written:  4/5/90
: Description of Problem:  #
:       A STRANGE ASSORTMENT OF PROBLEMS HAVE BEEN OCCURING WITH A COMMON
:       FEATURE THAT THE BUFFERLETS ARE HOLDING A VERY LARGE QUANTITY
:       OF DATA WHICH OFTEN CONSISTS OF MORE THAN ONE 3270 COMMAND
:       FOR A PRINTER.  IN GENERAL, THE BACKPRESSURE MECHANISM SHOULD
:       HAVE PREVENTED THIS VOLUME OF DATA FROM ACCUMULATING EXCEPT
:       IF USING ISIS VERSION 11 OR ABOVE WHICH DOESN'T SUPPORT THE
:       FRISIS BIT ARRAY.  INSTEAD IT IS NECESSARY TO ACTUALLY SEND
:       THE ISIS BACKPRESSURE MESSAGES.  HOWEVER, EVEN IF NOT USING
:       THIS VERSION OF ISIS IT COULD BE POSSIBLE WITH SHORT PRINTER
:       COMMANDS AND AN SNA HIF LOCATED ON A DIFFERENT NODE THAN THE
:       CMT TO CAUSE MULTIPLE COMPLETE MESSAGES IN THE BUFFERLETS.
:       DRAINING AND PROCESSING THESE MESSAGES HAS RESULTED IN SOME
:       STRANGE LOOPS, CRASHES, AND IMPROPER PROCESS FLOW CONTROL.
:       THIS PATCH INSURES THAT BACKPRESSURE IS APPLIED IMMEDIATELY 
:       UPON RECEIVING AN ETX FOR A DEVICE SO THAT ISIS CAN NOT CONTINUE
:       TO DELIVER ANY MORE DATA FOR THAT PORT THAN IS ALREADY IN THE
:       RING ON THIS CYCLE OF THE EXEC.
:--------------------------------------------------------------------------
:            Modification was done on 11/28/90 by Anil. Before closing
:	the record we make sure that at DSPED whether we are closing
:	the right record. BINARY is a bit array which records at SLOR
:	the kind of record beeing opened by dport. At DSPED we check
:	BINARY bit array to decide whether to call ELOR (for crtl data)
: 	or to call ELODR (for data msg)
:---------------------------------------------------------------------



        LO      DSP
	LO 	FRNTND
PATCH(040590,1100,J/MORDEN,DSPED,,6)
        J       PA1PTR,,
CONPATCH(PA1PTR,,90)
        PUSH(R0)
        PUSH(R1)
        PUSH(R2)
        PUSH(R4)
        LHL     R1,DPORT,R12,           :GET PORT NUMBER
	JE	NEXX
        ST      R15,SAVE15,,
        LR      R15,R15
        JGEFS   .+8
        JAL     R4,TEST,,		:11/28/90 crtl or data msg ?
        LHL     R1,DPORT,R12,
        LIS     R0,3                    :SET NUMBER OF CHARACTERS IN MESSAGE
        LHI     R2,0A0                  :SET BACKPRESSURE MESSAGE
        RBT     R1,FRISIS,,             :FOR ISIS VERSIONS LESS THAN 11.01
        JAL     R4,SLOR,,
        JAL     R4,ELOR,,               :MESSAGE SENT VERSIONS >= 11.01
        L       R4,SAVE15,,
        JGEFS   NEXX
        LHL     R1,DPORT,R12,
        LH      R0,DXLIM,R12,
	LR	R2,R0			:11/28/90  get char code for slor
	SIS	R2,3			:11/28/90  
        JAL     R4,SLOR,,
NEXX    POP(R4)
        POP(R2)
        POP(R1)
        POP(R0)
	LH	R3,DPORT,R12,,	:FROM SOURCE
	JLE	DSPNENQ,,	:FROM SOURCE
	J	DSPED+08,,       :FROM SOURCE 
TEST	RBT	R1,BINARY,,		:11/28/90  crtl or data record?
	JG	ELOR,,			:11/28/90  crtl msg, return on R4
	J	ELODR,,			:11/28/90  data msg, return on R4
CONPATCH(PA0PTR,,(MAXPRT/10+1)*2+8)
BINARY	RE	(MAXPRT/10+1)
	HC	0
	ER
SAVE15  WS      1
CONPATCH(IZFRNT,,6)
        J       PA1PTR,,
CONPATCH(PA1PTR,,20)
        ST      R0,RETPTR,,
        LIS     R0,0
        ST      R0,SAVE15,,
	L       R0,RETPTR,,	:FROM SOURCE
	LHI	RPORT,NPORT-1	:FROM SOURCE
	J	IZIN1,,

:NOW RELEASE BACKPRESSURE IF START PRINT BIT IN PRINT COMMAND NOT SET
:
        LO      PRT
        IF      \PRTSW
CONPATCH(PSCH10-06,,6)
        J       PA1PTR,,
CONPATCH(PA1PTR,,90)
        JN      PSCH10,,
	PUSH(R0)
        PUSH(R1)
        PUSH(R2)
        PUSH(R4)
        LHL	R1,DPORT,R12,
	JLE	FWD
	ST	R15,SAVE15,,
	LR	R15,R15
        JGEFS   .+8
        JAL     R4,ELODR,,               :02/20/91
        LHL     R1,DPORT,R12,           :GET PORT NUMBER
        LIS     R0,3			:SET NO OF CHARACTERS IN MESSAGE
        LHI     R2,0A1                  :RELEASE BACKPRESSURE MESSAGE
        SBT     R1,FRISIS,,		
        JAL     R4,SLOR,,
        JAL     R4,ELOR,,
        L       R4,SAVE15,,
        JGEFS   FWD
        LHL     R1,DPORT,R12,
        LH      R0,DXLIM,R12,
        LR	R2,R0			:02/20/91
	SIS	R2,3			:02/20/91
	JAL     R4,SLOR,,
FWD     POP(R4)
        POP(R2)
        POP(R1)
	POP(R0)
        J       FSHIIX,,                :BACK TO SOURCE
        EI              :END IF 
        FO      PRT

:NEED TO MAKE ROUTINE THAT INSURES THAT R15 IS 0 UPON ENTERING INPUT.  THIS IS
:SO THE ABOVE PATCHES CAN USE R15 AS A WAY OF IDENTIFYING IF AN OUTPUT RECORD
:HAS BEEN STARTED AND IS IN PROGRESS.  AT LEAST ONE PROCESS SOMEWHERE IS USING
:R15 FOR ITS OWN PURPOSES WITHOUT PUSHING AND POPPING AND THIS INTRODUCES A
:NEGATIVE VALUE THAT IS NOT RELATED TO THE ORING INDEX AND TRICKS THE ABOVE
:PATCHES.
:
CONPATCH(EXEC+0C,,6)
        J       PA1PTR,,
CONPATCH(PA1PTR,,14)
        JAL     R5,BUFACT,,
        JAL     R0,INPUT,,              :NOW GO DO INPUT WHICH HAS THE ABOVE
        J       EXEC+18,,               :PATCHES AS PART OF ITS PROCESSES

CONPATCH(DISFAST,,6)
	J	PA1PTR,,
CONPATCH(PA1PTR,,82)
	LHI	R1,0			:INITIALIZE COUNTER FOR PORTS
BACKN   AIS     R1,1                    :INCREMENT PORT NUMBER AND START WITH 1
        CLI     R1,NPORT                :ALL PORTS CHECKED???
        JE      XOUTN                    :YES -- LEAVE ROUTINE
        TBT     R1,ACP                  :IS IT AN ACTIVE PORT
        JN      ANLYSN                   :YES -- SEE IF MESSAGES NEED SENDING
        SBT     R1,CGISIS,,        	:NO BACKPRESSURE ON INACTIVE PORT
        J       BACKN
	
XOUTN	SVC	FASTD
	J	EXEC,,			:BACK TO BEG. OF EXEC LOOP
     
ANLYSN  TBT     R1,FRISIS               :START HERE IF LAST PASS ON PORT
	JE	ISA0N			:YES, COMPARE WITH CGISIS
	SBT 	R1,CGISIS,,		:SET CGISIS
	JE	SNDBPN			:IF SET , SEND BP
	J	BACKN			:ELSE GET NEXT PORT

ISA0N	RBT	R1,CGISIS,,		:RESET CGISIS
	JE	BACKN			:IF RESET, GET NEXT PORT
	J	RBPN			:RELEASE BP

SNDBPN	LHI	R2,0A1			:RELEASE BACK PRESSURE MESSAGE
	LIS	R0,3			:SIZE OF MESSAGE
	JAL	R4,SLOR,,		:PUT MSG IN RING
	JAL	R4,ELOR,,		:FINISH	IT UP
	J	BACKN

RBPN	LHI	R2,0A0			:SET  BP MSG
	LIS	R0,3
	JAL	R4,SLOR,,
	JAL	R4,ELOR,,
	J	BACKN
CONPATCH(PA0PTR,,NGRP*2+2)
CGISIS	HS	NGRP
ENDPATCH( SET BP OR RELEASE WHEN REQUIRED TO AVOID FLOODING OF BUFFERLETS)
	FO	FRNTND
	FO	DSP
	LO	FRNTND
:this initializes the binary bit array created at slor
PATCH(013191,1000,A/THAKUR,IZIN1,,6)
	J	PA1PTR,,
CONPATCH(PA1PTR,,34) 
	LIS	R0,0			:USED TO RESET BINART BITS
	LHI	RPORT,(MAXPRT/10+1)-1
AGAIN	STH	R0,BINARY,RPORT,		:RESET THE BINARY RPORT
	SIS	RPORT,2			:DECREMENT 
	RBT	RPORT,ACP,,		:FROM SOURCE
	SBT	RPORT,TOISIS ,,         :FROM SOURCE
	SBT	RPORT,CGISIS,,		:FROM SOURCE
	J	IZIN1+0C,,
ENDPATCH(INITIALIZE THE BINARY BIT ARRAY)
   