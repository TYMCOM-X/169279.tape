:******************************************************************
:(NSCNET)ISCS06.I03
:Following the new parameters designed for Consat V6.03
:
:       ULXRNG(Rp...)   Define async ports which are to send 2nd
:                       ULMSG text message.
:
:       JAPIO(Rp...)    Define async ports which are to reject display
:                       text at PVCOUT process.
:
:       REJ24(Rp...)    Define async ports which are to reject more than
:                       2400bps TID recied.
:
:       TIDMG2(Rp...)   Define async ports which are to recived 2nd
:                       TID message.
:
:
:       NOTE. This patch inclued (NSCNET)ISCS06.I02
:
:**********************************************************************

ULXRNG  MACRO(P0,P1,P2,P3,P4,P5,P6,P7,P8,P9,PA,PB,PC,PD,PE,PF) [
        .SPRNG(ULXRNG,NAPORT,.ULM2,P0)
        .SPRNG(ULXRNG,NAPORT,.ULM2,P1)
        .SPRNG(ULXRNG,NAPORT,.ULM2,P2)
        .SPRNG(ULXRNG,NAPORT,.ULM2,P3)
        .SPRNG(ULXRNG,NAPORT,.ULM2,P4)
        .SPRNG(ULXRNG,NAPORT,.ULM2,P5)
        .SPRNG(ULXRNG,NAPORT,.ULM2,P6)
        .SPRNG(ULXRNG,NAPORT,.ULM2,P7)
        .SPRNG(ULXRNG,NAPORT,.ULM2,P8)
        .SPRNG(ULXRNG,NAPORT,.ULM2,P9)
        .SPRNG(ULXRNG,NAPORT,.ULM2,PA)
        .SPRNG(ULXRNG,NAPORT,.ULM2,PB)
        .SPRNG(ULXRNG,NAPORT,.ULM2,PC)
        .SPRNG(ULXRNG,NAPORT,.ULM2,PD)
        .SPRNG(ULXRNG,NAPORT,.ULM2,PE)
        .SPRNG(ULXRNG,NAPORT,.ULM2,PF)
]



JAPIO  MACRO(P0,P1,P2,P3,P4,P5,P6,P7,P8,P9,PA,PB,PC,PD,PE,PF) [
        .SPRNG(JAPIO,NAPORT,.TXOK,P0)
        .SPRNG(JAPIO,NAPORT,.TXOK,P1)
        .SPRNG(JAPIO,NAPORT,.TXOK,P2)
        .SPRNG(JAPIO,NAPORT,.TXOK,P3)
        .SPRNG(JAPIO,NAPORT,.TXOK,P4)
        .SPRNG(JAPIO,NAPORT,.TXOK,P5)
        .SPRNG(JAPIO,NAPORT,.TXOK,P6)
        .SPRNG(JAPIO,NAPORT,.TXOK,P7)
        .SPRNG(JAPIO,NAPORT,.TXOK,P8)
        .SPRNG(JAPIO,NAPORT,.TXOK,P9)
        .SPRNG(JAPIO,NAPORT,.TXOK,PA)
        .SPRNG(JAPIO,NAPORT,.TXOK,PB)
        .SPRNG(JAPIO,NAPORT,.TXOK,PC)
        .SPRNG(JAPIO,NAPORT,.TXOK,PD)
        .SPRNG(JAPIO,NAPORT,.TXOK,PE)
        .SPRNG(JAPIO,NAPORT,.TXOK,PF)
]


REJ24  MACRO(P0,P1,P2,P3,P4,P5,P6,P7,P8,P9,PA,PB,PC,PD,PE,PF) [
        .SPRNG(REJ24,NAPORT,.CK24,P0)
        .SPRNG(REJ24,NAPORT,.CK24,P1)
        .SPRNG(REJ24,NAPORT,.CK24,P2)
        .SPRNG(REJ24,NAPORT,.CK24,P3)
        .SPRNG(REJ24,NAPORT,.CK24,P4)
        .SPRNG(REJ24,NAPORT,.CK24,P5)
        .SPRNG(REJ24,NAPORT,.CK24,P6)
        .SPRNG(REJ24,NAPORT,.CK24,P7)
        .SPRNG(REJ24,NAPORT,.CK24,P8)
        .SPRNG(REJ24,NAPORT,.CK24,P9)
        .SPRNG(REJ24,NAPORT,.CK24,PA)
        .SPRNG(REJ24,NAPORT,.CK24,PB)
        .SPRNG(REJ24,NAPORT,.CK24,PC)
        .SPRNG(REJ24,NAPORT,.CK24,PD)
        .SPRNG(REJ24,NAPORT,.CK24,PE)
        .SPRNG(REJ24,NAPORT,.CK24,PF)
]



TIDMG2  MACRO(P0,P1,P2,P3,P4,P5,P6,P7,P8,P9,PA,PB,PC,PD,PE,PF) [
        .SPRNG(TIDMG2,NAPORT,.MSG2,P0)
        .SPRNG(TIDMG2,NAPORT,.MSG2,P1)
        .SPRNG(TIDMG2,NAPORT,.MSG2,P2)
        .SPRNG(TIDMG2,NAPORT,.MSG2,P3)
        .SPRNG(TIDMG2,NAPORT,.MSG2,P4)
        .SPRNG(TIDMG2,NAPORT,.MSG2,P5)
        .SPRNG(TIDMG2,NAPORT,.MSG2,P6)
        .SPRNG(TIDMG2,NAPORT,.MSG2,P7)
        .SPRNG(TIDMG2,NAPORT,.MSG2,P8)
        .SPRNG(TIDMG2,NAPORT,.MSG2,P9)
        .SPRNG(TIDMG2,NAPORT,.MSG2,PA)
        .SPRNG(TIDMG2,NAPORT,.MSG2,PB)
        .SPRNG(TIDMG2,NAPORT,.MSG2,PC)
        .SPRNG(TIDMG2,NAPORT,.MSG2,PD)
        .SPRNG(TIDMG2,NAPORT,.MSG2,PE)
        .SPRNG(TIDMG2,NAPORT,.MSG2,PF)
]


TIDMG3  MACRO(P0,P1,P2,P3,P4,P5,P6,P7,P8,P9,PA,PB,PC,PD,PE,PF) [
        .SPRNG(TIDMG3,NAPORT,.MSG3,P0)
        .SPRNG(TIDMG3,NAPORT,.MSG3,P1)
        .SPRNG(TIDMG3,NAPORT,.MSG3,P2)
        .SPRNG(TIDMG3,NAPORT,.MSG3,P3)
        .SPRNG(TIDMG3,NAPORT,.MSG3,P4)
        .SPRNG(TIDMG3,NAPORT,.MSG3,P5)
        .SPRNG(TIDMG3,NAPORT,.MSG3,P6)
        .SPRNG(TIDMG3,NAPORT,.MSG3,P7)
        .SPRNG(TIDMG3,NAPORT,.MSG3,P8)
        .SPRNG(TIDMG3,NAPORT,.MSG3,P9)
        .SPRNG(TIDMG3,NAPORT,.MSG3,PA)
        .SPRNG(TIDMG3,NAPORT,.MSG3,PB)
        .SPRNG(TIDMG3,NAPORT,.MSG3,PC)
        .SPRNG(TIDMG3,NAPORT,.MSG3,PD)
        .SPRNG(TIDMG3,NAPORT,.MSG3,PE)
        .SPRNG(TIDMG3,NAPORT,.MSG3,PF)
]

:       C.FIX macro is modified to enable second TID message.
:
        KILL    C.FIX


C.FIX	MACRO[
	IF	C.FIXD
C.FIXD	 EQ	0			:won't do this again
	KILL	ASYNC,SIO,MPVC,PRINT,DECLARE,DIAOUT
DECLAR	MACRO(NAME)[
	ERROR(DECLARE{NAME} -- declarations MUST occur before exceptions)]
	GLOBAL(NAPORT,0)		:number of ASYNC ports
	GLOBAL(NUMPRN,0)		:number of Printers
	GLOBAL(NSPORT,0)		:number of SIO ports
	GLOBAL(NMPVC,0)			:number of Multiplexed PVC ports
	GLOBAL(NOPORT,0)		:number of Oudial command ports *sdw 403
	GLOBAL(NHOST,0)			:default number of (real) hosts
	GLOBAL(NPAPRT,0)		:number of addressable-port options
	GLOBAL(PVC,0)			:PVC default off
	IF	NAPORT&0F
NAPORT	 EQ	((-10)&NAPORT)+10
	 WARNING(NAPORT not multiple of 16 -- forced to ,1)
	 NUMBER	$A NAPORT;	WAREND
	EI
NPORT	EQ	NAPORT+NSPORT+NMPVC+NOPORT
	GL	NPORT,MAXPRT
MAXPRT	EQ	NPORT
	SI.FIX
	GLOBAL(.SPORT,NAPORT)
	GLOBAL(.MPORT,.SPORT+NSPORT)
	GLOBAL(.OPORT,.MPORT+NMPVC)
        DEFBIT(.30T,NAPORT)             :ASYNC ports identifier at 120 CPS
	DEFBIT(.120T,NAPORT)		:ASYNC ports identified at 120 CPS
	DEFBIT(.240T,NAPORT)		:ASYNC ports identified at 240 CPS
	DEFBIT(.480T,NAPORT)		:ASYNC ports identified at 480 CPS
	DEFBIT(.ANSW,NAPORT)		:Don't hang these at startup *600.sdw
	DEFBIT(.BQSP,NAPORT)		:Non-transparent TELEX ports which
				:support ? mark replacing untranslateable chars
	DEFBIT(.SPPT,NAPORT)		:ASYNC ports with 0 parity TIDM
: This line is added to enable second TID message
        DEFBIT(.MSG2,NAPORT)            :(NIS)2ND TID MESSAGE
: This line is added to enable third TID message
        DEFBIT(.MSG3,NAPORT)            :(NIS)3RD TID MESSAGE
:
: This line is added to reject display text at PVCOUT process.
        DEFBIT(.TXOK,NPORT)             :DISENABE TEXT AT PVCOUT
:
: This line is added to reject more than 2400bps TID recived
        DEFBIT(.CK24,NAPORT)            :(NIS)2400BPS TID REJECT
:
: This line is added to enable second Welcome message
        DEFBIT(.ULM2,NAPORT)            :(NIS)2ND WELCOME TO MESSAGE
:
	DEFBIT(.2HD,NPORT)		:Bell 202S ports (all ports)
	DEFBIT(.BAUD,NPORT)		:BAUDOT ports (all ports)
	DEFBIT(.STP2,NPORT)		:ASCII 2 stop bits for SIO
	DEFBIT(.AP,NPORT)		:addressable-ports (all ports)
	DEFBIT(.BSY,NAPORT)		:Ports which support BUSY-OUT
	DEFBIT(.TLXP,NAPORT)		:Async ports that are TELEX ports
	DEFBIT(.BTLX,NAPORT)		:Async ports that are non-transparent
					:TELEX port
	DEFBIT(.TTLX,NAPORT)		:Async ports for SPEEDLINK TELEX ports
	.S.RNG(.BSY,0,NAPORT)		:...initially all ASYNC ports
	DEFBIT(.CP.,NPORT)		:Ports which support CP
	.S.RNG(.CP.,0,NAPORT)		:...initially all ASYNC ports
	DEFBIT(.NPI,NPORT)		:ports which DON'T want node-port ID
	.S.RNG(.NPI,.MPORT,NMPVC)	:	Include MPVC ports
	DEFBIT(PVCG,NPORT)		:ports with PVC options
	GL	PVCCNT			:Count of all ports desiring any kind
PVCCNT	EQ	NMPVC			:   of PVC service (init'ed to NMPVC)
	 IF	NMPVC
	  IF	NSPORT
TID.MP	TIDDEF(2*TIDMAX,0)		:Multiplexed PVC
	  ELSE
TID.MP	TIDDEF(TIDMAX,0)		:Multiplexed PVC
	  EI	:NSPORT
	.S.RNG(PVCG,.MPORT,NMPVC)	:default all MPVC ports to PVC
	DEFBIT(.MPMU,NMPVC)
	.S.RNG(.MPMU,0,NMPVC)
	DEFBIT(.MPMF,NMPVC)
	.S.RNG(.MPMF,0,NMPVC)
	GL	.NMUS
.NMUS	EQ	-1
PVC	EQ	1			:Force PVC on for MPVC
	.PVCDF(** BUG1 **,TID.MP,AID,NOTXT,ALO,PCO,NOPAR,HDX,NOCRLF,NOLFCR,TRS,NOHNG)
	.PXRNG(** BUG2 **,NMPVC,.MPORT,0-`(NMPVC-1`),QV)
	 EI	NMPVC

GLOBAL(SPECFE,8000)			:allow IIX
GLOBAL(ODN.00,03106)			:our dnic
DEFBIT(.CMMD,NPORT)			:Ports allowed to enter command mode
DEFBIT(.LGMD,NPORT)			:Ports allowed to enter login mode
.S.RNG(.LGMD,0,NPORT)			:... initially all ports
DEFBIT(.IPMD,NPORT)			:Initial port mode
DEFBIT(.PTYP,NPORT)			:Command types accepted (1=TYMNET 
					: Extended, 0=CCITT)
DEFBIT(.DBUF,NPORT)			:Presence of data editing buffer
DEFBIT(.ICO,NPORT)			:ports initted to accept incoming calls
					:...answer for incoming calls
DEFBIT(.CUGS,NPORT)			:Closed User Group subscription flag
DEFBIT(.CUGI,NPORT)			:CUG with incoming access flag
DEFBIT(.CUGO,NPORT)			:CUG with outgoing access flag
DEFIND(.CU,NPORT)		:Define CUGROUP's index #,port range flag
DEFIND(.AC,NPORT)

	EI	:C.FIXD]
