100 ! define external procedures used by directory search
110 !
120 DEF LOGICAL EXTERNAL FD.OPEN(DIREC$)
130 DEF EXTERNAL FD.CLOSE
140 DEF EXTERNAL FD.WILD(FNAME$,FEXT$)
150 DEF LOGICAL EXTERNAL FD.STEP
160 DEF STRING EXTERNAL FD.NAME
170 DEF STRING EXTERNAL FD.EXT
180 DEF STRING EXTERNAL GET.GFD.PPN
190 !
200 !
210 ! define product identifiers and product table
220 !
230 DATA 10
240 !
250 DATA "FF","00","01","02","03","04","05","06","07","08"
260 !
270 DATA 6
280 DATA "[27514,136363]","RUDMAN"
290 DATA "[27514,46356]","MWALTERS"
300 DATA "[27514,246772]","LEEWAKE"
310 DATA "[27514,50523]","TNSUKM"
320 DATA "[27514,50313]","MGTNET"
330 DATA "[27514,353612]","UCSLNET"

340 !
350 !
360 ! define internal procedures
370 !
380 !
390 DEF ENTRY CONVRT(STR$,NBCHAR,NBASE)
400 ANS = 0
410 FOR I=NBCHAR BY -1 TO 1
420 STR$ = RIGHT(STR$,I)
430 DIG = ASC(LEFT(STR$,1))-48
440 ANS = ANS+DIG*NBASE^(I-1)
450 NEXT I
460 EXIT ANS
470 ENDF CONVRT
480 !
490 !
500 DEF STRING CONVST(STR$,NBCHAR)
510 STR1$ = CR
520 FOR I=NBCHAR BY -1 TO 1
530 STR$ = RIGHT(STR$,I)
540 DIG = ASC(LEFT(STR$,1))
550 IF DIG >= 97 THEN
560 DIG = DIG-32
570 ENDIF
580 STR1$ = STR1$+CHAR(DIG,1)
590 NEXT I
600 EXIT STR1$
610 ENDF CONVST
620 !
630 !
640 DEF STRING DECSTR(VALUE)
650 IF VALUE < 10 THEN
660 STR$ = CHAR(VALUE+48)
670 ELSE
680 STR$ = CHAR(VALUE DIV 10+48)+CHAR((VALUE-VALUE DIV 10*10)+48)
690 ENDIF
700 EXIT STR$
710 ENDF DECSTR
720 !
730 !

740 !
750 !
760 DEF ENTRY CHECK(TYPE$)
770 FOR NPROD=1 TO NBPROD
780 IF PROD$ = PRDTAB$(NPROD) THEN
790 IF TYPE$ = LANG(NPROD) THEN
800 IF PROD$ = "ELF3" THEN
810 LINE$ = LEFT(RIGHT(LINE$,7),3)
820 VERN$ = "0"+LEFT(LINE$,1)+"."+RIGHT(LINE$,2)
830 ELSE
840 LINE$ = RIGHT(LINE$,6)
850 VERN$ = LEFT(LINE$,3)+RIGHT(LINE$,2)
860 ENDIF
870 SFVERN(NODIND,NPROD) = VERN$
880 IF SLT > MXSLOT+1 THEN
890 SLOTNO(NODIND,NPROD) = "  "
900 IF RIGHT(FEXT$,2) = "MD" THEN
910 IF PROD$ = "TII0" THEN
920 SFTYPE(NODIND,0) = SWIT
930 ELSE
940 SFTYPE(NODIND,0) = NPROD
950 ENDIF
960 SOFVER(NODIND,0) = VERN$
970 ENDIF
980 ELSE
990 SLOTNO(NODIND,NPROD) = RIGHT(FEXT$,2)
1000 SFTYPE(NODIND,SLT) = NPROD
1010 SOFVER(NODIND,SLT) = VERN$
1020 ENDIF
1030 FLAG = 1
1040 NODES$(NODIND) = NODENO$
1050 GOTO 1090
1060 ENDIF
1070 ENDIF
1080 NEXT NPROD
1090 ENDF CHECK
1100 !
1110 !

1120 !
1130 !
1140 DEF ENTRY RFILE
1150 FNAME$ = FD.NAME
1160 FEXT$ = FD.EXT
1180 NODIND = CONVRT(NODENO$,4,8)-MINODE
1200 IF NODIND > MAXNOD THEN
1210 PRINT CR,"ERROR - NODE NUMBER ":NODENO$:" NOT SUPPORTED"
1220 ORIF NODIND < 0 THEN
1230 PRINT CR,"ERROR - NODE NUMBER ":NODENO$:" NOT SUPPORTED"
1240 ELSE
1250 FLAG = 0
1260 OPEN FNAME$+"."+FEXT$,INPUT,1
1270 INPUT FROM 1 IN FORM "R": LINE$
1280 ON ENDFILE 1 GOTO 1680
1290 !
1300 LINE$ = CONVST(LINE$,LENGTH(LINE$))
1310 SLINE$ = LINE$
1320 SSLINE$ = LINE$
1330 LINE$ = RIGHT(LINE$,10)
1340 FOR I=LENGTH(SLINE$) BY -1 to 0
1350 SLINE$=RIGHT(SLINE$,I)
1360 IF LEFT(SLINE$,2)=".R" THEN
1370 LINE$=LEFT(RIGHT(SSLINE$,I+6),10)
1380 ENDIF
1390 NEXT I
1400 !
1410 PROD$ = LEFT(LINE$,4)
1420 IF PROD$ = "VAL0" THEN
1430 IF VALN > 0 THEN
1440 PRDTAB$(VALN) = "VAL0"
1450 NAMES(VALN) = " VAL  "
1460 LANG(VALN) = "R"
1470 CALL CHECK("R")
1480 ENDIF
1490 ELSE
1500 IF PROD$ = "ELF3" THEN
1510 CALL CHECK("P")
1520 ELSE
1530 IF COUNT(LINE$,".R") <> 0 THEN
1540 CALL CHECK("R")
1550 ELSE
1560 IF COUNT(LINE$,".P") <> 0 THEN
1570 CALL CHECK("P")
1580 ELSE
1590 IF COUNT(LINE$,".B") <> 0 THEN
1600 CALL CHECK("B")
1610 ENDIF
1620 ENDIF
1630 ENDIF
1640 ENDIF
1650 ENDIF
1660 GOTO 1760 UNLESS FLAG = 0
1670 GOTO 1270
1680 PRINT FNAME$+"."+FEXT$:" NOT RECOGNISED FORMAT"
1690 IF SLT <= MXSLOT+1 THEN
1700 SFTYPE(NODIND,SLT) = SWIT+1
1710 ELSE
1720 IF RIGHT(FEXT$,2) = "MD" THEN
1730 SFTYPE(NODIND,0) = SWIT+1
1740 ENDIF
1750 ENDIF
1760 CLOSE 1
1770 ENDIF
1780 ENDF RFILE
1790 !
1800 !

1810 !
1820 !
1830 DEF ENTRY OUTSTR(STR$,NBCHAR,NEWL)
1840 IF NEWL = 1 THEN
1850 PRINT STR$ FOR NBCHR=1 TO NBCHAR
1860 PRINT ON 3 : STR$ FOR NBCHR=1 TO NBCHAR
1870 ELSE
1880 PRINT STR$: FOR NBCHR=1 TO NBCHAR
1890 PRINT ON 3 : STR$: FOR NBCHR=1 TO NBCHAR
1900 ENDIF
1910 ENDF OUTSTR
1920 !
1930 !
1940 DEF ENTRY PGHEAD
1950 PRINT ON 3 : CHAR(12)
1960 PAGE$ = DECSTR(PAGENO)
1970 LHD = 52+LENGTH(DIREC$)+LENGTH(COMP$)
1980 LHDP = LHD+LENGTH(PAGE$)+LENGTH(NBPAG$)+9
1990 CALL OUTSTR(DIREC$,1,0)
2000 CALL OUTSTR("SOFTWARE STATUS FOR ",1,0)
2010 CALL OUTSTR(COMP$,1,0)
2020 CALL OUTSTR(" COMMAND FILES - ",1,0)
2030 CALL OUTSTR(DATE,1,0)
2040 CALL OUTSTR(SP,80-LHDP,0)
2050 CALL OUTSTR("PAGE ",1,0)
2060 PAGE$ = DECSTR(PAGENO)
2070 CALL OUTSTR(PAGE$,1,0)
2080 CALL OUTSTR(" OF ",1,0)
2090 CALL OUTSTR(NBPAG$,1,1)
2100 PAGENO = PAGENO+1
2110 CALL OUTSTR("=",LHD,0)
2120 CALL OUTSTR(SP,80-LHDP,0)
2130 CALL OUTSTR("=",9+LENGTH(PAGE$)+LENGTH(NBPAG$),0)
2140 CALL OUTSTR(CR,2,1)
2150 ENDF PGHEAD
2160 !
2170 !
2180 DEF ENTRY PRHED1(NAMENO,LAST)
2190 CALL OUTSTR(CR,1,1)
2200 CALL OUTSTR("=",76,0)
2210 CALL OUTSTR(CR,1,1)
2220 CALL OUTSTR(SP,7,0)
2230 FOR I=NAMENO TO LAST
2240 CALL OUTSTR(NAMES(I),1,0)
2250 CALL OUTSTR(SP,1,0)
2260 NEXT I
2270 CALL OUTSTR(CR,1,1)
2280 CALL OUTSTR("=",76,0)
2290 ENDF PRHED1
2300 !
2310 !

2320 !
2330 !
2340 DEF ENTRY PRHED2
2350 CALL OUTSTR(CR,1,1)
2360 CALL OUTSTR("=",76,0)
2370 CALL OUTSTR(CR,1,1)
2380 CALL OUTSTR("SLOT",1,0)
2390 CALL OUTSTR(SP,3,0)
2400 FOR I=1 TO MXSLOT
2410 CALL OUTSTR(SP,2,0)
2420 CALL OUTSTR(SLOTCH(I),1,0)
2430 CALL OUTSTR(SP,3,0)
2440 NEXT I
2450 CALL OUTSTR(CR,1,1)
2460 CALL OUTSTR("=",76,0)
2470 ENDF PRHED2
2480 !
2490 !
2500 DEF ENTRY GETMER
2510 LINE$ = ""
2520 OPEN COMP$+NODES$(NODEN)+".MER",INPUT,2,ERR GOTO 2570
2530 FOR I=1 WHILE LINE$ = ""
2540 INPUT FROM 2 IN FORM "R": LINE$
2550 NEXT I
2560 LINE$ = CONVST(LINE$,LENGTH(LINE$))
2570 CLOSE 2
2580 ENDF GETMER
2590 !
2600 !
2610 DEF ENTRY RDPROF
2620 LINE$ = ";;"
2630 FOR J=1 WHILE LEFT(LINE$,2) = ";;"
2640 INPUT FROM 4 IN FORM "R": LINE$
2650 ON ENDFILE 4 GOTO 4530
2660 NEXT J
2670 ENDF RDPROF
2680 !
2690 !

2700 !
2710 !
2720 DEF ENTRY PRTAB1(TABNO,LAST)
2730 NLINE = 0
2740 FOR NODEN=1 TO MAXNOD
2750 IF NODES$(NODEN) <> "" THEN
2760 IF NLINE = PGLENG THEN
2770 CALL PGHEAD
2780 CALL PRHED1(TABNO,LAST)
2790 NLINE = 0
2800 ENDIF
2810 NLINE = NLINE+1
2820 CALL GETMER
2830 CALL OUTSTR(CR,1,1)
2840 CALL OUTSTR(NODES$(NODEN),1,0)
2850 CALL OUTSTR(" | ",1,0)
2860 FOR I=TABNO TO LAST
2870 IF SFVERN(NODEN,I) <> "" THEN
2880 LSTPRD = I
2890 ENDIF
2900 NEXT I
2910 FOR I=TABNO TO LSTPRD
2920 IF SFVERN(NODEN,I)="" THEN
2930 CALL OUTSTR(SP,7,0)
2940 ELSE
2950 CALL OUTSTR(SFVERN(NODEN,I),1,0)
2960 CALL OUTSTR(SP,2,0)
2970 ENDIF
2980 NEXT I
2990 CALL OUTSTR(CR,1,1)
3000 CALL OUTSTR("     | ",1,0)
3010 FOR I=TABNO TO LSTPRD
3020 SLOTN$ = SLOTNO(NODEN,I)
3030 IF SLOTN$ = "" THEN
3040 CALL OUTSTR(SP,7,0)
3050 ELSE
3060 CALL OUTSTR(SLOTN$,1,0)
3070 IF SLOTN$ = "  " THEN
3080 FEXT$ = ".NIB"
3090 ELSE
3100 FEXT$ = ".N"+SLOTN$
3110 ENDIF
3120 IF COUNT(LINE$,FEXT$) = 0 THEN
3130 IF I=NODEC THEN
3140 IF SLOTNO(NODEN,I) = "  " THEN
3150 CALL OUTSTR(SP,5,0)
3160 ELSE
3170 CALL OUTSTR(" *   ",1,0)
3180 ENDIF
3190 ELSE
3200 CALL OUTSTR(" *   ",1,0)
3210 ENDIF
3220 ELSE
3230 CALL OUTSTR(SP,5,0)
3240 ENDIF
3250 ENDIF
3260 NEXT I
3270 CALL OUTSTR(CR,1,1)
3280 CALL OUTSTR("-",76,0)
3290 ENDIF
3300 NEXT NODEN
3310 ENDF PRTAB1
3320 !
3330 !

3340 !
3350 !
3360 DEF ENTRY PRTAB2
3370 NLINE = 0
3380 FOR NODEN=1 TO MAXNOD
3390 IF NODES$(NODEN) <> "" THEN
3400 IF NLINE = PGLENG THEN
3410 CALL PGHEAD
3420 CALL PRHED2
3430 NLINE = 0
3440 ENDIF
3450 NLINE = NLINE+1
3460 CALL GETMER
3470 CALL OUTSTR(CR,1,1)
3480 CALL OUTSTR(NODES$(NODEN),1,0)
3490 CALL OUTSTR(" | ",1,0)
3500 FOR I=0 TO MXSLOT-1
3510 IF SFTYPE(NODEN,I) <> 0 THEN
3520 MAXSLT = I
3530 ENDIF
3540 NEXT I
3550 FOR I=0 TO MAXSLT
3560 IF SFTYPE(NODEN,I)=0 THEN
3570 CALL OUTSTR(SP,7,0)
3580 ELSE
3590 IF SFTYPE(NODEN,I) = SWIT+1 THEN
3600 CALL OUTSTR("?????? ",1,0)
3610 ELSE
3620 IF SFTYPE(NODEN,I) = SWIT THEN
3630 CALL OUTSTR(NAMES(NODEC),1,0)
3640 CALL OUTSTR(SP,8,0)
3650 CALL OUTSTR("S W I T C H E R",1,0)
3660 ELSE
3670 CALL OUTSTR(NAMES(SFTYPE(NODEN,I)),1,0)
3680 ENDIF
3690 CALL OUTSTR(SP,1,0)
3700 ENDIF
3710 ENDIF
3720 NEXT I
3730 CALL OUTSTR(CR,1,1)
3740 CALL OUTSTR("     | ",1,0)
3750 FOR I=0 TO MAXSLT
3760 IF SOFVER(NODEN,I) = "" THEN
3770 CALL OUTSTR(SP,7,0)
3780 ELSE
3790 CALL OUTSTR(SOFVER(NODEN,I),1,0)
3800 IF SFTYPE(NODEN,I) = SWIT THEN
3810 FEXT$ = ".NIB"
3820 ORIF SFTYPE(NODEN,I) = ISIS THEN
3830 FEXT$ = ".NIB"
3840 ELSE
3850 FEXT$ = ".N"+SLOTCH(I+1)
3860 ENDIF
3870 IF COUNT(LINE$,FEXT$) = 0 THEN
3880 IF SFTYPE(NODEN,I) = SWIT THEN
3890 CALL OUTSTR(SP,2,0)
3900 ELSE
3910 CALL OUTSTR("* ",1,0)
3920 ENDIF
3930 ELSE
3940 CALL OUTSTR(SP,2,0)
3950 ENDIF
3960 ENDIF
3970 NEXT I
3980 CALL OUTSTR(CR,1,1)
3990 CALL OUTSTR("-",76,0)
4000 ENDIF
4010 NEXT NODEN
4020 ENDF PRTAB2

4030 !
4040 !
4050 ! program entry point
4060 ! open named directory and scan for NN####.C## files
4070 ! call procedure to analyse command file found
4080 !
4090 READ MXSLOT
4100 MINODE = 1024
4110 PRINT "PRODUCT DEFINITION FILE ? ":
4120 IIF "R": PRDFIL$
4130 OPEN PRDFIL$,INPUT,4,ERR GOTO 4510
4140 CALL RDPROF
4150 IF LENGTH(LINE$) <> 4 THEN GOTO 4550
4160 MAXNOD = CONVRT(LINE$,4,8)-MINODE
4170 CALL RDPROF
4180 IF LENGTH(LINE$) <> 2 THEN GOTO 4470
4190 NBPROD = CONVRT(LINE$,2,10)
4200 IF NBPROD > 99 THEN GOTO 4470
4210 !
4220 STRING SFVERN(MAXNOD,NBPROD)
4230 STRING SOFVER(MAXNOD,0:MXSLOT+1)
4240 INTEGER SFTYPE(MAXNOD,0:MXSLOT+1)
4250 STRING SLOTNO(MAXNOD,NBPROD)
4260 STRING PRDTAB$(NBPROD)
4270 STRING NAMES(NBPROD)
4280 STRING NODES$(MAXNOD)
4290 STRING LANG(NBPROD)
4300 STRING SLOTCH(MXSLOT)
4310 FOR I=1 TO NBPROD
4320 !
4330 CALL RDPROF
4340 ELINE$ = LINE$
4350 IF LENGTH(LINE$) <> 13 THEN GOTO 4550
4360 PRDTAB$(I) = LEFT(LINE$,4)
4370 LINE$ = RIGHT(LINE$,9)
4380 IF LEFT(LINE$,1) <> "," THEN GOTO 4490
4390 LINE$ = RIGHT(LINE$,8)
4400 NAMES(I) = LEFT(LINE$,6)
4410 LINE$ = RIGHT(LINE$,2)
4420 IF LEFT(LINE$,1) <> "," THEN GOTO 4490
4430 LANG(I) = RIGHT(LINE$,1)
4440 NEXT I
4450 CLOSE 4
4460 GOTO 4600
4470 PRINT "NUMBER OF PRODUCTS NOT NUMERIC OR GREATER THAN 99"
4480 GOTO 4560
4490 PRINT "ERROR IN LINE '"+ELINE$+"'"
4500 GOTO 4560
4510 PRINT "ERROR ON FILE "+PRDFIL$
4520 GOTO 4560
4530 PRINT "NUMBER OF PRODUCT DEFINITIONS NOT EQUAL TO NUMBER OF PRODUCTS"
4540 GOTO 4560
4550 PRINT "PRODUCT DEFINITION FILE ERROR"
4560 CLOSE 4
4570 GOTO 5510
4580 !
4590 VALN = 0
4600 FOR I=1 TO NBPROD
4610 IF NAMES(I) = " ISIS " THEN
4620 ISIS = I
4630 ELSE
4640 IF NAMES(I) = " NODE " THEN
4650 NODEC = I
4660 ELSE
4670 IF NAMES(I) = "NETVAL" THEN
4680 VALN = I
4690 ENDIF
4700 ENDIF
4710 ENDIF
4720 NEXT I
4730 !
4740 READ SLOTCH(I) FOR I=1 TO MXSLOT
4750 READ NBUSER
4760 STRING USERNO$(NBUSER)
4770 STRING USRNAM$(NBUSER)
4780 FOR I=1 TO NBUSER
4790 READ USERNO$(I)
4800 READ USRNAM$(I)
4810 NEXT I
4820 !
4830 STRING SP,CR
4840 SP = " "
4850 CR = ""
4860 SWIT = NBPROD+1
4870 PGLENG = 16
4880 PAGENO = 1
4890 !
4900 USRNUM$ = GET.GFD.PPN
4910 DIREC$ = ""
4920 FOR I=1 TO NBUSER
4930 IF USRNUM$ = USERNO$(I) THEN
4940 DIREC$ = USRNAM$(I)+SP
4950 ENDIF
4960 NEXT I
4970 !

4980 !
4990 !
5000 PRINT "NETWORK IDENTIFIER ? ":
5010 IIF "R": COMP$
5020 COMP$ = CONVST(COMP$,LENGTH(COMP$))
5030 !
5040 FORMA=0
5050 FOR I=1 WHILE FORMA=0
5060 PRINT "FORMAT (NP,NS) ? ":
5070 IIF "R": FORMAT$
5080 FORMAT$ = CONVST(FORMAT$,LENGTH(FORMAT$))
5090 IF FORMAT$="NP" THEN
5100 FORMA = 1
5110 ELSE
5120 IF FORMAT$="NS" THEN
5130 FORMA = 2
5140 ENDIF
5150 ENDIF
5160 NEXT I
5170 IF FD.OPEN("") THEN
5180 OPEN COMP$+"SOFT."+FORMAT$,OUTPUT,3,ERR GOTO 5190
5190 CALL FD.WILD(COMP$+"####","C##")
5200 CALL RFILE WHILE FD.STEP
5210 CALL FD.CLOSE
5220 !
5230 FOR I=1 TO MAXNOD
5240 IF NODES$(I) <> "" THEN
5250 NBNODE = NBNODE+1
5260 ENDIF
5270 NEXT I
5280 !
5290 NBPAGE = (NBNODE-1) DIV PGLENG+1
5300 NBPAG$ = DECSTR(NBPAGE)
5310 IF FORMA=1 THEN
5320 NBPAGE = NBPAGE * ((NBPROD-1) DIV 10+1)
5330 NBPAG$ = DECSTR(NBPAGE)
5340 FOR NBTAB=0 TO (NBPROD-1) DIV 10
5350 IF NBTAB*10+10 > NBPROD THEN
5360 LAST = NBPROD
5370 ELSE
5380 LAST = NBTAB*10+10
5390 ENDIF
5400 CALL PGHEAD
5410 CALL PRHED1(NBTAB*10+1,LAST)
5420 CALL PRTAB1(NBTAB*10+1,LAST)
5430 NEXT NBTAB
5440 ELSE
5450 CALL PGHEAD
5460 CALL PRHED2
5470 CALL PRTAB2
5480 ENDIF
5490 PRINT ON 3 : CHAR(12)
5500 CLOSE 3
5510 ENDIF
    