	TITLE	INSTAT.LIB . . . .Package to gather Input Ring Statistics	
	SUBTTL	INSTAT....Definitions & Data

:******************************************************************
:
:	This program is the sole property and confidential
:	information of Tymshare, Inc., and may not be copied
:	in whole or in part or disclosed to any third party
:	without the prior written consent of Tymshare.
:
:*******************************************************************

	RA	00			:INSURE CORRECT RADIX
	GL	LOOK			:INTERCEPT SYMBOL
	SEG	A.CODE
	MO	.,INSTAT

	GL	DSTART,.LOOK.,GETCH,DATIME

:	INSTAT - ISIS input ring statistics package
:		Version of 15 April 1981



:		The INSTAT package is intended to provide a tool to gather
:	statistics on the ISIS input ring, invokable under the "?STAT" command.

:		Entry point:

:	.LOOK.	used INSTEAD of <FRING.LIB>LOOK


:		?STAT commands:
:	Quit	exit back to DDT.
:	EXIt	exit machine.
:	IS.?	Help
:	IS.I	Initialize
:	IS.H	Halt
:	IS.C	Check status
:	IS.L	Length Statistics
:	IS.D	Data Statistics
:	IS.S	String Statistics


OUT	EQ	0B			:OUTPUT SVC
KIO	EQ	0D			:KIO SVC

MAXMSG	EQ	0C0			HIGHEST MESSAGE EXPECTED
MAXDTA	EQ	9D			HIGHEST DATA MESSAGE EXPECTED
MAXSYS	EQ	10			HIGHEST SYSTEM MESSAGE EXPECTED

:	MACRO TO PRINT A NUMBER ON TERMINAL
:	ARG	USE
:	1	NUMBER OF DIGITS
:	2	ANY SUM OF OF:  .S, .B, .Z, ONE OF [ .D, .H, OR .O]
S.	EQ	80			:SIGNED OUTPUT
B.	EQ	20			:BLANK FILL
Z.	EQ	40			:ZERO FILL
D.	EQ	0A			:DECIMAL
O.	EQ	08			:OCTAL
H.	EQ	10			:HEXIDECIMAL
	KILL	PRINT			:INSURE NO CONFLICT
PRINT	MACRO(ND,M2)[
	LHI	R1,(ND*100)!M2
	SVC	KIO,$A 10
]




:		DATA AREA

	SEG	A.DATA

:	NOTE...MAINTAIN ORDER OF DEFINITIONS!!

IS.BGN	WS	1			:GMT START TIME
IS.END	WS	1			:GMT END TIME

IS.USE	WS	1			:COUNTER FOR USER MESSAGES
IS.LEN	WS	MAXMSG+1		:NORMAL MESSAGE TYPES

IS.SYN	WS	1			:COUNTER FOR SYSTEM MESSAGES
IS.SYS	WS	MAXSYS+1		:SYSTEM MESSAGE TYPES

IS.DCI	WS	1			:TOTAL DATA CHARACTERS INPUT
IS.DAT	WS	100			:DATA STATISTICS

IS.STI	WS	1			:TOTAL STRINGS (>1) DETECTED
IS.STR	WS	MAXDTA+1		:STRING STATISTICS

IS.FLG	HC	0			:ACTIVITY FLAG:
:					<0	ACTIVE
:					=0	NEVER ACTIVE
:					=1	INACTIVE (DONE)
:					>1	INACTIVE (HALTED)
IS.CNT	HC	0			:TEXT BUFFER COUNT
IS.BUF	BS	$A 20			:TEXT BUFFER
IS.RET	WS	1			:SAVE RETURN ADDRESS HERE
	SUBTTL	INSTAT....Statistics Gathering	

	SEG	A.CODE


:	LOOK
:	Acts just like <FRING.LIB>LOOK
LOOK	LH	R0,IS.FLG		:CHECK ACTIVITY
	JGE	.LOOK.,,		:JUST GO THROUGH ".LOOK." IF INACTIVE
	ST	R4,IS.RET		:ELSE SAVE LINK REGISTER
	JAL	R4,.LOOK.,,		:GO DO IT
	 J	NODATA			:NOTHING THERE...JUST RETURN TO CALLER
	JE	PORT0			:DATA IS FOR PORT 0
	CLHI	R2,MAXMSG		:USER PORT...RANGE CHECK
	JGFS	CONT			:IGNOR IF OUT OF RANGE
	LIS	R0,1
	LR	R4,R2			:MAKE TYPE WORD INDEX
	SLLS	R4,2
	AM	R0,IS.LEN,R4		:COUNT MESSAGE(TYPE)
	AM	R0,IS.USE		:COUNT USER MESSAGE
	JL	DONE			:ABORT IF COUNTER OVERFLOWED
	CLHI	R2,MAXDTA		:CHECK FOR DATA
	JLEFS	DATA			:SKIP IF SO
CONT	L	R4,IS.RET		:RESTORE RETURN, SET CC .NE. 0
	J	4,R4			:AND PERFORM SKIP RETURN

:	POSSIBLE DATA TEXT
DATA	LR	R2,R2			:CHECK FOR MESSAGE TYPE 0
	JEBS	CONT			:YES...CONTROL MESSAGE EXIT
	AM	R2,IS.DCI		:COUNT TOTAL DATA CHARS IN MESSAGE
	JL	DONE			:ABORT IF COUNTER OVERFLOWED
	JAL	R4,GETCH,,		:TOSS THAT FIELD
	JAL	R4,GETCH,,		:GET FIRST CHAR
DATA1	LR	R1,R0			:COPY THIS CHAR
	LIS	R3,1			:ONE OF THESE
	SIS	R2,1			:COUNT CHAR GONE
	JLEFS	DATA3			:SKIP IF IT WAS THE LAST ONE
DATA2	JAL	R4,GETCH,,		:GET NEXT CHAR
	CR	R0,R1			:IS THIS A STRING?
	JNFS	DATA3			:END OF STRING...GO COUNT IT
	AIS	R3,1			:SAME STRING...COUNT IT
	SIS	R2,1			:GO THROUGH ALL OF MESSAGE
	JGBS	DATA2			:...UNTIL EXHAUSTED
DATA3	SLLS	R1,2			:MAKE WORD INDEX
	AM	R3,IS.DAT,R1		:COUNT OCCURANCES OF CHAR
	SLLS	R3,2			:MAKE WORD INDEX OF COUNT
	LIS	R4,1			:SET INCREMENT
	AM	R4,IS.STR,R3		:COUNT OCCURANCE OF STRING OF THIS LENGTH
	CLHI	R3,4			:WAS STRING OF LENGTH 1?
	JLEFS	DATA4			:DON'T COUNT THOSE AS STRINGS
	AM	R4,IS.STI		:ELSE COUNT ANOTHER STRING DETECTED
DATA4	LR	R2,R2			:IS MESSAGE EXHAUSTED?
	JG	DATA1			:PROCEED IF NOT EXHAUSTED

:	FINISHED...
	L	R4,IS.RET		:RESTORE RETURN
	J	.LOOK.,,		:RE-EXECUTE FOR USER


:	SYSTEM MESSAGE...".LOOK." DID SKIP(4) RETURN, CC = 0
PORT0	CLHI	R2,MAXSYS		:VERIFY MESSAGE TYPE
	JGFS	PORT0A			:SKIP IF OUT OF RANGE
	LR	R4,R2			:ELSE MAKE A WORD INDEX FROM TYPE CODE
	SLLS	R4,2
	LIS	R0,1			:SET UP COUNTER
	AM	R0,IS.SYS,R4		:COUNT SYSTEM MESSAGE(TYPE)
	AM	R0,IS.SYN		:COUNT SYSTEM MESSAGE
	JL	DONE			:ABORT IF COUNTER OVERFLOWS
PORT0A	L	R4,IS.RET		:RESTORE LINK REGISTER
	LIS	R0,0			:FAKE CONDITION CODES
	J	4,R4			:AND PERFORM SKIP RETURN

NODATA	L	R4,IS.RET		:NOTHING THERE...RESTORE LINK REGISTER
	JR	R4			:AND RETURN


:	DONE...TURN OFF, RECORD GMT, AND EXIT VIA LOOK
DONE	LIS	R4,1
	STH	R4,IS.FLG		:TURN OFF
	L	R4,GMT,,
	ST	R4,IS.END		:SET TERMINATION TIME
	L	R4,IS.RET		:RESTORE RETURN
	J	.LOOK.,,		:AND EXIT VIA LOOK
	SUBTTL	INSTAT....Command Handlers:  "IS.?" (HELP)

	DS.CMD(IS.?,HELP)		:PRINT COMMAND LIST

HELP	SVC	K.OUT,BANNER
	SVC	K.OUT,HELPM1
	SVC	K.OUT,HELPM2
	SVC	K.OUT,HELPM3
	SVC	K.OUT,HELPM4
	SVC	K.OUT,HELPM5
	SVC	K.OUT,HELPM6
	SVC	K.OUT,HELPM7
	SVC	K.OUT,HELPM8
	SVC	K.OUT,HELPM9
	SVC	K.OUT,HELPMA
	J	DSTART

BANNER	SC	/"8D"8A"8AINSTAT -- ISIS Input ring statistics"0A/
HELPM1	SC	/"8D"8AValid commands are:/
HELPM2	SC	/"8D"8AEXIT or EXI - log off/
HELPM3	SC	/"8D"8AQUIT or Q   - exit INSTAT (back to DDT)/
HELPM4	SC	/"8D"8AIS.?        - print this list/
HELPM5	SC	/"8D"8AIS.I        - Initialize/
HELPM6	SC	/"8D"8AIS.H        - Halt/
HELPM7	SC	/"8D"8AIS.C        - Check status/
HELPM8	SC	/"8D"8AIS.L        - Length statistic/
HELPM9	SC	/"8D"8AIS.D        - Data statistic/
HELPMA	SC	/"8D"8AIS.S        - String statistic/
	SUBTTL	INSTAT....Control Handlers

	DS.CMD(IS.I,INIT)		:INITIALIZE
	DS.CMD(IS.H,HALT)		:HALT
	DS.CMD(IS.C,CHECK)		:CHECK

INIT	LIS	R0,0
	LHI	R1,IS.FLG-IS.USE	:SET COUNTER
INIT1	ST	R0,IS.END,R1
	SIS	R1,4
	JGEBS	INIT1			:ZERO STORAGE
	L	R0,GMT,,		:SET TIME
	ST	R0,IS.BGN
	TS	IS.FLG			:SET PROCESS ACTIVE
	J	DSTART



HALT	LH	R0,IS.FLG
	JGEFS	CHECK			:JUST SKIP UNLESS RUNNING
	LIS	R0,2			:TURN OFF, SET HALTED
	STH	R0,IS.FLG
	L	R0,GMT,,
	ST	R0,IS.END		:SET STOP TIME AND FALL THROUGH



CHECK	SVC	OUT,BANNER		:DISPLAY BANNER
	LH	R7,IS.FLG		:CHECK STATE
	JNFS	CHECK1			:USED OR IN USE
	SVC	OUT,CKM1		:"NOT USED"
	J	DSTART			:AND EXIT

CHECK1	SVC	OUT,CKM2		:"NSTAT started "
	L	R3,IS.BGN		:TIME
	LHI	R4,$A 16		:LENGTH
	STH	R4,IS.CNT
	LA	R5,IS.BUF		:BUFFER
	JAL	R6,DATIME		:CONVERT TIME
	SVC	OUT,IS.CNT+1
	LR	R7,R7			:RECHECK STATE AGAIN
	JGFS	CHECK2			:SKIP IF COMPLETED
	SVC	OUT,CKM3		:"Running for "
	L	R3,GMT,,
	JFS	CHECK5			:AND SKIP

CHECK2	CLHI	R7,1			:HOW DID IT STOP
	JEFS	CHECK3			:ABORTED
	SVC	OUT,CKM4		:"Halted after "
	JFS	CHECK4

CHECK3	SVC	OUT,CKM5		"Quit after "

CHECK4	L	R3,IS.END		:GET END TIME

CHECK5	S	R3,IS.BGN		:COMPUTE ELAPSED TIME
	LIS	R2,0			:CLEAR HI-ORDER BITS
	D	R2,SECDAY		:SEC --> R2, DAYS --> R3
	LR	R0,R3			:COPY DAYS
	JEFS	CHECK6			:SKIP IF ZERO
	PRINT(2,D.)			:ELSE PRINT 2 DECIMAL DIGITS
	SVC	OUT,PERIOD		:"."
CHECK6	DH	R2,SECHOR		:SECONDS --> R2, HOURS --> R3
	LR	R0,R3
	PRINT(2,D.!Z.)			:2 DECIMAL DIGITS, ZERO FILL
	SVC	OUT,COLON		: ":"
	DH	R2,SECMIN		:SECONDS --> R2, MINUTES --> R3
	LR	R0,R3			:MINUTES
	PRINT(2,D.!Z.)			:2 DICIMAL DIGITS, ZERO FILL
	SVC	OUT,COLON		: ":"
	LR	R0,R2			:SECONDS
	PRINT(2,D.!Z.)			:2 DECIMAL DIGITS, ZERO FILL
	SVC	OUT,CKM6		:"Input "
	L	R0,IS.USE
	PRINT(0C,D.)			:12 DECIMAL DIGITS, NO FILL
	SVC	OUT,CKM7		:" user messages, "
	L	R0,IS.SYN
	PRINT(0C,D.)			:12 DECIMAL DIGITS, NO FILL
	SVC	OUT,CKM8		:" system messages/Input a total of "
	L	R0,IS.DCI
	PRINT(0C,D.)			:12 DECIMAL DIGITS, NO FILL
	SVC	OUT,CKM9		:" user data message characters."
	J	DSTART

SECDAY	WC	$A 24*60*60		:SECONDS IN A DAY
SECHOR	HC	$A 60*60		:SECONDS/HOUR
SECMIN	HC	$A 60			:SECONDS/MIN
CKM1	SC	/"8D"8ANSTAT Not Used./
CKM2	SC	/"8D"8ANSTAT started /
CKM3	SC	/ (GMT)"8D"8ARunning for /
CKM4	SC	/ (GMT)"8D"8AHalted after /
CKM5	SC	/ (GMT)"8D"8AQuit after /
CKM6	SC	/"8D"8AInput /
CKM7	SC	/ user messages, /
CKM8	SC	/ system messages"8D"8AInput a total of /
CKM9	SC	/ user data message characters."8D"8A/
	SUBTTL	INSTAT....IS.L -- Length statistics

	DS.CMD(IS.L,LEN)		:LENGTH

LEN	SVC	OUT,CR2LF		:DOUBLE SPACE
	L	R0,IS.USE
	PRINT(0C,D.)			:12 DECIMAL DIGITS, NO FILL
	SVC	OUT,LENM1		:" user message types"
	L	R0,IS.USE		:CHECK
	JE	LEN5			:SKIP IF NO MESSAGES

:	USER DATA STATISTICS
	SVC	OUT,LENM2		:"    Data messages"
	LIS	R3,1			:SET TYPE COUNTER
	LHI	R4,MAXDTA*4		:FIND HIGHEST DATA MESSAGE USED
LEN1	L	R0,IS.LEN,R4
	JNFS	LEN2
	SIS	R4,4
	JGBS	LEN1
LEN2	SVC	OUT,CRLF		:NEW LINE
	LR	R2,R3
	SLLS	R2,2			:MAKE A WORD INDEX
	LR	R0,R3
	PRINT(3,B.!H.)			:3 HEX DIGITS, BLANK FILL
	L	R0,IS.LEN,R2		:GET VALUE
	PRINT(0C,B.!D.)			:12 DECIMAL DIGITS, BLANK FILL
	AIS	R3,1			:LOOP END
	CR	R2,R4			:RANGE CHECK
	JLE	LEN2

:	USER CONTROL STATISTICS
	SVC	OUT,LENM3		:"Control message types/  0"
	LIS	R2,0			:SET REAL FIRST INDEX
	LHI	R3,MAXDTA		:SET PSEUDO-FIRST INDEX
	JFS	LEN4			:AND SKIP FOR PSEUDO ENTRY
LEN3	SVC	OUT,CRLF		:NEW LINE
	LR	R0,R3
	PRINT(3,B.!H.)			:3 HEX DIGITS, BLANK FILL
	LR	R2,R3
	SLLS	R2,2			:MAKE A WORD INDEX
LEN4	L	R0,IS.LEN,R2		:GET VALUE
	PRINT(0C,B.!D.)			:12 DECIMAL DIGITS, BLANK FILL
	AIS	R3,1			:LOOP END
	CLHI	R3,MAXMSG		:RANGE CHECK
	JLE	LEN3

:	SYSTEM MESSAGE STATISTICS
LEN5	SVC	OUT,CR2LF		:DOUBLE SPACE
	L	R0,IS.SYN
	PRINT(0C,D.)			:12 DECIMAL DIGITS, NO FILL
	SVC	OUT,LENM4		:" system message types"
	L	R0,IS.SYN
	JE	DSTART			:ABORT IF NONE
	LIS	R3,0			:SET COUNTER
LEN6	SVC	OUT,CRLF		:NEW LINE
	LR	R0,R3
	PRINT(3,B.!H.)			:3 HEX DIGITS, BLANK FILL
	LR	R2,R3
	SLLS	R2,2			:MAKE A WORD INDEX
	L	R0,IS.SYS,R2		:GET VALUE
	PRINT(0C,B.!D.)			:12 DECIMAL DIGITS, BLANK FILL
	AIS	R3,1			:LOOP END
	CLHI	R3,MAXSYS		:RANGE CHECK
	JLE	LEN6
	J	DSTART

LENM1	SC	/ user message types"8D"8A/
LENM2	SC	/    Data messages"8D"8A/
LENM3	SC	/"8A"8D"8A    Control message types "8D"8A  0/
LENM4	SC	/ system message types "8D"8A/
CRLF	SC	/"8D"8A/
CR2LF	SC	/"8A"8D"8A/
PERIOD	SC	/./
COLON	SC	/:/
	SUBTTL	INSTAT....IS.D -- Data statistics

	DS.CMD(IS.D,DAT)		:DATA

DAT	SVC	OUT,DATM1		:"Data-character distributions ("
	L	R0,IS.DCI		:GET NUMBER OF CHARS
	PRINT(0C,D.)			:12 DECIMAL DIGITS, NO FILL
	SVC	OUT,DATM2		:" chars)"
	L	R0,IS.DCI		:ABORT IF NONE
	JE	DSTART
	LIS	R3,0			:SET COUNTER
DAT1	SVC	OUT,CRLF		:NEW LINE
	LR	R0,R3
	PRINT(2,Z.!H.)			:2 HEX DIGITS, ZERO FILL
	LR	R1,R3
	SLLS	R1,2			:MAKE A WORD INDEX
	L	R0,IS.DAT,R1		:GET VALUE
	PRINT(0C,B.!D.)			:12 DECIMAL DIGITS, BLANK FILL
	AIS	R3,1			:LOOP END
	CLHI	R3,100			:RANGE CHECK
	JL	DAT1
	J	DSTART

DATM1	SC	/"8A"8D"8AData-character distributions (/
DATM2	SC	/ chars)"8D"8A/
	SUBTTL	INSTAT....IS.S -- String statistics

	DS.CMD(IS.S,STR)		:STRING

STR	SVC	OUT,STRM1		:"Character-string length distributions ("
	L	R0,IS.STI
	PRINT(0C,D.)			:UP TO 12 DECIMAL DIGITS, NO FILL
	SVC	OUT,STRM2		:" strings out of "
	L	R0,IS.DCI
	PRINT(0C,D.)			:UP TO 12 DECIMAL DIGITS, NO FILL
	SVC	OUT,STRM3		:" data characters"
	L	R0,IS.STI		:CHECK
	JE	DSTART			:ABORT IF EMPTY
	LHI	R4,MAXDTA*4
	LIS	R3,1			:SET COUNTER (IGNORE NULL)
STR1	L	R0,IS.STR,R4		:SEARCH FOR LAST NON-ZERO ENTRY
	JNFS	STR2
	SIS	R4,4
	JGBS	STR1
STR2	SVC	OUT,CRLF		:NEW LINE
	LR	R0,R3
	PRINT(3,B.!D.)			:3 DECIMAL DIGITS, BLANK FILL
	LR	R2,R3
	SLLS	R2,2			:MAKE A WORD INDEX
	L	R0,IS.STR,R2		:GET VALUE
	PRINT(0C,B.!D.)			:12 DECIMAL DIGITS, BLANK FILL
	AIS	R3,1			:LOOP END
	CR	R2,R4			:RANGE CHECK
	JL	STR2
	J	DSTART

STRM1	SC	/"8A"8D"8ACharacter-string length distributions"8D"8A    (/
STRM2	SC	/ strings out of /
STRM3	SC	/ data characters)"8D"8A/


	EM
   