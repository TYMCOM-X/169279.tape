        INTEGER IM,J,NLINE,ILIN,YMTOT,EVENTS(90,4),K,NUMBER
        INTEGER DT,BB,NDUP,IPOS1,IPOS2,L1,L2,TNUM,TIM1,TOT,I
        INTEGER TEMP(2),PASS(2),TYPE,X,FF,FILE(3)
        INTEGER HOST,FLAG,SM,SD,SY,EM,ED,EY,D,NT
        INTEGER L,M,P,NUMNET,ATTN,SDAT,SH,SM,EH,EM,PERCNT
        INTEGER IERT,IERC,TOT1,SVER,ANS,NDAT,TYMTOT(4)
        INTEGER RECORD,DOIT,Y,B,C,TYMTYP(17),A,Q,HN,MESS(64)
        REAL HOUR,ELM,NLH,TYMELH(4)
        REAL PERCEN,MATX(110,4)

C
C       EXTERNAL DATA DEFINITIONS
C
        INTEGER OSVR,OCKT,VALUE,NEWVAL,OPRO
        INTEGER OTRB,ODUP,RW1,RW2,TIC,RP1,RP2
        INTEGER OCV,OSTH,OEHR,OLOC,OVER
        INTEGER SC,SP,PT,ST,DT,TI,NO,SL,HO,LNO,HNO
        INTEGER VERS,REV,CARR,FF,OKH,PTS

        COMMON /OSVR/OSVR(2),OLOC(2),OVER(2)
        COMMON /OCKT/OCKT(2),OCV(2)
        COMMON /VALUE/VALUE(4),NEWVAL(4)
        COMMON /OPRO/OPRO(2)
        COMMON /OTRB/OTRB(3)
        COMMON /ODUP/ODUP(2)
        COMMON /RW1/RW1(3),RW2(3)
        COMMON /TIC/TIC(3)
        COMMON /RP1/RP1(3),RP2(3)
        COMMON /OSTH/OSTH(2),OEHR(2)
        COMMON /SC/SC(3),SP(3),PT(3),ST(3)
        COMMON /DT/DT,TI
        COMMON /NO/NO,SL,HO
        COMMON /LNO/LNO(2),HNO(2)
        COMMON /VERS/VERS,REV
        COMMON /CHARS/CARR,FF
        COMMON /OKH/OKH
        COMMON /PTS/PTS

        INTEGER NTTYPE,NOUT,YN,CAT,CUST,STATUS,REGEN
        INTEGER NUMNET,TVNET,HEX,RVNET,SNET,IVER
        INTEGER NUMCG,NETOP,BLK,AM,NATTN,ATTN,YY,AS,NCODE
        INTEGER STEPS,LREFER,HREFER,NTYPE,TYPE,NPROB
        INTEGER DVER,EVER,IBF,IERT,IERC

        COMMON /IBF/IBF,IERT,IERC
        COMMON /NTTYPE/NTTYPE(4)
        COMMON /NOUT/NOUT(3)
        COMMON /YN/YN(4)
        COMMON /CAT/CAT(3)
        COMMON /CUST/CUST(2)
        COMMON /STATUS/STATUS(9)
        COMMON /REGEN/REGEN(7)
        COMMON /NUMNET/NUMNET
        COMMON /TVNET/TVNET0,TVNET(60),RVNET(60),SNET(60)
        COMMON /HEX/HEX(15)
        COMMON /IVER/IVER(4)
        COMMON /NUMCG/NUMCG
        COMMON /NETOP/NETOP(35)
        COMMON /BLK/BLK(1)
        COMMON /AM/AM(12)
        COMMON /NATTN/NATTN
        COMMON /NCODE/NCODE
        COMMON /ATTN/ATTN(170)
        COMMON /YY/YY(10)
        COMMON /AS/AS(4)
        COMMON /STEPS/STEPS(20)
        COMMON /LREFER/LREFER(5),HREFER(5)
        COMMON /NTYPE/NTYPE
        COMMON /TYPE/TYPE(104)
        COMMON /DVER/DVER(4)/EVER/EVER(4)

        DOUBLE PRECISION BASE,VNET,CODE,ITELC,REPRB
        DOUBLE PRECISION HWARE,SWARE,STEXT,NTTEXT,NTKTXT

        COMMON /BASE/BASE(2,20)
        COMMON /VNET/VNET(60)
        COMMON /CODE/CODE(120)
        COMMON /ITELC/ITELC(5)
        COMMON /NPROB/NPROB
        COMMON /REPRB/REPRB(48)
        COMMON /HWARE/HWARE(5)
        COMMON /SWARE/SWARE(6)
        COMMON /NTTEXT/NTTEXT(4)/NTKTXT/NTKTXT(4)
        COMMON /STEXT/STEXT(20)


C
C       BEGIN MAIN PROGRAM VARIABLES
C
        INTEGER IM,J,NLINE,YMTOT,MYREG,N,PROD,NODE
        INTEGER TODAY,SKIP,BB,NDUP,NTUP,REPFLG,MTYPE
        INTEGER INFO(64),K,NUMBER,I,COC(2),CCC
        INTEGER TNUM,TIM1,RNAM(4),RFON(4),OSVER,XCOC,RCOD
        INTEGER TOT,SOPEN,SMONIT,DISC(169),STOTAL,F3(5),TOGO
        INTEGER SRT,X,SYS,DECIS,ESC
        INTEGER HOST,SITP(4),FLAG,UNAM,NCNAM(4)
        INTEGER SM,SD,SY,EM,ED,EY,D,NT
        INTEGER L,M,P,DDAT,NUD
        INTEGER TTIM,H2,H1,NDATE
        INTEGER SDAT,NUM1,ITEM1(19),ITEM2(19),ITEM(19),HIATTN
        INTEGER SITC(4),NOD1,HST1,CIRCKT(4),TROUB1(4)
        INTEGER REPN(4),REPF(4),CG,HH,LOATTN
        INTEGER COL,ROW(20),COR,TDAT
        INTEGER LIST(100),M1,M2,M3,M4,M5
        INTEGER TOT1,NTIM,TUS,TTL(21),SVER,FSTREC,RS
        INTEGER RECORD,SUB(25),ME,ATIM
        INTEGER STAT,Y,B,C,TOT2,LIC,XX,F2,JJ1,CSC
        INTEGER TELH(54),COMMT(12),DS1,TELM(4),LO,HO1,F1,CBAK(4),CHEX
        INTEGER ANS,NDAT,SEE,WELL,CHO,Z,MNAM(3)
        INTEGER IA1,IA2,IA3,IA4,IA5,IA6,V1,V2,V3,V4,V5,V6
        INTEGER CKT(4),TRB(4),DUP,DF
        INTEGER TUP,MAINT,CBY,DSP,REG
        INTEGER DRP,JM,JD,JY,COMMEN(12),TT
        INTEGER OFF,LEV,H3,H4,H5,Q,HN,BILL,INT,COMMNT(4)
        INTEGER PRO,TECH(3),COV,CNAM(3),KHST,STH,EHR,PORT
        INTEGER TYP,CDAT,LOC(4),VER,T40
        INTEGER HRGN,SRGN,ONUM(2),HQCC,CCOD,ORDER,PNAM(3)
        INTEGER WHO,IWHO,LIN1(16),SNAM(3)
        INTEGER ALREDY,TYPST,LONG
        INTEGER TIM2,MOTO,WK,QOS,QOSGY(4),PROBL(2),HDRCHK
        INTEGER YORN,IPXNA,CRDNM,PRTNM

        DOUBLE PRECISION NET,NNET
        REAL HOUR,TET,ELM,PERCEN,TASKT,TASKP,SRGNT


        DIMENSION SPEN(60)
        DIMENSION TOTAL(60)
        DIMENSION MONIT(60)

        COMMON /IWHO/IWHO/UNAM/UNAM(3)

        DATA NCODE/120/


        CALL DBSTRT(-1,1,-4,0,1,0,5,0,-1,0,-4,1,1,1,5,1)

59      TYPE 60
60      FORMAT(1X,'ENTER COMMAND... OR A ',1H(,'CR',1H),' : ',$)
        ACCEPT 65,ANS
        CALL HISET(ANS)
65      FORMAT(A5)
630     FORMAT('GO ONTYME',/,'NSC.NSSC',/,2A5)
602     FORMAT(/,':S * ',A5,/)
1160    FORMAT(I2,1X,I2,1X,I4)
1150    FORMAT(/1X,'ENTER START DATE : MM/DD/YYYY ? = ',$)
252     FORMAT(4A5)
250     FORMAT(1H+,'ENTER SOMETHING : ',$)

        IF (ANS.EQ.'Q') GOTO 99990
        IF (ANS.EQ.'8') GOTO 3200
        IF (ANS.EQ.'2') GOTO 3400
        IF (ANS.EQ.'3') GOTO 3470
        IF (ANS.EQ.'4') GOTO 3550
        IF (ANS.EQ.'MESSAGE') CALL ACCESS(MESS)
        IF (ANS.EQ.'7') GOTO 4505
        IF (ANS.EQ.'E') GOTO 4300
        GOTO 59


C
C       ROUTINE TO PUT ELM IN BASE7
C
4505    TYPE 4515
4515    FORMAT(/1X,'THIS ROUTINE WILL PUT THE ELM IN BASE7',/)
        DONE=0
        J=0
        Z=0
        CALL DBOPEN('(TNT)BASE7')
        CALL DBUPD(-1)
        CALL DBFIND(2,'GT',0,1,4,'GT',0,1,9,1,0)
        CALL DBNREC(NUMBER)
        IF (NUMBER.GT.0) GOTO 4516
        GOTO 4525
4516    TYPE 4005,NUMBER
4005    FORMAT(/3X,'THERE ARE ',I8,' RECORDS TO UPDATE',/,
     1  /4X,'TNUM  TIME',3X'PROC.',
     2  6X,'TO GO',3X,'J =',3X,'UPDATED',/)
        TOGO=10
        DO 4525 I=1,NUMBER
        CALL DBGREC($4525,I)
        CALL DBVAL(1,TNUM,2,SDAT,3,TIM1,4,DUP,5,TUP,9,ELM)
        TYPE 4003,TNUM,TUP
4003    FORMAT('+',1X,I6,2X,A5)
        CALL MTTR(SDAT,DUP,TIM1,TUP,ELM,HOUR)
        CALL DBCHNG(9,ELM)
        Z=Z+1
        J=J+1
        DONE=DONE+1
        MED=NUMBER-DONE
4197    FORMAT('+',14X,I6,6X,I5,3X,I4,4X,I5)
        IF (TOGO.EQ.DONE)TYPE 4197,DONE,MED,J,Z
        IF (TOGO.EQ.DONE) TOGO=TOGO+10
4525    CONTINUE
        TYPE 3268
        CALL DBUPD(0)
        CALL DBCLOSE
        GOTO 59
C***************************************************
3400    TYPE 3405
3405    FORMAT(/1X,'ROUTINE TO REPORT END OF MONTH MTTR BY REPAIR ',
     1  'GROUP.',/)
        CALL DBOPEN('(TNT)BASE7')
3406    IF (ANS.EQ.'2') CALL PERIOD(NDAT,NDUP,SM,SD,SY,EM,ED,EY)
        CALL DBFIND(4,'GE',NDAT,'AND',4,'LE',NDUP)
        CALL DBNREC(NUMBER)
        IF (NUMBER.GT.0) GOTO 3415
        TYPE 3211
        GOTO 3406
3415    IF (ED.LT.10) ENCODE(15,3420,FILE)EM,ED,EY
        IF (ED.GT.9) ENCODE(15,3422,FILE)EM,ED,EY
3420    FORMAT(I2,'0',I1,I2,'.MTR',5X)
3422    FORMAT(I2,I2,I2,'.MTR',5X)
        OPEN(8,FILE,OUTPUT)
        WRITE(8,3423)
3423    FORMAT(/,/,/,/,T17,'MTTR REPAIR TIMES FOR TYMNET SUPPORT GROUPS',
     1  /,/,T18,'PUBLIC AND PRIVATE NETWORK RESOLUTIONS',/,/,/)
        WRITE(8,3425)AM(SM),SD,SY,AM(EM),ED,EY,NUMBER
3425    FORMAT(3X,'THE FOLLOWING REPORT PRESENTS THE MEAN TIME ',
     1  'TO RESOLVE STATISTICS',/1X,'FOR ALL GROUPS SUPPORTING BT ',
     2  'TYMNET CUSTOMERS. THESE STATISTICS',/'ARE COMPILED FROM THE',
     3  ' BT TYMNET TROUBLE TICKET DATA BASES.',/,'THE TIMES DISPLAYED ',
     4  'TAKE INTO ACCOUNT RESPONSE TIME AND REPAIR TIME.',/,/,
     5  'THE FOLLOWING FACTS ARE FOR THE PERIOD  ',A3,1H-,I2,1H-,
     6  I2,1H,' THROUGH ',A3,1H-,I2,1H-,I2,1H.,/,'  DURING THIS ',
     7  'PERIOD, TICKETS CHANGED HANDS ',I5,' TIMES.',//1X'REPAIR',
     8  T16,'SVER 1',T31,'SVER 2',T46,'SVER 3',T61,'SVER 4',/1X,
     9  'GROUP',T16,'MTTR/TKTS',T31,'MTTR/TKTS',T46,'MTTR/TKTS',
     A  T61,'MTTR/TKTS',/1X,'------',T16,'---------',T31,'---------',
     B  T46,'---------',T61,'---------',/)
        DO 3460 I=1,NATTN
        IF (ATTN(I).EQ.'     ') GOTO 3460
        DO 3549 P=1,4
        CALL DBFIND(8,1,ATTN(I),1,4,'GE',NDAT,'AND',4,'LE',NDUP,
     1  1,9,'GT',0,1,12,'NE','TRACK',1,'SVER',1,P)
        CALL DBNREC(DOIT)
        IF (DOIT.GT.0) GOTO 3430
        HOUR=O
        ELM=0
        GOTO 3431
3430    CALL TOTELM(DOIT,ELM,HOUR,D)
3431    EVENTS(I,P)=DOIT
        MATX(I,P)=HOUR
3549    CONTINUE
        TYPE 3451,ATTN(I)
        WRITE(8,3450)ATTN(I),MATX(I,1),EVENTS(I,1),MATX(I,2),
     1  EVENTS(I,2),MATX(I,3),EVENTS(I,3),MATX(I,4),EVENTS(I,4)
3450    FORMAT(3X,A5,4X,F6.1,1H/,I4,4X,F6.1,1H/,I4,4X,F6.1,1H/,I4,
     1  4X,F6.1,1H/,I4)
        HOUR=0
        ELM=0
        IF(I.NE.100) GOTO 3460
        CALL DBCLOSE
        CALL DBOPEN('(TNT)BASE7')
        CALL DBFIND(4,'GE',NDAT,'AND',4,'LE',NDUP)
3460    CONTINUE
        WRITE(8,3465)
3465    FORMAT(/,/,':S CC ** MTTR')
        CLOSE(8)
        CALL DBCLOSE
        GOTO 59
C
C       ROUTINE TO REPORT MTTR BY PRODUCT TYPE
C
C***************************************************
3470    TYPE 3475
3475    FORMAT(/1X,'ROUTINE TO REPORT END OF MONTH MTTR BY PRODUCT.'/)
        CALL DBOPEN('(TNT)BASE4')
3480    IF (ANS.EQ.'3') CALL PERIOD(NDAT,NDUP,SM,SD,SY,EM,ED,EY)
        CALL DBFIND(49,'GE',NDAT,1,49,'LE',NDUP,1,54,'GT',0)
        CALL DBNREC(NUMBER)
        IF (NUMBER.GT.0) GOTO 3485
        TYPE 3211
        GOTO 3480
3485    IF (ED.LT.10) ENCODE(15,3490,FILE)EM,ED
        IF (ED.GT.9) ENCODE(15,3492,FILE)EM,ED
3490    FORMAT(I2,'0',I1,'PR.MTR',5X)
3492    FORMAT(I2,I2,'PR.MTR',5X)
        OPEN(8,FILE,OUTPUT)
        WRITE(8,3423)
        WRITE(8,3500)AM(SM),SD,SY,AM(EM),ED,EY
3500    FORMAT(3X,'THE FOLLOWING REPORT PRESENTS THE MEAN TIME '
     1  'TO RESOLVE STATISTICS',/1X,'FOR ALL PRODUCT TYPES.',
     2  ' THESE STATISTICS ARE COMPILED FROM THE '/1X,'BT ',
     3  'TYMNET TROUBLE TICKET DATA BASES. THE TIMES DISPLAYED ',
     4  'TAKE INTO',/1X,'ACCOUNT RESPONSE TIME AND REPAIR TIME.',//1X,
     5  'THE FOLLOWING FACTS ARE FOR THE PERIOD  ',A3,1H-,I2,1H-,
     6  I2,1H,' THROUGH ',A3,1H-,I2,1H-,I2,1H.,//1X,
     7  'PRODUCT',T16,'SVER 1',T31,'SVER 2',T46,'SVER 3',T61,
     8  'SVER 4',/1X'TYPE',T16,'MTTR/TKTS',T31,'MTTR/TKTS',T46,
     9  'MTTR/TKTS',T61,'MTTR/TKTS',/1X,'-------',T16,'---------',
     A  T31,'---------',T46,'---------',T61,'---------',/)
        DO 3540 I=1,NTYPE
        DO 3539 P=1,4
        CALL DBFIND(14,1,TYPE(I),1,49,'GE',NDAT,'AND',49,'LE',NDUP,1,
     1  54,'GT',0,1,'SVER',1,P,1,'HN','LT',5)
        CALL DBNREC(DOIT)
        IF (DOIT.GT.0) GOTO 3510
        HOUR=0
        ELM=0
        GOTO 3511
3510    CALL TOTELM(DOIT,ELM,HOUR,D)
3511    MATX(I,P)=HOUR
        EVENTS(I,P)=DOIT
3539    CONTINUE
3524    TYPE 3451,TYPE(I)
3451    FORMAT('+'5X,A5,$)
        WRITE(8,3450)TYPE(I),MATX(I,1),EVENTS(I,1),MATX(I,2),
     1  EVENTS(I,2),MATX(I,3),EVENTS(I,3),MATX(I,4),EVENTS(I,4)
        HOUR=0
        ELM=0
3540    CONTINUE
        WRITE(8,3465)
        CLOSE(8)
        CALL DBCLOSE
        GOTO 59
C
C       ROUTINE TO REPORT MTTR BY CLOSE OUT CODE
C
C**************************************************
3550    TYPE 3555
3555    FORMAT(/1X,'ROUTINE TO REPORT END OF MONTH MTTR BY CLOSE OUT',
     1  ' CODE.',/)
        CALL DBOPEN('(TNT)BASE4')
3560    IF (ANS.EQ.'4') CALL PERIOD(NDAT,NDUP,SM,SD,SY,EM,ED,EY)
        CALL DBFIND(49,'GE',NDAT,1,49,'LE',NDUP,1,54,'GT',0,1,53,3,5)
        CALL DBNREC(NUMBER)
        IF (NUMBER.GT.0) GOTO 3565
        TYPE 3211
        GOTO 3560
3565    IF (ED.LT.10) ENCODE(15,3570,FILE)EM,ED
        IF (ED.GT.9) ENCODE(15,3575,FILE)EM,ED
3570    FORMAT(I2,'0',I1,'CC.MTR',5X)
3575    FORMAT(I2,I2,'CC.MTR',5X)
        OPEN(8,FILE,OUTPUT)
        WRITE(8,3423)
        WRITE(8,3580)AM(SM),SD,SY,AM(EM),ED,EY,NUMBER
3580    FORMAT(2X,'THE FOLLOWING REPORT PRESENTS THE MEAN TIME ',
     1  'TO RESOLVE STATISTICS',/1X,'FOR ALL CLOSE OUT CODES.',
     2  'THESE STATISTICS ARE COMPILED FROM THE'/1X,'BT TYMNET TROU',
     3  'BLE TICKET DATA BASES. THE TIMES DISPLAYED TAKE INTO',/1X,
     4  'ACCOUNT RESPONSE TIME AND REPAIR TIME.',/,/1X'THE FOLLOWING',
     5  ' FACTS ARE FOR THE PERIOD  ',A3,1H-,I2,1H-,I2,1H,
     6  ' THROUGH ',A3,1H-,I2,1H-,I2,1H.,/1X'DURING THIS PERIOD ',
     7  'THERE WERE ',I4,' PROBLEMS EVALUATED.',/,/1X,
     8  'CLOSE OUT',T16,'SVER 1',T31,'SVER 2',T46,'SVER 3',
     9  T61,'SVER 4',/1X'CODE',T16,'MTTR/TKTS',T31,'MTTR/TKTS',T46,
     A  'MTTR/TKTS',T61,'MTTR/TKTS',/1X,'---------',T16,'---------',
     B  T31,'---------',T46,'---------',T61,'---------',/)
        NLH=0
3551    FORMAT(2A5)
        DO 93551 I=1,4
        TELH(I)=0
        ROW(I)=0
        ITEM(I)=0
93551   CONTINUE
        X=0
        DO 3610 I=1,NCODE
        X=X+1
        DO 3605 P=1,4
        DECODE(10,3551,CODE(I))TEMP
        IF (CODE(I).EQ.'          ') GOTO 3610
        CALL DBFIND(55,1,CODE(I),1,49,'GE',NDAT,1,49,'LE',NDUP,1,54,
     1  'GT',0,1,'SVER',1,P,1,'HN','LT',5)
        CALL DBNREC(DOIT)
        IF (DOIT.GT.0) GOTO 3585
        EVENTS(I,P)=0
        MATX(I,P)=0.0
        ELM=0
        HOUR=0
        GOTO 3586
3585    CALL TOTELM(DOIT,ELM,HOUR,D)
3586    MATX(I,P)=HOUR
        EVENTS(I,P)=DOIT
        TELH(P)=TELH(P)+(HOUR*DOIT)
        ROW(P)=ROW(P)+DOIT
        IF (DOIT.GT.0) ITEM(P)=ITEM(P)+1
3605    CONTINUE
3594    TYPE 3597,TEMP
3597    FORMAT(1X,2A5)
        IF(X.EQ.10) WRITE(8,93597)
93597   FORMAT(80X)
        IF(X.EQ.10) X=0
        WRITE(8,3496)TEMP,MATX(I,1),EVENTS(I,1),MATX(I,2),EVENTS(I,2),
     1  MATX(I,3),EVENTS(I,3),MATX(I,4),EVENTS(I,4)
3496    FORMAT(1X,2A5,2X,F6.1,1H/,I4,4X,F6.1,1H/,I4,4X,F6.1,1H/,I4,
     1  4X,F6.1,1H/,I4)
        NLH=0
        HOUR=0
        ELM=0
        TOT=0
3610    CONTINUE
        DO 3612 I=1,4
        TYMELH(I)=TELH(I)/ROW(I)
3612    CONTINUE
        WRITE(8,3614)TYMELH(1),ROW(1),TYMELH(2),ROW(2),TYMELH(3),
     1  ROW(3),TYMELH(4),ROW(4)
3614    FORMAT(T15,'---------',6X,'---------',6X,'---------',6X,'---',
     1  '------'/1X,'OVER ALL',T15,F5.1,1H/,I4,5X,F5.1,1H/,I4,5X,F5.1,
     2  1H/,I4,5X,F5.1,1H/,I4)
        SM=EM-1
        IF (EM.EQ.12)SM=1
        IF (ED.LT.10) ENCODE(15,3570,F3)SM,ED
        IF (ED.GT.9) ENCODE(15,3575,F3)SM,ED
        OPEN(7,F3,RANDIN,SYMBOLIC,ERR=3613)
        GOTO 3617
3613    TYPE 3618
3618    FORMAT('    PREVIOUS MONTH COULD NOT BE LOCATED !!! ',/3X,
     1  '   NO PROBLEM - JUST A NOTICE.')
        GOTO 3630
3617    WRITE(8,3619)
3619    FORMAT(/1X,'THE PREVIOUS MONTHS DATA IS ATTACHED FOR ',
     1  'COMPARISION.',/)
        IPOS1=1
        M=0
        L1=80
        L2=5
        IPOS2=1
        ENCODE(5,3620,A2)
3620    FORMAT('FACTS')
3622    READ(7,3644,ERR=3630,END=3630)LIN1
3644    FORMAT(16A5)
        J = IINDEX(LIN1,IPOS1,L1,A2,IPOS2,L2)
        IF (J.EQ.0) GOTO 3622
        WRITE(8,3644)LIN1
        DO 3626 X=1,20
        READ(7,3644,ERR=3630,END=3630)LIN1
        WRITE(8,3644)LIN1
3626    CONTINUE
        CLOSE(7)
3630    WRITE(8,3465)
        CLOSE(8)
        CALL DBCLOSE
        GOTO 59
C
C       ROUTINE TO CREATE THE END OF MONTH MTTR STATS.
C
3200    TYPE 3205
3205    FORMAT(/2X,'THIS WILL CREATE MTTR STATS FOR A GIVEN PERIOD',/2X,
     1  'YOU DEFINE THE BEGINNING POINT, AND THE END POINT.'
     2  /2X,'DEPENDING ON THE PERIOD THIS OPTION MAY TAKE AWHILE',
     3  /2X,'TO COMPLETE.')
        TYPE 250
        CALL ECHO(0)
        ACCEPT 252,PASS
        CALL ECHO(1)
3204    TYPE 1150
        CALL DBOPEN('(TNT)BASE4')
        TOT=0
        TOT1=0
        BB=0
        TOT2=0
        ACCEPT 1160,SM,SD,SY
        TYPE 3210
3210    FORMAT('+ENTER END DATE   : MM/DD/YYYY ? = ',$)
        ACCEPT 1160,EM,ED,EY
        IF (EM.EQ.0) EY=2010
        CALL DBDATN(NDAT,SM,SD,SY)
        CALL DBDATN(NDUP,EM,ED,EY)
        SY=SY-1900
        EY=EY-1900
        CALL DBFIND(49,'GE',NDAT,1,49,'LE',NDUP)
        CALL DBNREC(NUMBER)
        IF (NUMBER.EQ.0) GOTO 3204
        DO 3213 Y=1,4
        CALL DBFIND(49,'GE',NDAT,'AND',49,'LE',NDUP,1,52,1,Y,1,
     1  54,'GT',0)
        CALL DBNREC(DOIT)
        IF (DOIT.GT.0) GOTO 3212
        GOTO 3213
3211    FORMAT(/1X,'RECHECK YOUR DATES - NO INFORMATION WAS FOUND')
3212    CALL TOTELM(DOIT,ELM,HOUR,D)
        TYMTOT(Y)=DOIT
        TYMELH(Y)=HOUR
3213    CONTINUE
        TOT=0
        TOT2=0
        DO 3208 B=1,NTYPE
        CALL DBFIND(49,'GE',NDAT,'AND',49,'LE',NDUP,1,14,1,TYPE(B),
     1  1,'ELM','GT',0)
        CALL DBNREC(TYMTYP(B))
        TOT2=TOT2+TYMTYP(B)
        IF (TYMTYP(B).EQ.0) GOTO 3208
        DOIT=TYMTYP(B)
        CALL TOTELM(DOIT,ELM,HOUR,D)
        TELH(B)=HOUR
3208    CONTINUE
        ENCODE(25,3207,F3)HEX(SM),SY
3207    FORMAT('ALL',A1,I2,'.MTR',15X)
        OPEN(7,F3,OUTPUT)
        WRITE(7,3202)AM(SM),SD,SY,AM(EM),ED,EY
3202    FORMAT(/,/,/,/20X,'MEAN TIME TO RESOLVE SUMMARY',/,/,/3X,
     1  'THE FOLLOWING IS A LIST OF ALL MTTR TIMES FOR OUR PRIVATE NET',
     2  ' CUSTOMERS.',/,'THIS IS A SUMMARY OF ALL THE REPORTS THAT ',
     3  'ARE SENT OUT TO EACH CUSTOMER.',/,'THIS REPORT COVERS '
     4  'THE PERIOD BEGINNING ',A3,1H-,I2,1H-,I2,' AND ENDS ON ',A3,1H-,
     5  I2,1H-,I2,1H.,/,/,/,/1X,'NETWORK',T27,
     6  'CASES OF',/1X'NAME',T17,'SEVERITY',T27,'TROUBLE',
     7  T37,'ELAPSED TIME',/)
        I=1
        WRITE(7,3120)I,TYMTOT(1),TYMELH(1)
        DO 3130 I=2,4
        WRITE(7,3114)I,TYMTOT(I),TYMELH(I)
3120    FORMAT('AVG ALL NETS',T23,I1,T26,I4,T35,F8.1,' HOURS')
3130    CONTINUE
        PERCEN=(TOT2/TOT2)*100
        DT=TOT2
        WRITE(7,3242)DT,PERCEN
        DO 3300 I=1,NUMNET
        IF ((I.EQ.1).OR.(I.EQ.2).OR.(I.EQ.3).OR.(I.EQ.7).OR.
     1  (I.EQ.21)) GOTO 3131
        GOTO 3300
3131    IF ((FLAG.EQ.1).AND.(I.GT.1)) GOTO 3300
        ENCODE(25,3214,FILE)TVNET(I),HEX(SM),SY
3214    FORMAT(A3,A1,I2,'.MTR',15X)
        TYPE 3209,FILE(1),FILE(2)
        OPEN(8,FILE,T)
        WRITE(8,3215)FF,TVNET(I)
3209    FORMAT(3X,A5,A5,' REPORT',$)
3215    FORMAT(/,A5,/10X,'TYMNET - MEAN TIME TO REPAIR - STATISTICS',
     1  /,/12X,'THIS IS THE MTTR COMPARISON FOR ',A3,'NET',/,/,/)
3220    DO 3240 J=1,4
        ELM=0
        HOUR=0
        CALL DBFIND(49,'GE',NDAT,'AND',49,'LE',NDUP,1,52,1,J,1,9,1,
     1  VNET(I),1,54,'GT',0)
        CALL DBNREC(DOIT)
        IF (DOIT.GT.0) CALL TOTELM(DOIT,ELM,HOUR,D)
        TOT=TOT+DOIT
        CALL DBSET(1)
        WRITE(8,3216)AM(SM),SD,SY,AM(EM),ED,EY,DOIT,J,HOUR,
     1  TYMTOT(J),TYMELH(J)
3216    FORMAT(/,/,/2X,'DURING THE PERIOD BEGINNING ',A3,1H-,I2,1H-,I2,
     1  1X,'AND ENDING ON ',A3,1H-,I2,1H-,I2,/2X,'TYMNET WORKED ON',
     2  1H ,I4,' CASES OF TROUBLE, WITH A SEVERITY LEVEL OF ',I1,1H.,
     3  /2X,'THE MEAN TIME TO REPAIR FOR THESE PRODUCTS ',
     4  'WAS ',F8.1,' HOURS.',
     5  /,/2X,'THIS COMPARES WITH THE OVERALL ',
     6  'STATISTICS OF TYMNET',/2X,'IN THIS MANNER: OVERALL TYMNET ',
     7  'WORKED ON ',I4,' CASES OF TROUBLE',/2X,'FOR THIS',
     8  ' SEVERITY LEVEL.  THE MEAN TIME TO REPAIR FOR ALL OF'/2X,
     9  'THESE PROBLEMS WAS ',F8.1,' HOURS.')
        BB=BB+DOIT
        DECODE(10,3551,VNET(I))TEMP
        WRITE(7,3112)TEMP,J,DOIT,HOUR
3112    FORMAT(/,/1X,2A5,T23,I1,T26,I4,T35,F8.1,' HOURS')
        GOTO 3117
3115    WRITE(7,3114)J,DOIT,HOUR
3114    FORMAT(T23,I1,T26,I4,T35,F8.1,' HOURS')
        IF (ANS.EQ.'5') GOTO 3235
3117    IF (DOIT.EQ.0) GOTO 3235
        WRITE(8,3217)DOIT,J
3217    FORMAT(/1X'THE FOLLOWING IS THE BREAKDOWN OF THE ',I3,
     1  ' CASES OF SEVERITY ',I1,' PRODUCTS',/2X,'TICKET#   START ',
     2  'DATE/TIME  NODE    HOST  SEV.  TYPE     ELAPSED TIME'/)
        CALL DBFIND(49,'GE',NDAT,'AND',49,'LE',NDUP,1,52,1,J,1,9,1,
     1  VNET(I),1,54,'GT',0)
        CALL DBNREC(RECORD)
        IF (RECORD.EQ.0) GOTO 3235
        CALL DBSORT('ELM','ASCEN')
        DO 3235 K=1,RECORD
        CALL DBGREC($3235,K)
        CALL DBVAL(1,TNUM,5,SDAT,6,TIM1,40,NODE,42,HOST,54,ELM,14,PROD)
        HOUR=ELM/60
        CALL DBNDAT(SDAT,IM,ID,IY)
        IY=IY-1900
        WRITE(8,3219)TNUM,IM,ID,IY,TIM1,NODE,HOST,J,PROD,HOUR
3219    FORMAT(1X,I8,3X,I2,1H-,I2,1H-,I2,1X,A5,2X,I5,2X,I6,4X,I1,3X,
     1  A5,2X,F8.1,' HOURS')
3235    CONTINUE
3240    CONTINUE
        PERCEN=(BB/TOT2)*100
        WRITE(7,3242)BB,PERCEN
3242    FORMAT(T10,'TOTALS',T26,'-----',/T26,I4,3X,1H(,F6.1,3H %),/)
        BB=0
        WRITE(8,3245)FF
3245    FORMAT(A5,/)
        WRITE(8,3248)
3248    FORMAT(/3X,'THE FOLLOWING CHART SHOWS A BREAKDOWN OF PRODUCT',
     1  ' TYPE.',/,/5X,'EACH PRODUCT IS COMPARED TO THE TOTALS FOR ',
     2  'ALL NETWORKS',/6X'PLEASE NOTE THIS CHART ONLY CONTAINS THE',
     3  /6X,'CATAGORIES WHICH HAD PROBLEMS EACH MONTH.',/,/2X,'PRODUCT ',
     4  3X,'YOUR',32X,'ALL',/4X,'TYPE',4X,'TOTALS',30X,'TOTALS',/)
        TOT1=0
        DO 3260 C=1,NTYPE
        CALL DBFIND(49,'GE',NDAT,1,49,'LE',NDUP,1,14,1,TYPE(C),1,
     1  9,1,VNET(I),1,54,'GT',0)
        CALL DBNREC(YMTOT)
        IF (YMTOT.EQ.0) GOTO 3254
        DOIT=YMTOT
        CALL TOTELM(DOIT,ELM,HOUR,D)
3254    IF ((YMTOT.GT.0).OR.(TYMTYP(C).GT.0)) WRITE(8,3255)TYPE(C),
     1  YMTOT,HOUR,TYMTYP(C),TELH(C)
3255    FORMAT(2X,A5,6X,I3,4X,F8.1,'HOURS',18X,I3,4X,F8.1,' HOURS')
        TOT1=TOT1+YMTOT
        ELM=0
        HOUR=0
3260    CONTINUE
        WRITE(8,3262)TOT1,DT
3262    FORMAT(/1X,'TOTALS     ',I4,34X,I4)
        WRITE(8,602)TVNET(I)
        CLOSE(8)
        TYPE 3265
3265    FORMAT('+',' WRITTEN')
3300    CONTINUE
        CLOSE(7)
        OPEN(8,'MTTR.TMP',OUTPUT)
        WRITE(8,630)PASS
        DO 3270 I=1,NUMNET
C       IF (I.EQ.23) GOTO 3270
        ENCODE(25,3214,FILE)TVNET(I),HEX(SM),SY
        WRITE(8,3269)FILE(1),FILE(2)
3269    FORMAT(A5,A5)
3270    CONTINUE
        WRITE(8,2371)
2371    FORMAT(/,'DEL MTTR.TMP')
        CLOSE (8)
        TYPE 3268
3268    FORMAT(/1X'JOB COMPLETE !',/)
        CALL DBCLOSE
        GOTO 59


C
C       ROUTINE TO PUT ELM INTO THE DATA BASE
C
4300    TYPE 4305
4305    FORMAT(/2X,'THIS ROUTINE WILL PUT THE ELAPSED TIME INTO',
     1  /2X,'THE DATA BASE',/)
        CALL DBOPEN('(TNT)BASE4')
        CALL DBSET(1)
        CALL DBUPD(-1)
        CALL DBFIND(54,1,0,1,49,'GT',0)
        CALL DBNREC(NUMBER)
        IF (NUMBER.EQ.0) GOTO 59
        Z=0
        J=0
C       TYPE 4004
4004    FORMAT(/1X'DO YOU WANT TO MAKE CHANGES ? ',$)
C       ACCEPT 3888,W
3888    FORMAT(I1)
        TYPE 4005,NUMBER
        DONE=0
        Z=0
        J=0
        TOGO=10
        DO 4320 I=1,NUMBER
        CALL DBGREC($4951,I)
        CALL DBVAL(1,TNUM,5,SDAT,6,TIM1,49,DUP,50,TUP,54,ELM,
     1  35,V6,39,V4)
        TYPE 4003,TNUM,TUP
        CALL MTTR(SDAT,DUP,TIM1,TUP,ELM,HOUR)
        CALL VDIS(V4,V6,ELM)
        CALL DBCHNG(54,ELM)
        Z=Z+1
        J=J+1
C318    DONE=DONE+1
        MED=NUMBER-I
4318    IF (TOGO.EQ.I) TYPE 4197,I,MED,J,Z
        IF (TOGO.EQ.I) TOGO=TOGO+10
4320    CONTINUE
        TYPE 4205
4205    FORMAT(/4X,'JOB IS COMPLETE !.'/)
        CALL DBCLOSE
        GOTO 59
4951    TYPE 4952,TNUM
4952    FORMAT(/,/5X,'PROBLEM WITH TICKET NUMBER : ',I8,/)
        CALL DBCLOSE
        CALL DBCLOSE
        GOTO 59
C

99990   CALL DBEND
        STOP
        END



C
C       SUBROUTINE TO FIND BEGINNING PERIOD AND END PERIOD
C
        SUBROUTINE PERIOD(NDAT,NDUP,SM,SD,SY,EM,ED,EY)
C
        INTEGER NDAT,NDUP,SY,SM,SD,EY,EM,ED
C
        TYPE 100
100     FORMAT(1X,'ENTER START DATE : MM/DD/YYYY ? = ',$)
        ACCEPT 110,SM,SD,SY
110     FORMAT(I2,1X,I2,1X,I4)
        TYPE 120
120     FORMAT('+ENTER END DATE   : MM/DD/YYYY ? = ',$)
        ACCEPT 110,EM,ED,EY
        IF (EM.EQ.0) EY=2010
        CALL DBDATN(NDAT,SM,SD,SY)
        CALL DBDATN(NDUP,EM,ED,EY)
        SY=SY-1900
        EY=EY-1900
        RETURN
        END



C
C       SUB-ROUTINE TO DETERMINE ALL ELM'S
C
        SUBROUTINE TOTELM(DOIT,ELM,HOUR,D)
C
        INTEGER I,L,A,DOIT
        REAL STDV,MEDM,E,D,C,B,ELM
10      FORMAT(I5)
        HOUR=0
        ELM=0
        DO 200 A=1,DOIT
        CALL DBGREC($200,A)
        CALL DBVAL('ELM',B)
        ELM=ELM+B
200     CONTINUE
        ELM=ELM/DOIT
205     FORMAT(/1X,'STANDARD DEV.   ',F40.20,/)
        HOUR=ELM/60
        RETURN
        END
C
C       SUBROUTINE TO ADD, DELETE, AND DISPLAY AN ACCESS MESSAGE
C       FOR A SPECIFIC USERNAME.
C
        SUBROUTINE ACCESS(MESS)

        INTEGER MESS(64),ILIN,N,J,USRNAM(3),NUMBER,IREC,CHOICE,NMBR

5       FORMAT(A5)
6       FORMAT(3A5)
        CALL DBOPEN('(NSSC)ACCMSG','(NSSC)NPAP')
9       CALL DBSET(1)
        TYPE 10
10      FORMAT(/1X,'DO YOU WANT TO ADD(A), DELETE(D), OR SEE(S) ',
     1  'AN ACCESS MESSAGE? ',$)
        ACCEPT 5,CHOICE
        CALL HISET(CHOICE)
        IF ((CHOICE.NE.'A').AND.(CHOICE.NE.'D').AND.(CHOICE.NE.'S'))
     1  GOTO 999
        TYPE 20
20      FORMAT(/1X,'ENTER THE LOGIN USERNAME: ',$)
        ACCEPT 6,USRNAM
        CALL HISET(USRNAM)
        IF(USRNAM(1).EQ.'ALL  ') CALL DBFIND('ALL')
        IF(USRNAM(1).EQ.'ALL  ') GOTO 400
        TYPE 7,USRNAM
7       FORMAT(/1X,3A5,':',/)
        CALL DBFIND(1,1,USRNAM)
        CALL DBNREC(NUMBER)
        IF((NUMBER.EQ.0).AND.(CHOICE.NE.'A')) GOTO 100
        IF((NUMBER.EQ.1).AND.(CHOICE.EQ.'D')) GOTO 125
        IF((NUMBER.EQ.1).AND.(CHOICE.EQ.'S')) GOTO 150
        IF (NUMBER.GT.1) GOTO 175
        IF(((NUMBER.EQ.1).OR.(NUMBER.EQ.0)).AND.(CHOICE.EQ.'A')) GOTO
     1  300
100     TYPE 101,USRNAM
101     FORMAT(/1X,'NO RECORD FOUND FOR USERNAME ',3A5)
        GOTO 9
125     CALL DBCHNG(2,' ')
        GOTO 9
150     CALL DBGREC($9,NUMBER)
        CALL DBVAL(2,MESS)
        DO 160 ILIN=1,4
        N=(ILIN*16)-15
        IF (MESS(N).EQ.'.    ') GOTO 159
        TYPE 155,(MESS(J),J=N,N+15)
155     FORMAT(1X,15A5,A4)
        GOTO 160
159     ILIN=4
160     CONTINUE
        GOTO 9
175     TYPE 176
176     FORMAT(/1X,'OOPS!!!...WE FOUND MULTIPLE RECORDS',/,
     1  /1X,'PLEASE REPORT THIS TO NSSC IMMEDIATELY!')
        GOTO 999
300     TYPE 301
301     FORMAT(1H+,'ENTER YOUR MESSAGE: ',/,$)
        DO 330 ILIN=1,4
        N=(ILIN*16)-15
        ACCEPT 325,(MESS(J),J=N,N+15)
325     FORMAT(16A5)
        NLINE=ILIN
        IF (MESS(N).NE.'.    ') GOTO 330
        ILIN=4
330     CONTINUE
        IF (NUMBER.EQ.0) CALL DBADD(1,USRNAM,2,MESS)
        IF (NUMBER.EQ.0) GOTO 340
        CALL DBCHNG(2,MESS)
340     CALL DBSET(2)
        CALL DBFIND(1,1,USRNAM)
        IF (USRNAM(1).EQ.'ALL') CALL DBFIND('ALL')
        CALL DBNREC(NMBR)
        IF (NMBR.GT.0) CALL DBCHNG(13,0)
        GOTO 9
400     CALL DBNREC(NUMBER)
        IF(CHOICE.EQ.'D') GOTO 125
        IF(CHOICE.EQ.'A') GOTO 300
        TYPE 425
425     FORMAT(/1X,'MESSAGES ARE CURRENTLY IN THE DATABASE FOR THE',
     1  ' FOLLOWING USERS: ',/)
        CALL WAIT(2.0)
        DO 450 IREC=1,NUMBER
        CALL DBGREC($9,IREC)
        CALL DBVAL(1,USRNAM,2,MESS)
        IF ((MESS(1).EQ.'     ').OR.(MESS(1).EQ.'.    ')) GOTO 440
        TYPE 7,USRNAM
        DO 440 ILIN=1,4
        N=(ILIN*16)-15
        IF (MESS(N).EQ.'.    ') GOTO 439
        TYPE 155,(MESS(J),J=N,N+15)
        GOTO 440
439     ILIN=4
440     CONTINUE
450     CONTINUE
        GOTO 9
999     CALL DBCLOS
        RETURN
        END

C       ROUTINE TO FORCE 5 CHARACTERS TO UPPER CASE
C
        SUBROUTINE HISET(IN)
C
        INTEGER IN,PCE,I,K
C
100     DO 150 I=1,5
        CALL GETC(I,IN,PCE)
        IF ((PCE.GE."141).AND.(PCE.LE."172)) PCE=PCE-"040
        CALL PUTC(I,IN,PCE)
150     CONTINUE
        RETURN
        END

       SUBROUTINE MTTR(SDAT,DUP,TIM1,TUP,ELM,HOUR)
C
C       SUBROUTINE TO CALCULATE ELAPSED TIME OF A TICKET
C
        INTEGER SDAT,TIM1,TUP,DUP,EH,EM,SH,SM
        INTEGER NDUP,NTUP
        REAL HOUR,ELM
C
        IF (ELM.GT.0) GOTO 105
        IF (DUP.GT.0) GOTO 50
        CALL RTIM(NTUP,NDUP)
        DECODE(5,100,NTUP)EH,EM
        GOTO 75

50      NDUP=DUP
        DECODE(5,100,TUP)EH,EM
100     FORMAT(I2,1X,I2)
75      DECODE(5,100,TIM1)SH,SM
        IF (NDUP.GT.SDAT) GOTO 120
        IF (EH.GT.SH) ELM=(60-SM)+EM+((EH-SH)*60)-60
        IF (EH.EQ.SH) ELM=EM-SM
        IF ((EH.EQ.SH).AND.(EM.EQ.SM)) ELM=1
        IF (ELM.LT.6) ELM=6
105     HOUR=ELM/60
        RETURN

120     ELM=(((NDUP-SDAT)-1)*1440)+(EH*60)+EM+((23-SH)*60)+(60-SM)
        IF (ELM.LT.0) ELM=0
125     HOUR=ELM/60
        RETURN

        END

        SUBROUTINE RTIM(TIM1,SDAT)
C
C       ROUTINE TO PULL UP THE DATE REGARDLESS OF TIME ZONE
C
        INTEGER IA1,IA2,IA3,IA4,IA5,IA6,TIM1,SDAT

        CALL FGMT(IA1,IA2,IA3,IA4,IA5,IA6)
        IF (IA5.GT.9) ENCODE(5,50,TIM1)IA4,IA5
        IF (IA5.LT.10)ENCODE(5,52,TIM1)IA4,IA5
52      FORMAT(I2,2H:0,I1)
50      FORMAT(I2,1H:,I2)
        IA3=IA3+1900
        CALL DBDATN(SDAT,IA1,IA2,IA3)
        RETURN

        END


        SUBROUTINE FGMT( MONTH,DAY,YEAR, HOUR,MINUTE,SECOND )
        INTEGER MONTH,DAY,YEAR,HOUR,MINUTE,SECOND
        INTEGER DT(2),TM,TM1,TM2,H1,H2,MMM,MON(12),I
        DATA (MON(I),I=1,12)/
     +  "453035620100, "433134220100, "467036220100,
     +  "407416220100, "467037120100, "453535620100,
     +  "453535420100, "407534720100, "517136020100,
     +  "477076420100, "473376620100, "423134320100/
C     + 'Jan','Feb','Mar','Apr','May','Jun',
C     + 'Jul','Aug','Sep','Oct','Nov','Dec'/

        CALL TIME(TM1)
        CALL DATE(DT)
        CALL TIME(TM2)

10      FORMAT(I2,1X,I2)
20      FORMAT(I2,1X,A3,1X,I2)
        DECODE(2,10,TM1)H1
        DECODE(2,10,TM2)H2
        IF ( H2 .LT. H1 ) CALL DATE(DT)

        DECODE(5,10,TM2)HOUR,MINUTE
        DECODE(9,20,DT)DAY,MMM,YEAR

        DO 30 I=1,12
        IF ( MMM .EQ. MON(I) ) GOTO 40
30      CONTINUE
40      MONTH=I
        SECOND=0
        RETURN
        END


        SUBROUTINE VDIS(V4,V6,ELM)
C
C       ROUTINE TO CHECK ELM MINUS V6 ... UNLESS V6*60 IS MORE THAN
C       ELM. WE ALSO CLEAR OUT V4 WILL WE ARE AT IT.
C
        INTEGER V4,V6
        REAL ELM
C
        IF (ELM.GT.V6*60) GOTO 938
        IF (V6*60-ELM.LT.60) V6=V6-1
        IF (V6*60-ELM.GE.60) V6=V6-(((V6*60-ELM)/60)+1)
938     V4=0
        ELM=ELM-V6*60
        RETURN

        END

 R;L1